%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Roman
%%Title: cran.pdf
%%Creator: Adobe Acrobat 11.0.15
%%For: mghaderi
%%CreationDate: 2016-03-21, 3:26:07 PM
%%BoundingBox: 0 0 329 165
%%HiResBoundingBox: 0 0 329 165
%%CropBox: 0 0 329 165
%%LanguageLevel: 2
%%DocumentNeededResources: (atend)
%%DocumentSuppliedResources: (atend)
%%DocumentNeededFeatures: (atend)
%%DocumentSuppliedFeatures: (atend)
%%DocumentData: Clean7Bit
%%Pages: (atend)
%%DocumentProcessColors:  Cyan Magenta Yellow Black
%%DocumentCustomColors: (atend)
%%EndComments
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$None SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
[/NamespacePush pdfmark_5
[/_objdef {Doc_Metadata} /type /stream /OBJ pdfmark_5
[{Doc_Metadata} 1014 (% &end XMP packet& %) ReadBypdfmark_5_string
<?xpacket begin='﻿' id='W5M0MpCehiHzreSzNTczkc9d'?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.4-c005 78.147326, 2012/08/23-13:03:03        ">
 <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
  <rdf:Description rdf:about=""
    xmlns:pdf="http://ns.adobe.com/pdf/1.3/"
    xmlns:xmp="http://ns.adobe.com/xap/1.0/"
    xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
    xmlns:dc="http://purl.org/dc/elements/1.1/"
   pdf:Producer="MiKTeX GPL Ghostscript 9.05"
   xmp:ModifyDate="2016-03-21T15:25:54-06:00"
   xmp:CreateDate="2016-03-21T15:25:54-06:00"
   xmp:CreatorTool="Adobe Acrobat 11.0.15"
   xmpMM:DocumentID="uuid:fe18c7e3-f206-11e5-0000-38f4a2e9bf41"
   xmpMM:InstanceID="uuid:fe18c7e3-f206-11e5-0000-38f4a2e9bf41"
   dc:format="application/pdf">
   <dc:title>
    <rdf:Alt>
     <rdf:li xml:lang="x-default">cran.pdf</rdf:li>
    </rdf:Alt>
   </dc:title>
   <dc:creator>
    <rdf:Seq>
     <rdf:li>mghaderi</rdf:li>
    </rdf:Seq>
   </dc:creator>
  </rdf:Description>
 </rdf:RDF>
</x:xmpmeta>
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
<?xpacket end='w'?>


% &end XMP packet& %

[{Doc_Metadata} 2 dict begin /Type /Metadata def /Subtype /XML def currentdict end /PUT pdfmark_5
[/Document 1 dict begin /Metadata {Doc_Metadata} def currentdict end /BDC pdfmark_5
[/NamespacePop pdfmark_5
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Core/capture_mysetup gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
Adobe_AGM_Core/ps gx
gsave
/0 
<<
/Name (Black)
/0 
[/DeviceCMYK] /CSA add_res
/CSA /0 get_csa_by_name
/MappedCSA /0 /CSA get_res
/TintMethod /Subtractive
/TintProc null
/NComponents 4 
/Components [ 0 0 0 1 ] 
>>
/CSD add_res
grestore
Adobe_AGM_Core/pt gx
%%EndPageSetup
1 -1 scale 0 -165 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 165 li
329 165 li
329 0 li
cp
clp
0 165 mo
803 165 li
803 -106 li
0 -106 li
cp
false sop
1 /0 /CSD get_res sepcs
0 sep
ef
gsave
72.2 54.08 mo
36.9199 54.08 li
36.9199 12.8 li
72.2 12.8 li
72.2 54.08 li
clp
36.49 54.51 mo
72.61 54.51 li
72.61 12.39 li
36.49 12.39 li
cp
/1 
[/DeviceCMYK] /CSA add_res
/1 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 0 165 ]ct
[36.12 0 0 42.12 36.49 110.49 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 110 
/H 128 
/M[110 0 0 -128 0 128 ]
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 110 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 110 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 110 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 110 string /rs cvx /pop cvx] cvx
]
/O 3
>>
%%BeginBinary: 1
img
mf3FrTm$XS!!<:+_(FLD"98^fC'23N!s2<!.*Vad!!!&Z!87DQ!SdYW$))PGdfAb8!s2ZB/_pC/#``X%
_>sQ8!s2<!.#@rd!!!&3!!!&]!;Z[!!\1tZM[7&t"Tqlkgcu&%!!NEMWS2\(r;a_8"TqNE_)VY<!3?2"
!SROh!!NB[]D.^7aT1u6"V5P8i)L!A!!NBUV;$_E]`80E@a)hb!!_H`!!/eoo)Jdm!<*#0!!30$!TO.]
.(SsNKGD*!"UeZ-fMD_3!!FOAeoVSr!6P9F$<,Nj7g-R,[/g4-ciE>2!s&E&!p'Cb#/9qi$,-E;!!E@"
p"D:b!!EJ'gis+8!!E?nfYB0:!.k4I!<3)/!<3)]!!Et:pm2]i!!3-.#1!8N"V1b2!!EC8mE6X8!!En#
gP$:7!!*E2o)RSH!X&r8p](F!=jjSq[fF5ErrMfnrrLLIr;Zg!p&G'njo>MsOT)=*p](Et15ep1ci=/*
RSs@a!!*U[!q<iFkl:htJ)Q_8p](Et/:0hfci=/$Le7gF!!EaMe>=5W!/LXT!W<#n!!!&E!!30%!qlWo
!U0Re#]8tP-hmZF"&dJ6C]jS8eGo_8h;NVap](F4SGeuklMq%m@*u;*p](I"8[m/U!p]jK!!G3ta(knS
!!F!mhhr&M!6bHC!VHHm!R1WE!W<#p!!<6%!<MKd"9CaDj<XL#"Tr#iqg&^t!!NO#h=m!<p](F4d.)/\
r;c]ppAb<s35io]p](I!;97R0%*nnW"@U/]IgPlM";JArAH_,qQiR-eo`,'p!<<0!!7:fG!VZTn!UB^f
'tWg5p](I$>3>*T!UBaF!!G:9oo'OY!!FJ(fKK?(!!<n1d7a67"U%ZFc;=Vr!:p0n1;_[k&GQ5.*QPoR
!M]YO!<3)l!<3)B!;url!<3*!!:Tsk"c2i1&,?2."'Xa:;oo"B/&(G+%ep#+?0e^/mf3InGh@BQq#CO!
:rp@CaT)GkW6obtp](Coc^PR(!2BPn!VQNn!Up*B!!<6&!!2cnrrMQg"9DBj_'f$Y"Thlhfi&.6!9jId
0=^J%"Si$#&X;m2!V$-m!D(eA,P_<C!`7%S8dEZBq>^XJU=4,bq#CO.K@X`;RfMUOrrMfn!s&E&!lk<?
!VZTo!VQNi!!F=foMYhe!!GmNn5fe6!!NE\b4K`Uq>^X!1!f;FnGi\1\(=4RquH]r"@:#V9a&K:"Tg<^
en+sZ!!E<Q\'cn[!3H8$!VQNn!Ta==!!!&m!!!&h!!EIWp7_Ta!!NBR`V4'Iq>^U"02W)7!;c`t?Vh()
!!GULlqIQW!!@36\-qm."9`f!NWJtV"T]sPgKajV!!<<Q7g[lL!`__rq#COYb0`TYq#CM,fqJh;!:g-i
!VHEm!R1TE!VQNn!VQKp!<</m!!<6]dG4dAq#CO2T(7R:q>^X$;UaD?g&M5ul?a3@!!NC.m)Um^q>^X0
_!bS2o`,*q1:Y1<q#CO0N7N+QrW)ls"9_<-_ALu,"16?j&c)J2!E.:L.foJH":qK[;Zb8F\,cO0p&P'm
q#CKu!!*,`!:p3j!VQNn!VcZp!V-3m$]4Fcq#CNuEq#e<q>^[*ET5ba#hf7[6,DphPnNon"9Wl=SeCi!
"$Z4`+S>^:$@13*q#CNuA^lbSq>^[)A]MVi#hf7]3i^S[&GcA0")6>E&H2\-!!>10TcAsjr;cftp&P'm
q>^["!!*'"!nmYQ!VZTo!VZTo!V??o.cS)Zq#CCL"7+/e!W)j##(#dq:C,VR"TgBdorJ]#!!<q2o3D(k
"9Y%\?39g#"!u!b(\n%6/C1[T!W)j$#&Mf-70`hH!!NESU">Y@q>^U1Ok3J+!!ECYe5HFh!5JR7!VcZo
!Vl]t!<<-$g]70N!W`9%p]1<ppAk3ooDeuRoOA""!!<SGnS@t$"9i?&lo*Ao"<GAWRgo8q"TSNag#*M=
!!=b9[2/H9"+Aa%!r;m!$*D`bq>^X$=O>DKeGo^jX58[Aq>^UT^W$i\!!4LmTE#](!0$sY!VZQq!!*,p
!<3)K!<*#o!<3)o!<*#n!!=5.^Er^V"9`W;Zk<08"p%TZg-G]=eGo^s`USHgqZ$a)JbGQ>q>^U+POh6;
!!=+dW?M*<"9W)eT+Cf!"9D'5_)guajo>N+Y17M$qZ$a)EnQ9Tq>^U*K%<)p!7:fH!VZTo!VcZo!R^uI
!WE)t!!!*!!Vl`p!VcWt!K-St"Sr*#1!SuAq>^XKdbIe'dJsD"_rY&&qZ$^B`plt'!!!$%9B32Wq#CNu
HJ*-;q>^UJ[E^H%!!FXZ_FamX!!FUMb>86:!!=:GeOfT;"9Cj0Rf`3^QN7$dpAk3oq>gNqrrLFGrrMlp
rrMfn!!2ip"!$@Z.Ja#I#^uGj!rDs#'ufW_$2";]!!**(q#CNu7GHQEqZ$a";#IX6q>^U5YOsIB!!=+[
`[(B\":&i!B`e/3";@reAI.>sp](<q"Si$#!Bn99,PqHD!Cu"<')DS1'V!]%\,ZL0q>f:NrW2`n!!2lq
rW1[P!!2cnrW2fprrMoqrrMio").G&!Vucu-dL<TqZ$a#Qi<umq#CI@[!^s8")Hg\!Vud!"EF%X"oA9%
!l*qtq#CJ7o9B.QrW!%*g5Z41!!=IS^(1#?"9O>9Q4!Ef!["%PjT#Bi`B"%r!!EF8f<kbY!!<;%bt@d3
!b0`5lN#*.!!1[OrrMoqrW2fpr;lfrr;Zfui;`iYq>^U!!!*,r!<3)o!<3)r!!<\4q`jlV")[dR"T/6&
!D;D-,5M9C"$=?iM#m>Nn,NT#lJu:[q>^X2WrI)BqZ$^_oUlin!!=Y*j;@ao!t1LO3;EOV@+o2qqu?j#
6--k`q>^[$26,5Q!Tj@b=3eof$Mj`*&=)0b"T&0$2qO'$q>^UB_T<SD!!!&M!8.>R!<<2t!!!&n!;ur[
!;url!!!)s!<3)q!!3-#!Vucu2q?=[q>^U+e'0NB!!=1AnPf5`"?=KeKam,D"U8DhiF<)g!!>.Ef/<F*
!t)*j4Sf$[!iblrqZ$^Q]X\1E!;um"$bE_pqZ$^8Qdn_(!!G']c?0QW!!NR-_8fU]q>^UNcFkn.!!<Op
au0"q!s4b@:ZDGT!<3)p!<3)r!!30$!VZTn!W<#^!!NB'!<E0$q#CBqp]1<pp]1<pqZ$^"B_-EC!!?3q
M$X"Z"9VluRK`Nf">8*eFUma<p](Eu9%Ds#q>^X"Du#G%qu?j#;t5J@q>^Uqr1+&j!!<:-f4k$\"%q<n
#Q+Q)"&RO("Sr*$.CdZ:%H@Ek!^XK?8cA_g!!E@4gjTV.!!E<peT1cf!!>gLM[#gSmJm4fpAk3oq#LEq
pAb0ohZ3ZWpAk3oq#CBqpAk0nr;Zp1RIqd#!!<;>j%B1K!tDj%1AUtR(X2Z-$/kje"&\(H.Ja#H"jbaX
qZ$^F`7P:j!!<Vua<UW`!tC%;*r5j?!is@-!!)rt!t1pF/G]>L'su_;#iPad"%UD[,l.KC"Ll#tqZ$^B
XM4r8!!<SXYTMU"ZiC(,pAb0op](9ppAb9r!<</l!9*tY!VZQo!Vl`p!W2p",KRe4q>^UOrPB3E!!>mg
P7RNj":g[jV$d,#!XUS)mf3D/4:qJl"onW+Fn<Zoq>^V+pOEJG!!<LbqagM_!ik6Pr;ZpAYcJ90!!=_.
Wt>.."%(^n%Jp,.%>3At$2ac)#V-tb!!4#q&,ZD1"D?;j)>X=7<n_Nn"oJ?&#CG8kq#CJ^a$H$lqZ-Tq
!W`9%q#LEqq#LEqq#LBpq#CBqmf3Ci!!2ut!s/H'!VcZp!Vufr!VcWp!W)j!4n"12qZ$a"K`?B!qu?j(
^YhW`qu?j%=67::qu?j5F6]+nnGi[mDsNf9qu?j0TD+'JqZ$^@`75e'!!?*]Z2se%$<m.D!s8N'2UcmT
qZ$^!FPq$5!!EM)`]sS&!!*-q!m7PZqu?j3A^6&3nGi[m@aBfOqu?j/N7rF^qZ$^<Xh5JI!!>d:S,rHd
"Amc^!WqNb!!2<adf9@Knc8XinGi[m!!*'#q>gNrq#LEqmJm:h!<Dusr;l`prW2iq!W`9&q#CBqqu?h5
p/_:l!!<_Fq_7mI"#ot[')MY2)nY5rqu?j0HgKENmf3J<Ykt=Aqu?j>f%WOmqu?^%!ds]EqZ$^>c1)VH
!"'n>R1Bf.!+"8P!W)j!%B%u3qZ$^Qg78fP!!=(6bW#G"":]4p^H(`_"='DkP9'Q$"<"nh3s#6Z!sWVq
:\t+o)n"32r;cfs"<Q*K%1W48!!/Ac!W`9&rW)ot!!2forrMrr!W`9%q#LEqm/R1g!!2rsrW2co!!2lq
rrMoqrW2rt!h\=1q>^URg>2u0!!AM\DZT_8"(_4]$2ji-!FkWH,Q[?6"T]4>qNVZj!!?$lPn3`l!^tn\
qZ$^!VZ0Ef!!s+X^`Xa"!0"iQq>^UL^Vg9P!!@l-@KH?+"'OH&#lO`)!E[hR[ib_?!!NB6S)&]-qu?gg
gOft4!!5:$Wqubu!KuA0q>^X,Z`5#dkPtS`o)Jakr;Zfuo)S^h!!2-\!!2QhrrMio!<E9!!!<6&!!2or
rrN#t"TeZ)!!!)h!!**#rW2iq!!*'#q#LEqqZ$Wu!VZTm!<`B&dD.%(!!6QqO8AnZ(YS"!qZ$^*e^HGS
!!Ft?eiEiu!!Eb@nmhh#!!<k>jtll7!u/3>-N!iH!,2@m!W)j'#b9j,0)u!^WZ_-<!`dTrqZ$^4^Wdu"
!!<P@\hO$^"=h^11]cqC":V$U=T\O%!th'H/c,MM&u"))qZ$_'i-k_(!!NUb`[WG<OT5@^pAb0orW)ls
rW2iqrrMrrrrM?arrMus!W`9%q#LBpq>gNrq#CBqrW!'0%.^5.qZ$^&MYTO7!!>gY[fZF,"(:nc$iL&.
(!#TK#5A0"!<WAs!!E<]d+]oG!!<=.mYgrB!s+)OC\n)6/c!0jqZ$p*Fn\9l$ObOK&c2P1#(#&aqZ$^a
c_1F;!!?3TIgZ,S";A#b<X/@"!rr?(!VZQs!AV(",5hKD"&[HnqZ$^!FPU=$!!=Y)W=/S'"9`Ak4?Ugf
!W`B(oDmGBrrMrrrW2fprrMoqrW2rtrW*$"!VcWr!X&Su!!<6%!<N#s!!2or!<</s!<*#q!!r],!<<*U
1\ut5qZ$^4Vsb)m!!<7NpMB^,!scm17f<;i!Hn@7&GcA4"XHoWD.QBa!r2g!#B9.+"8r3%-c=jOqZ$^m
o!/;o!!<PheKt.o$NL/-<VC$:/M5b'#5\B&&sL`Pqu?g"Dq\Rq!!<G0bs)(+"9E/mNXkmc#R)AC?"7,.
*Wl-;"9rAbNW]4["!ane%/U#,7+Rq1qu?g)b.Jnp!!E<qfihSR!;?Hn!TX4d"Wp3;?s#c:!m1KC!Vucr
!Vuct!<<0!!;uot!Vufr!Vl^$"tO,0KR-lO"8;cq!Vufq!Vufr!W)lr!VcX!!<<++?M/C9!!4F\d/*eF
%B91OqZ$^Yo>V7<!!ORnpFQ@Fqu@'=FfDg]]t:\RFW:,V!uf/R3;igZ#*/LXqZ$^9jP1UL!!9gm62CQd
5jF)Y;cD:Zq>^R>W42X(!t:LO,PqHC1Y/c=r;Zp@\(W5+!"0HTRAHpaWMH"u(]aC4!uJ)o1Aq1T"b,6!
qZ$^7ahehj!!9%<3r/gY36l\jci=CcAsAp`V5'WJAf0t:bQ.VCq>gNrq>^Krq#Ca>NQg/9j5J_<N?Irq
!!2rsrrMrrrW2lr!WW6%p]19o",;Qs>l"F%1tSZ&!!=F\i<B)Y!d=Bir;Zs$BCD>kqu?d"0!"c^!hCqE
q>^V8r0[Zc!!63eV>C5p!laCaqZ$\Qm9]Vh"Z+c,V07"_d8B`?!\V3NqZ$^>WQ,/=!!6ihEW#k?!F+!0
!W2p!!\'W6XTFM4!Vucu@GZbAr;Zmmc]\/*!s5XN1]%.RGL9@c!!=gdP*555jT#>`.$aS*!fAE-d/a.H
p]1<pq>gNrq#LEqrW)ls!!2rs!WtC,puVXk3!/mUrrMusrrMrrrrMoq!!2fo"T\Y'WT-SH!!5RUJGT<J
2Uf/4!!<G+rB1#Y!t_1"0)P\N!]I(W^\Y\GSgsR:"!6mY+8l0A-J[VgqZ$\an65\h!`o&@q>^aL`kT9R
Q,c2e!!5:1EVf_;0Y3tT!!<Flh_k?4!tUFF.Js/I!\p/;XT=J0q>^L7!n+V!r;ZpD_T)u[!!7l(;#:4o
9\O:Y!!=LMW2S/F!Wk$?p87qK-0P?o!<3)o!<3)r!<3)s!<*#s!<*#r!!36gc1^9#^,,QbrrMus!!2ip
!!2lq!!2rsrW!!#!!!,=_qdEO!!<7"qIBC&!_VU4qZ$^<`pO?8!!=anblR_B!Zd97otLNh$i0i)[-(3_
!!<PGoI]q?!bq@SqZ$^RrJC[R!!a[Ye'kG$_DV2j!s)!K=8i4!!!5L1HM[[E)6_Esr;ZpHZ*aW1!!4'h
XS&[rJdV>S!h[\*r;Zp*Y1>#u!!6HZD#427/DkaTqZ$^>Uq4.p!;c`r!W2p!)LJ@SVZD5RdK':Jmf<=f
qZ-Wsq>^Qt!<W0!"='r-k2uF#!Nck.!<3)t!!<6&!!2or!!2lqrrMrrr;d#TgXn+T!!<:0qbd4j!a,&.
qZ$^Uf#e$l!!5OONr/kY"B)c%^B)#Fqu?j"!,(tIr;Zp#TD)7\!!5^gO8AnZ+8_9.qZ$j=YN=l__S7Mr
!!<:%gdh5A!`%<PqZ$^O]s7\;!!5:-IJa'H"%oH_XT>Ioq>^S#fOt-_!s+A78GrMk!!#:>Ies*I)r-&N
qZ$^6S'&n'!!36mT_,,_V+95>q#LBpmf3=gq#LEqquH]squ?d%@bp\=!TRVa!!!&s!<3)r!!30$!Vl]q
!Vl`p!<_TNe0Y"m"98O@pdb2]!b(t,qZ$[hiL]uJ!s)X#@Jg*+&;'Jf!LErd!!>"ROTtaa!da]_qZ$^S
rgX#e!!<u/SdtVt#8F-*n'94j+o;6A!b'hJqZ$[uh+dkKrW!!ca,Blr!s)6P<r;pu%s@HF!JgmU!!=e.
J-PrP!c6\'qZ$^Mi/.R5!!<ndN",Xa!tpjIe(k!(!W)j!!!!LKntuMA"OdAM!VcWp!Vl]q!Vl`q!W<!"
!WW8u!!*e(o]?8<k-YBh!<*#s!!!&q!<3)s!!<6%!<N#srW*,no[+cX!!<CNo/upN!s3<=6Mg`a<To29
!!<@?q*t8^!?7m+^B(JZqZ$^4pn%uo!!<46qgePD"!@Q?#5eH'$LF]*qZ$j5UA4N8f=2gt!!<@?f/<I+
!s2if3r8mY9?_SX!!<@2gct]:!>q*mXT=t4qZ$^2gl)X>!!6B\EVf_<*8ltarW!*%!"%#:')MY2&!,K"
e,TLdORf:MQlOQT!!*-%!!2lq!!2Ng!!3#u!s/H'!W2ou+NF!7!RW7j!<3)s!<3)q!<3)s!<3)q!<*!$
qtn_ZqZ$^%J+,Dq!!E9)F8n5s!!6HoG5VCC#'Tc%qu?a?[IV'5Z8)4V!snOs&cD\2=o=6U!!=#:WX8S'
!s\"i(&It9&>B($h;,OWqZ$^$E7?T>!!<@8i%k00!`IH\rW!'$#&)aIqu?a<V"1VgTe-'@!sdD@&,cJ0
:YpKr!!<qnPmI9f!sQr7'Dhb3&!#Q)e,TLhT)>M\VZE8;dfBCKpAb0oqZ$^"!!!&r!!!&t!!30$!W)it
-ee.R!S0@1!<)ru!W)ls!W)is!Ug$e!<`,ld2i)a!sO#A48]'\")n3&qZ$\'m<8F.!sNlC3rAsY+LgpV
!O=KX!!<W%V@`\+!a>MZqu?j")uliAqu?g+m&(No!!a+1qto.&\/P5E!sEGk2>dFV"(L1IqZ$[qd:rOZ
!sE>m2#I=S*N&D0!MM+B!!<S[P7RTl!`7a"qZ$^8i04HD!!<PSP7dcorW!$2O58XA!!+(4ntuMX/COV!
!Vl]s!!!&p!!!&r!!!&r!!!&s!!+J&o&]u(4So*\!<<-$quH`tq#CBqq>gNrq#LBp"7u-4+8Z$?"Ea9#
qu?g"CB$a$!!E9%=mLS9!!<@?qF:A_!?A-1^B(M^qZ$^9pmqom!!6X,K_k`O,6+JBqu?g/n=pTm!!a.4
p\37i\K(JH!s<2f3;`aY!FF\IqZ$[ncZ&g_!sDue55bH_!#h<sXT>"8qZ$^6gPZI<!!66WFSc%?*oN1a
qu?g.e;t4<!!<dpg=k$V!?%0oVZNca*n(,g!VcWp!VcWp!Vucr!W2p!!WW8u!!+:go&]u$.Ja&E!W2rk
!!**%qZ-Wsq#LBp"6Sar-i3lG"E*p$qZ$\.rD<@k!`%gCr;Zp$=S?8&!!*^go"P3p$Msf*4o1$>r;ZnD
qK2T7"#BkH!W<!$!#,!s&,Q>3(9?fgbfm^EqZ$^$@G*d?!!6<\8,E8f7EL8^!!<9tfiS(O!>'VKXT=@e
qZ$^Vh0K5&!!6ojB);Q1/`;Nfqu?g2f8L19!!O%'d*Mamec5^^GOhX4L^DN1rW2iq!Wi?&qZ$Zt!<Mur
rrMus!!2rs!>_I$joN('q>gNro)Sajq>gNrq#LBp"4GWN1A_%R"(V.'qZ$\!nS\4(!^,/Jr;Zp"604=.
!!3=,\F[H8>P\=%H1GbPr;ZncpfRCn!`JlOqZ$^@qN_Hb!!aLNgt]HN^Ff<_!s;W[8,E8f:"<\L!!5$m
V>L;p3m*'P!!3=$Vu3[lXT28q!!@#f?NL**!eoB(qZ$[hh0Jkt"!$-M#l=T()5"a]e,TOR:8.9W!)NFk
f`:sOq#CBqq#CBqq#LEqqZ-Wsqu?d&CYn[F!,_N3!!2rsrrMrr!WW6%q>gKqq>^^#!!'[Eh`pu<!s)3l
B_qc28)o^.!!=RliWoD^""D7=!W2p!,+$%:^B'o;qZ$^!a5]Pc!!<G<oelUH!d4-SqZ$^`qh,"K!!N?&
,f%UH"/_s73;W[X!CkdJqZ$[^a+*sd"!Y+m#5nN(,d4c[qu?d?Log9O!KRcg!!<8+a#j5"!sYUR0Db_N
B\$\j!!>7:F927="!FSLZhFG"!W)lX!!43pVY-hfM@S&7rW2iq!W`9%p](9pq>^KrrW)lsrrMus!\(P=
p#Z:h'`%e0!W)is!UTje!Vl`p!<\j^k>;!T!^Z(+qZ$[We[52R!slF9-iF#I%%R5Mqu?j#6aXVCpqHj7
/c#GL/,.4"r;ZpAg?]4E!!8YY=8Mt!Ab0j:!!b.%ZEf=DbX_L0!]nVNqZ$[Q]V#'$!sbRY,Q.TE$]<dk
qu?d!4eq_Q!MCn=!!E9KgTqIi!!=4VcjKXM!f>B#qZ$\#emeIU""C[KSC7H>!BZkGVZE87l2]rH!!2lq
rW2iqrrMoq!!2rsrrMus!Wl6Op>uD+2Yd@Q!W)lr!W)ls!Vl]q!W<#r!!WH(!.&t[A,60,1tST$!!=F\
is>M^!f["fr;Zs$@d^,squ?g":oqD-^B;3H70NJf"9XGXK)toN"&8$f!W2p"#L;HfqZ$\WlWX,b#<C_/
QY^Ke=8W%$!!"XcP5>4]*i[0bqZ$\FgfaRU"9DQNP6Cd`!s(u_XST%$XHbsOqZ$a#GMdKCr;ZpfcCb49
!!<G5b:WSk!dr<jq>^UQa+]61!;6Bm!VcWs!CiBPqPOFmO?<X6!!!&Z!!!&p!<3)r!!!&q!!!&s!!NB'
!!*-$r;Zp$@F+$2joa\a;[*!trW2lrrW2iq!!2orrrMlprW*.!;>5D=qZ$^F_TW&Y!!<S(qC_XF"&8Kp
#Q4W)*m!t:qZ$^!2Li"0^B1Ka1]R[T!!=n%lQlE/!sOGR?Ma^)-0itiqu?g"^>V?R!!l3dG^)_Kg2-og
!!=FGZiU()!st+G.Jj)I7+n+8r;Zp=Ygtc1!!<6VF.iH5".O6_"8W!".Cd\Hr;Zg#!dE?sqZ$^AcFXP`
!!<8"a#Nnq"%(LPC@_E*!T3q[!AAA\r20X_Cb>hJ!:Kmf!VcZo!W)ls!Vl`q!W)iu!<</t!!<6fRFV5t
"4*5s"o//t!W2rt!Vl`q!Vl]q!Vl]u!<E0#,6K1dP7%0e!u%L#'`.k3IJ7UU!!<eih_G'0"9E07XVCX4
!Wa0prP&EH5S*Yj":g=_GldjD"!P8A')MY1<V**b!!<f"clW&a#m+W5;c=b[gk#k0!!<gqee7r^rW!";
g0jdX!tWAi/,]GN!F+KM')MY1!>g+]XTGL`%f$)-%=-WB!W<!#*i.*nqZ$[jes#t2!tN_f)uBU<!a+8N
9&9R>!!30:GQ"E@Uc8h-!<3)q!<3)q!!!&r!<*#q!<3)r!!30CU]'<Vi_C-^!!30$!W)lr!Vl`q!Vucr
!VZR!!<<*%"73-,qZ$^#KDJ.9!!>gZ^'"64",?Mr"8r3&#fQ7M"oA9#&:sep!PTQL!!30oklJj7r;Zp#
;XKtN!!<=dqd0.""$HLg"T&0*#);V+2Za'.R25Z"!s3T"5l1N`5gZG2qZ$_Afkgii!!EP/emJXX!!*UQ
rN-+%)>O78!CP,9$iL&-!D1[qqZ$Tu!eK-*qZ$^UhOarJ!!ELLe1i](!!*RLrMK[n(t8Q\!<3)q!!!&p
!<3)r!<3)r!<3)q!!*e'rT4.B+mo@1!Vucr!VcWr!<E9!!<*#t!!9pY/,TAM!!$?lNr&eY'%?.sqZ$^9
mCjkD!!FM)gI2/@!!*jkr4`4^q>^[".G!TL!W<!#&"rAPqZ$^?_XA6:!!73?K),HR$ae8.-NF.FZR5MK
!`[NpqZ$d2]$D`(!;um"(=K-(qu?j@a2'n>qu?a3Hi0uG-i*fH!@>D$4TYK]!tC7=2#@7T*37O%qZ$\/
i,e_p":Cd1,9t_=qZ$X1GPn?=--?2f!Vl`p!Vufq!Vufr!Vufr!Vucs)Pm;n!&OTSqu?g"!!*,t!<3)q
!<*#q!<3)r!!r]-!!**#!0$,.q>^UTgsl]-!!A8UE<5q:",lYb#5nN*!F+U0637#b!?I@$^ApOr!!NEb
bO'?Yqu?dim\Kmsqu?g":Z\JN!!<J,rC?\a#o)=!(Dd&OI*=YJ!!=mj]Ee<6"+Am6!W)j!HdlC,r;[!%
:rp(+!W<!!)MJ$j!'9uW"TgKcdU`d`!!>O8OqITl!s(m6P5>4Z"p11L5Pb?_'$$=R(!cj\)M%a`!'&.%
!!2cn!!2orrrMoq!s&E&!W)ls!W)it,I%+.!)E:h!W`9%qZ-Wsq#LEqq>gNrp](9pqu?h%ph'^+!!<_C
q`=]VrW!$XpU(k8!!=e#cm/Gg"Uo;4g1(Hg!!+C9r4`53qu?m,=3p\m'Dqh5&BNd'!rN$#%?L0OqZ$^L
eE%;=!"(d]L'\.d!)MBS!rDs"%Ahl;qZ$^Og7T5Y!!=UZ[ibMJ"Ueb`^fUmA!!+7&r2frnqu?m+9t/nt
&c;V3&$X&@!rN$#%"?hmqZ$^G]?1Z\!!G+3FpJB"!!4:!Vu<Ln9?I57!VcZp!Vl`q!Vufr!VcWs!<E0$
rVusM]_pmlBD_`1!<E*"rrDutrW2fprrMoqrrMlpr;d'%!&EW+#l=T(!I+NuqZ$^$Zfb0^!!ELJoV2Kc
!!s!CoBqk_!!"RIr4`5Jr;[!0L[+JH%/^)."-`PK%Jp,,.GDQ;')MY1@d]ET!"+;F?3(',!%l<N#Q"K'
!GUJ:qZ$^$T$9e&!!EL<erTt2!!rs7f$T*e!!"F5r2fs.r;[!/GL"cG$iBu-!eT3_%/U#,,f$AjqZ$\!
d=D&n"TWSj;ZQpl!!!&T!!+I0r20O$b5hMBq>^X!!!**#qu?d"!<N#s!s&B%!Vl]s!<<0"!!+str8n!2
quH]sq#L?oq>gNrmf3=gqZ$^=\^qGi!!=bK`Xr"I"$cRH&,Q>,*!<PGBE\24#<L<'@fl]fYPc-8KDbcP
0^mFZqZ$a$=n:,hq>^V=q.U!0!!<Uqq_@pI!s6j"2uN^Y)Pb"Wq>^UEh6.@d!!>48KFReY"<!cg>Qjp(
"uNm@=9AOV!2'1k!-eAA""Vg155P<_!`.C\+Sl'?A_^Poqu?g+L>=BV!!<;4]J7Y2!A9f<VZ:f4!7V#K
!VcZo!Vufr!VcWr!<<2t!<3*!!!,=5r8n!Nr;Zm"!!2iprrMlp!W`9&quH]sp]1<pqu?g+M"j42!!<A@
j%B1K!tMZt5l(H`5hkR&#5\B))dXfk!C46o^B'u.rW!$.:F#u=!!NKldcjI,qZ$^?hoIAG!!=gtb6IkE
"TSNTqQge4!!<OPgc5-1!sG[F62LWa%@tR"q>^XX_TkaXqZ$g;;]u/B3iMtY!KdE^!!<Qt+9DB?"U$ls
c9q^1!!=4[YUB;J"":R_#5S<%.GUL*p&NbG!Wb9Tr20RR!Up'h!SmbU!Vl]r!Wi#q!!2ip!s&E&!W)is
!WE'#!D_SNjoN7!rVup!q#CR"!!**#!Vufr!Vucu!<E0$p](9pqu?g"=6Z%H!!?-oN=5Xa"9MNbXp+\&
"Tqindn9lD!;c`t"&cl2^B(YJo`,+R_s:q:qZ$a&U%3@3qu?j$AG($Fq>^VIq0W5A!!<6rc%Plm"%h6p
$N'l,!_U\*"T&0&!_q(R6O!5b!Wu)sr2g$p#lsZ!">R"(>6=[%"9ab9BEnA7"9M`YAc_`."**(4!R:ZH
"%]<eVZE=pmf;bU!!20]rW2iqrrMlp!s&E&!VcWr"CpQkjoO*DoDnmlp]1<pp](?r!!2Ti""27Y&,H8.
$..$OqZ$^2UA%mg!!EF2n(:&'!!*::qnE0G)tj771">]9$2OW(;"i!LqZ$^,^Y1I>!!<bWnMU7F"TSNI
Z-a$W!!<M9\1.:T!t^LH;#1.p"B3da4SSmW"^V#-!N[.3!!Fjbe7]-a!!>aEYo!9;!t2*D/G]>K%Cak@
li?#F!<l[(VZEY3b5_SE!!2fo!!2ip!!2lq!s/H'!VZQp#CQF2!TYBs!<*#n!<3)q!<3)p!<3)r!!<@k
r*fF%"9E<9E!,t;"%D2<.Ja#J"D$ok=9\O$!Xa:hqnE+dp](I$<:oa2$Mj`),Kfpbq>^Ujr/qKb!!>p[
_?B`9!sFA8<r)e!!FFVm!rDs"4ic%tq>^[$=jbeq"Sr*!$#f[B!%msG!!EEsf@FmIq>^U>ZJJ:O!!>RE
JID;S"%1A6"RlBk!T*kX$#BC8!%d74jo>Ga!<Mur!W`9%q#LBppAk3op](='PksMB4SAdT!VZTo!VcZp
!Vl]t!!*'$q>^Uio=PM.!!=UndiJ;c"9a5OYo3B<"pnelqN<B5qu?a,Onufm:\k%q!@<Qgic>M(!!Emr
oTKCS!!<kYi(3\E!st1d>PS7&6.Vn@!!)os"!b4b)Z'L;"EE7f(A\"8#ZndsJL:Tu!!*L\qQ0`fq>^^#
+aDASAIA86":p%6JcklM!t_l[5l(H_#_Lf-iW/9E!=OAQVZ90-!<3)p!<3)r!!<9&!<MoprW3$!qu?a.
Y578\?haX#!<E0$q#CHs!!2lqrrMlprrMlp!tNE:8,<2g#^Q#r!rDs#&ZkMO%f-//"\#ci]dip[!>DL0
^B/<R!;lg##I3g09*G(k"9W6![hJW="9NZASdtSs"#/!O&,?2-%C",Bq>^X'CY*_2qZ$a0Qdp!`q>^[%
4eC9'-2[`D&XrQu!+bp+"U:OJUdG:^!!N?(>0W`RqZ$a#B&/@Sq>^UJ[D!*o!!*XrqPO=%h#QjCrW2`n
rrMlp!!2for;lcq!>j#WjoC,2!<*!"!!;oqrW2fprW2fprrMrrrW!%+qiqNb!!=[mmlC4E"<YkP>m'p'
"9BHYU+#p>!@#2Q^B'>sqZ$a'M00sBq#CLaj4-<h!!=q,mPanA!sNN7F8#Y:;Vcs3q>^RBZ-r\.q>^X<
[*DPOq>^X!(gr@Kqu?a>WqrguJ-5ZK"9s-b*Wc':"$FW;2YmCU/&'Fcq>^U#?eK#C!<)ru!VcWq*i/Y1
!IP!k!<3)o!!!&p!<3)p!!!&p!!=\0k2uU(!NH;"!!<6&!!2ip!W`9%p]19op](9pp&G0rgX\C\!!@'4
_$^#="$,<01[kAE7JX\!T+gr!q#COJoBBEZqZ$^*Qi)F1!!=%VhB;Om!s6?P1\h"Q?e_Req>^UR`RZX1
!!#4YXT=Lqmf3J;f?I+mr;[!$!""D:Eqo\;'s>Ipb5_N)q547O&F0;r!UKg`!;c`r!VQNn!VZQo!Ug!g
;u,PV^DH;<!s&B%!r;or!VcZp!VHEp@eG<Yq>^X,](0nIqZ$d'?f^EA#4_`oCAGUFW%%6:"U.3DnTY98
!!EC(ji7f*!!?R$KF7DQ"'4&q#PnE'$`)?b#Q"K)"B<Le56gZY!+>W)!LP2'!!NKd^=?s&qZ$a$9?OIH
q#CLqflRPD!!-?&qPO@X,ffuc!VcWs!<E0%q#CKt!!!&j!!%NEjoNU[q#L-h!s&E&!Vl`q!VZTo!VHEp
*5pM_q#CONgseOhqZ$d-C$OMY$hOE"!KQuj!O+o]!!NR&bj0K]r;cfs"!tkD7/6fb(Xghpo`,(3XhQ=\
!!Fdf]/Tig!!N^8cGEBboDemmJbcDKT02ZE"U7H'cY3a_!!=CGa#s.t!>W-G]JJXL!!29`!<ITDVZE5I
aT2;@p&G-p!!<#t"T\T(!!!&l!!*,$q;q_-:\"Jh!<<-$!!2lqrrMiorrM`l"9iH,QN?p_"9DitZkr]A
r;[!,<pAUe$hXK##dX9@!kM\=oDf$sCu"5e#l4N(#,^p=$Mj`*!J^?-$M=B%"C'<.!Vud!!E7F=(&@n6
#>NLaBF=S9qu?a&U%telW)Wlj!!NI3_9?*hq>^X%PLXOWq>^X!G1q<MnGiOig].?[S,&r_U/Csl`rQ,?
pAb0opAb9r!<</n!!*GXq;qb:E<5S0!WW3%q#LEqpAk0no)Jk6](eA_!!E^jr0@B[!!NBhh"m`Qp&G(@
pV-`S$2"9%&=iUV<sJL$"9OGXYS[9=qu?gWlJO,_!!=19gGSd,":K\8KE:oL"T^[$glDg9!!">>XT<8E
o`,.+MquEJ#5S<&!dNRk(&7h30[@Z`q#KFT!!2Ti!$h69!GMh\!<3)q!<3'!!VcWu!W`<%!<Mlo!&=61
!Kdc_!<*!#!!!&p!<3)o!<3)j!!E=,m*HLC!!FXXr-SkJ!!30X\c_`\:Cd."!*K37!PY?-^B'E8pAbC'
8]gbM5lpf^":/i:dPCUu!thU0EUj)4!Dq.Q'DVV2,,*k1$2OW+!A:2&^IA\-!!#goXTGW+Pl7]bJf+4^
"p[H"gTij@q>^X'?e;h>q#CL-QeZ-B!!!&Q!!#alVZEZUrMK[F)#40Z!!<6%!<MoprrMfnrW*$"!VcWp
CAm8qjMh)[!NdL;!<*#n!!3-#!VZTo!Up'l$_dBI$Mj`+!BSNsCC9k;"X8]Zl"UJ"!!*.SrP&E>?G?ER
!N%LD!!GjRiJo/Y!!NR.hV:I!q>^['Aa6]4!:g*m$BEq_$2OW*!Aq::?4$E-"Whj,c!CVN!!*.FrN--p
<NQ2%!LG80!!GR/a*f'*!!NR$`5=Y;q>^X&>0`cKmf<(^!!26_!<R?@VZNAdVZ*IoOXS6MrW2fp!s&B&
!WE)p!<3)o!!*1orT415ETR2^!Q[4n!<*#o!!<6%!<Mrq!W`9%mJmA9gYPO'q>^["5iL[0#Pe?&#Xk(f
#Q4Z%!!*S*rP&Dr1:7%q!kCZ!p](CUO\H2X!!H$Ii_9IL!!=gthD=U#"<kV"5lpf^"T^X(a&N?>!!ENh
LJnHS!!*OorN--S/Yi<I!N8*\!VcWs14Vb!p](Fb]Z3D@q#CLF[DXZW!!!&`!!*LhrMK^H/=ld<!hq^V
nGq/@rrMlp!s/H'!VHEo!<<2t!!*\OrT40b4P9Yq!oHfTpAb0ooDejlq#LBorrMNf"9D$d\/kAF"9CgN
ku[W[!W`W5q#CFHYl2<<?Qbm;^B%aHp](?t#m0l%"@VM=?3U-)"9PLpC'F;2q>^X!5M;bLq#CNu3m5cB
p](?r#m^8+!@XT=XTDNDNW#s[=9\I"!Wr]0p](FZc-B5jq#CO!PM'7Gmf3=gp]19n!!2<a!@O?7VZKd:
M#F4P<<^GD!s&B&!VcWr!WW8p!!3-#!r2fs2:VTe!coa%rT4-'#58)t!VHEm!VQKq!<E0$mJm@qN;&/4
q#CR#:#5AB$h+,t!E?T.^AttL/J<X5^B'3$mJmCs<V>Nf"o/-$"aBg?)=7D,#^k?O"Si$$"%:&X:($Ij
!WbulriH:(.1gY#XT<hYq#L*g"UIcRbZb5G!!EF=h3&Pq!!30mT`1hkVC)pprMK[A$g7TK!!!*"!VQNl
!Up'j!G1*djoa[&(7Y9b!N$Co!<3)m!<3)t!;cci!!FRTo4A1%!!WR)eG+_?!V-3l#^a;b^BCSD"Cf%C
^B(PYmf3M.H0F6u"o/-$"^:ZE2X:>H+J74g"9A8u"p7K/gN=M;nc/^rDlir?"IfZ"=fVJ'!M:7u!!O-Q
bf<fgq#CO#:YN00e,].A!XEM<rhfma#R"2(rhfdc(rQCS!V?Bk!V$-m$C'W6josnm$O(_5roO72+m]1/
!VHHm!U9Xg!^PB(=onF!"pI?1o;XJFo)Je5Q2SH#IK0@6YPu9;^..u"p&G7?U@#li"Si$$!_Cr4:BKh^
"Tg]tcqjc=!!WQeX4EOd!V69l*/FKp"EFJB4.cGR!N\NT!!OF*d&]J8q#CR"5eYZ:!p0I_!TX4])hS$d
"E"2>3LTlE!N&$5!:'Ud!<<2q!<3)h!!+CPrT46M!!#dBroO7C<:9ee!WE'!!qlTo!UBab!!NL&qUe1:
q#CU")P-TR=9A*p!BR=]^BM>C!!".4rP&>_nc/js<n[2J.KT;E">.Xe=Tmsh"U%?N^H;Pm!!WH?MqPd=
!qZHn24XZJ"ft#j!$.*uXT3J6!!WR#^Y+u#!VcWt.'M<!"Ng`D!!+mBrhfps5QCd(MZ'FQE5_eZ!WW3$
p&P'mnGiSZci3&1j];E^-b]NA!TojA!!*-$rW2Zl!s&E&!p9OdB_KP(!VcX!%Y!X?TcaF2!!3:,]`,YM
Y9X)J"bj\i^B(PGo`,!n*<_T!n;n@Y!!F1Pp3Hc%!!HQ[Yq6"O!!WmNbi"L$!quZr"&Z)tXTkC@!!!1I
XT#=&T*b/j"p#Wof[PB`pAb40V?5Fe!QP0A"&G`lVZrP2!!!1EVZ*IoRL.@Ao)Sdko)Sdko`,$sCuYHV
#1G(&!!]+XroO72%J'Su!VHHm!TX4_!IX7H!%mpF"U.K.o=6.@!!*X\rP&Al'E.t4=hO^J!&sQN"V.-o
^J=t+!!FXVo8aRH!!E=>d&&5c!!NKkUXu7`pAb4(F8`3AIhM_\!E#lqXT1-L!!NgieYu">pAb=?T\"W)
jT#8]irB)iDuHR6H2nQV!!,ijrMKWL_uKf>!<*#l!<3)m!!*b$rT4-[(]FC8CZ><T!(6V`qZ-Qqo`4pk
irB5oK^Zc=!VZQr)K1*GpAb49WW'X6^1R]M!!+OZrP&AW!VQKq$"@irq>gKp"T^EfqNi/]!!NjSe#P;+
pAb:3@W37[!!+(-riH7'>mL?/!@=]CXT<5=p&G1#<b!-D!!NBTU"tD>q#JY>!?77%VZN`!#Q=](,bk78
!GDMU!;ccq!TsF`--Q;M!p+e9rVusShu2[<Nro"T!!2Wjr;kmX"VZagd6ds4!;lfu"UbA*!!,U'rkAN?
703Af!=,@t^B(2Go`5!rpAb?t1;E[R(?#5s&p`<D3s#'U!X&i2p](?q5camd!hhdYrVus(PPqTaQ4iij
rs&2t"T^0Rh1l]j!!!&o!!,9[rhfgf49>E]!=+V`VZNcY'#O_J!V69k!quZq<oa2A!nU?OrVus*_u8]u
`u+ILrrMcmr;kgV"U'MSg.2>3!!%`O^B'cJqu?_*rP&B?6L"OU!AW$uN<0([i;a#`FPX_t!p]gdGl=`F
N$/#u!*K3%!M_dB!!NBR\_MQ6mJtf<!-J1;!J_cp!!$$tVZE>Ll2Uebf`2!QrrM?a!20;Q!P0cY!!%0?
joO+1l2Uhd!<*#T!!NFEio=S[o`4df!>W*C^B2,s#Q+Q&+1V<b!k`RYli72"=leds%c%*g!bKEn=q0j!
!>D@0XTPYD#6=]&!?A$:XTGM9"mc3m%8Y*iE=Kec!>;()VZN`3#Q+Q&)km8/!i0B2quFY8!!2Bc!?'\l
joXV/$2ac(-/SX`!of+ClMq%f!<<-$g].Na=4$H#.fo)=!*oK;!Okf#!!*.`rP&B"+mo=7!@<Zlh.$re
!;cca!!W[&\C?*W!Ug!g;uNg!VFLF_!<RoPXT=8"mJmFl+a_VS<t3scjo>BYrMK[h6i-ia!e1*G!JDK.
!<*#n!;?HnDuJf!gg0dW!<]M'joMn=m/R4h!<</Q!!WWd^&#Z>"n;Qn$)@I6!N[.7!!,m0rkANA702iW
"Za<i`&e1V!!WW^W8+I?"RuHm#aG:i!Ljl$!!,WlriH<u4okW`nGi_KVq8"-#/U?@#`nq^!L=Js!!,Nc
rhfgg49=jMe,TON!!2He!=QmFjoNdKq>^P(jo4BDfM_h9!!!&m!94%^#E8N2..I9<3kG:)!.=SB!?eE@
^B&Ebn,NRlan_53iW/TN"9s80^*N4K!ApbRXT3A:!!++/rN-*7$h+-!!OCL6%+,(E!!+jLrMKX4q#CF8
Q2RT]Ad\#-!!1FHrW2Kg!CbrFjoC_C!!+IlrT4->%e'Js!Rh#N"]BFUnc/^qGeX-k!.XfI!Fqo'^B(AZ
mf3Dj=prdZ!sD/,&b5o'"`:@>XT3G<;#sjbrN-*i+8,^2!!5kk$GZWC"_jk4VZ:Z2:'"CVrMK[]*p!CB
!!3CejSe3@RJCV!GK'OC!R<.D!8%8P-D0Y>!*$i9kl:`/OR0(L9X4Zp!!+7$m&'hTWrN/Q^\R$ajoAto
!!37&\*Uj3Sd#/pY5eV+9r@9Z!KREP!5JR9"&#<RVZDYYh#Ph&!X*/km,e>_#L!2-!!*jllb<J76b<?i
!!*d]l`C2h4KSSb'R6PBVZEYUXT/A@V=3RFjoOR?XT/A_[JmoB^2Ok]%fni!rP&B%$24G0!!+pPriH7'
AeaqK!B6_NXT==cjoEL'!A^8GVZN`)'D;k924OQB!JUm1!87DR7G7\&!p#+Tp(@Btf)=_3\I6=Uli7(h
ID5]q!in6\p&G*uN;^Kl]0EV%r;Zm$ENK/A!h1qGp&G*uJ,QJMWB%-^!X!;:rhfg_0EM+Pq>^O$HMs`B
UGo@V!X+kOroO:-6NQl\!=>b(joaR9!!'8(!@YAT^B2-$'(c/)42(X.!ks9rmf:3)!@=Q@XTGSI&G,r'
2QQhZ!j$SSh>mEQf`2$tT)PVhVK*7?!!+pQrhfgpEt$(hl2Ui>g&C+8jdd1Z!!,UMroO:DSe/=1qu?`u
MuCBlZqg_p!!*4hrP&B74L"ke!Ik!L!i&6drW)Zm!<\2WXT=nLYlFe*H2XWBSOESO!!*1TrMKX]!&Uq\
!<K+sjoX1B!V??m"h+Bl!RF=,!5SX90u!V$!La\m!!,9qrkANKF:I1/dJs;!XSo7%N"Y[]!B@(XXTGS<
%+#"7!!+UIrMK[O&b5o&2P^8L!iBQ;^B!m+!B]EAjoN%0nc/\`iVqs@jGXVU!!*O]rkAQM^/G('!!*Uj
rP&E71BFi_!=X2NXTGRs!V??o!!!LZrN--j/ci<Z!=NuIVZN_e!V-3k%=J,P!gP><qZ+2-!=te#joXXT
!V-3k&utom!mWq0l2]$.!WbQirP&B.%e0N#"&$*%^B2,s"PEe2!!30^T)GblP7@$^!WtieriH7'E!+/]
mJm:h319`C!KITY!!36gTDk_iVJH@D!!E9%!D_)AjoNC4nGiUn>20&=!p,[N[/^7@J%kos!PUtu!;6Bn
)iss4!P'hj!!3^QXT#=&X?Q(Q!>pFeXT>@L[/^7>Dl3N3!N&!J!!*pbrMK[j..RAV!!3q(jSn9BjAPFH
!?eKBjoO?ui;hF/!WbTorP&B')=J4?'P"ZO^B'l2d/`>0!WbBXrN-*[([_n:>,V>$!KIE#!;HNq!BH_L
VZDShmh#U6<h]Ji!Jq&j!!33sf_sq4]Ds&B(BPFthYlR;]aD4K!>:Fj^Att:])K8A]>"3X!EB63!!*X^
r2ft"mAL&cXSf1$9`t:n]`8'EI/KlBV<suXUo+'f!D<O\!6tQF(9@Aq!9<J)!TE/<joK)tg&U"1!EQhj
^B'oPaT1f1!D]ZQXT=J+\,ZP&Uu8-OMBKD/!GLH_k3qF5^+?ep!?\Q(^B;6_C^R`R!?@`hXTGJ2$1n5<
!!+(.hkpON?4#WlqZ,IQ!@H=RjoXLn%*S_@!!*:^r4`6Dkdgc-rP&E82?CGj!<mrMXT5?aVuWmsXTG"I
!PAC5"a^*E!2K=`nY-#[rMK^`0*/]c!=,S$joFB(huMg9joWjp!PJI7"AcK)^B(T1kqrN$E4c(`!Jh<]
!65'@"%T3dXT>(\kqE/oAuYa2!IG@>!8%8Q"%Aj\VZE8Okq3#k@\`n"!I#%(!9jIb"^g$_joO"6ks,;:
LZ/3o!M^@I!;c`t!@O64^B2)P!U'Lb+-XG<^B2#P!P\U9!@*I"XTPV$!<D?a!ZZoqriH7%;ZXW5!WaKu
rMK^n:BBnaq>^R:J>W=D!i/Zo^An<90=LiA!on(ukPtZ2Z/tuI"6"/"!5JR9%!0&Z^B'6!k5YPd9<nH1
!OFWO!7:cJ$YZR=XT<kVk5YPc7%jL\!MV7(!9*t[$=ot2VZD&Kk5YPc6(@hN!M(jf!:p0l%Z96DjoM@f
k5YPe>1NT6!SBWO!!5?q^](tKYq+o9!XOLorP&B,'>OSK32leX!MCh5!:^$j#C*?KXT=Rs^]4BnUA^tj
RjR4s!!`OHVZ!CnN=`l*!DDALjoO!hjT#>hT]Q.7!Q#ZJ!6P9B+/o.Q!k;bIj8]3-XSom8]5J,A!8@JS
*16],!iK3-j8]3*S,KGjWFQCg!:0[d)jC5u!hi[$j8]3(QMm]_UL=ML!;ulu--H2K!oA/0j8]35ci)u-
iIqcZ!!*jqrP&EJN#hfrk5YNS\Ga/DY"T#;!!*dbrN-.&Ii@VQp](=]VZ!UuSOE_#!!*d]rMK^oH5bcC
!C3=VVZE/O!!U:@!?8*<joXVC,N8\(=5Ei;!mt3VnGq)>!X`kYrP&E=2Z_n<!X*DTrP&B-.Gt3g!!3I;
Wr9%$TJ?Q-!!3:6XSo7%P9nNTpAb7$@ANk"!h1kEiW'#_@&En#!KAAD!!3U`ir/!@eNs>s!!3=Xjo+<B
__T43!Wl'$r4`8p8+K+;70-VqrP&EJQNtP2!Wkfar2g!Q5iFm.5#RsMXTGS[#0-]F!^iLUVZD92i&h$9
R/NoaVM#0M!6tQG"'jIUjoMYdi)9YndJ`2/jg>BY!;ccX!!+gLd(]U1%FY=N!!+X8d&d=h%*/DL/!'Y,
e>E=b$ci;K42pRKjlQT2&'4eP*L,9mp:g[@A.6T\!?-^=XTGM,$iU.N!!+!ic_gi?=:4Eqh>dR$Zd7b8
iHYpg!:Tsi(66,S^B1T9#L!/L'S3@2XTG+d#0[&K'RZeLVqe0OR7@J*!!4+?jl5FijoX"?#gE>N&;7dr
^B)'VfWkOf^\tnKXZQX0!!3XSXSo7%XJFLB!2oas!hD4MpAihG!Y0:KrMK[nT%KP5U&:eiQS\a*!9jIb
';+CbjoOPrf[g,[r8n(-8-.6@qZ$[-Dn>n^!kiaffEq[+TYCB>!j!dNci=+VA>oI/"062I$/#Ud+d&l)
XTFt<!RLfJ$t5n/VZN]-%IXVg#m)6.VZ!CoQ6QFW!!3adi;Md>j,Oc/%/UG7/A^HHjoWj`!mpuL$=U@@
^B2-%&(^d_"$NOZ^B18e!n%&M$!=#%XTGSJ%bC[^"#uVEXTFh@!q63M!!3I+T)GPgVK33u!!36\Oo2*Y
OXgLj!;$6m%!:2$joXV8'%[*b"A6`4joWUd"4I5Q#A(6V^BD<d^5*ZW!!3F$Yl)6;SMgQ!!!3@0UA_1q
XEt`U!9!nZ#=kEaXTFM;!n72O#$@GpVZN`>(?>Jd!!3BnRf'&bM(\q[!!3FPf_sq6jeEmI!!*F5!7^r/
!kgl%eGoXUD7TSZ!gFr2e,TOT=MFaK"2:<Y!VufP!!3@6W;Nb!L*6TI!!3@#XSo7'XH"b2klC,O!X<#+
r20UI*s'jk!X;ArrMKapMCASY!!E9%#_V%4joVh=!Rq)N#\rK"joa\X3!%V2!XiYOr4`<,0`h1Pf)PjQ
B"RuU!h^h?fDks[?)[\'!g5,9lN$,K!WcQ*r2g$_+T^3q!X`,*r20UU.fn?(q#CHs=eknm!fS6&fDks_
I,Fka!l@&#dJs=MHf=nb!5S[e!ndPT&o"cO^B18q!RLfJ#AggG^B18n"nM`k!:Bgg&7;72XTFhK!RLfJ
#%FD+XTFhG"l'(\!!!R8T)>JfOZ!6e!!3@2T)>JfOYR*o!!3pbgAL(7a@ZO4!7UuM#_Lb-joWUm#29+Z
'6q%b^B1&d!UBaH!!3aI[J[c@W([HO!!3dMVYmOtOYHmj!;-<n&7D=3XTFkY#M]:\&S[p9VZMf1!R:ZJ
%pbd)VuERqP<oN0!!3suh>HC:_*J.J!!3mcgAL(7b$,2G!9X=_9YC;<!hh=LbQ%\TDSH(a!ksC'jT,&U
!Ca$dXTFY;!R(NF%V2[>XTGSL'&3Hf6_sXX!0%"0!R(NF%:H(3VZN`<'&3Hf>iP\D!l@&#nc7DE!YU4J
rT41BTbuPb#Qf:c^V@LY2?D_9lMpthF1hLe!N.C$!!iXCXKAV+Pq`<c!;lfu"DFh7XT=b7gAhK\Br7f+
VN3A2aoDJGA>K4&!Kn`,!8db^"-M[,k2jTK!QkBD"cD==joNRZli?JS"qlBr^7$n[a8cAG@'@;A1thp7
!"a1LXGeh6a8cAG=.ZLZ0A-=0&8n5>LFrW&!7:cM"&t\cOY,5d"r<Tajgm\Xk5aKA"U&npji9R<!!NBF
Knq,XeH#.?!t&"f3nOE9!??B3,lu!c!=;F#JMc!Z"T]QbG9[..!!<O!Hnt6mk5YYd-)%(g!QG*A$tZJ.
i;iTP!Wa/S_Z0`D(^&@i!Wa&Nr;ak<!XBJCf)PjQ()-$7fDksX'a*%f!Wa>\gApI<!X]qNf)PjQ)&C?p
q>^R&(^&@i!Wa&N_Z0`C('FC5h>dTX()+Rc!XBGBklC/P!Wa>\_Z0`F*<b[.J,~>

%%EndBinary
grestore
np
grestore
gsave
73.0398 163.76 mo
37.8801 163.76 li
37.8801 122.36 li
73.0398 122.36 li
73.0398 163.76 li
clp
37.49 164.11 mo
73.41 164.11 li
73.41 121.99 li
37.49 121.99 li
cp
/1 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 0 165 ]ct
[35.92 0 0 42.12 37.49 .889996 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 110 
/H 128 
/M[110 0 0 -128 0 128 ]
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 110 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 110 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 110 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 110 string /rs cvx /pop cvx] cvx
]
/O 3
>>
%%BeginBinary: 1
img
mf3FrTm$XS!!<:+_(FLD"98^fC'23N!s2<!.*Vad!!!&Z!87DQ!SdYW$))PGdfAb8!s2ZB/_pC/#``X%
_>sQ8!s2<!.#@rd!!!&3!!!&]!;Z[!!\1tZM[7&t"Tqlkgcu&%!!NEMWS2\(r;a_8"TqNE_)VY<!3?2"
!SROh!!NB[]D.^7aT1u6"V5P8i)L!A!!NBUV;$_E]`80E@a)hb!!_H`!!/eoo)Jdm!<*#0!!30$!TO.]
.(SsNKGD*!"UeZ-fMD_3!!FOAeoVSr!6P9F$<,Nj7g-R,[/g4-ciE>2!s&E&!p'Cb#/9qi$,-E;!!E@"
p"D:b!!EJ'gis+8!!E?nfYB0:!.k4I!<3)/!<3)]!!Et:pm2]i!!3-.#1!8N"V1b2!!EC8mE6X8!!En#
gP$:7!!*E2o)RSH!X&r8p](F!=jjSq[fF5ErrMfnrrLLIr;Zg!p&G'njo>MsOT)=*p](Et15ep1ci=/*
RSs@a!!*U[!q<iFkl:htJ)Q_8p](Et/:0hfci=/$Le7gF!!EaMe>=5W!/LXT!W<#n!!!&E!!30%!qlWo
!U0Re#]8tP-hmZF"&dJ6C]jS8eGo_8h;NVap](F4SGeuklMq%m@*u;*p](I"8[m/U!p]jK!!G3ta(knS
!!F!mhhr&M!6bHC!VHHm!R1WE!W<#p!!<6%!<MKd"9CaDj<XL#"Tr#iqg&^t!!NO#h=m!<p](F4d.)/\
r;c]ppAb<s35io]p](I!;97R0%*nnW"@U/]IgPlM";JArAH_,qQiR-eo`,'p!<<0!!7:fG!VZTn!UB^f
'tWg5p](I$>3>*T!UBaF!!G:9oo'OY!!FJ(fKK?(!!<n1d7a67"U%ZFc;=Vr!:p0n1;_[k&GQ5.*QPoR
!M]YO!<3)l!<3)B!;url!<3*!!:Tsk"c2i1&,?2."'Xa:;oo"B/&(G+%ep#+?0e^/mf3InGh@BQq#CO!
:rp@CaT)GkW6obtp](Coc^PR(!2BPn!VQNn!Up*B!!<6&!!2cnrrMQg"9DBj_'f$Y"Thlhfi&.6!9jId
0=^J%"Si$#&X;m2!V$-m!D(eA,P_<C!`7%S8dEZBq>^XJU=4,bq#CO.K@X`;RfMUOrrMfn!s&E&!lk<?
!VZTo!VQNi!!F=foMYhe!!GmNn5fe6!!NE\b4K`Uq>^X!1!f;FnGi\1\(=4RquH]r"@:#V9a&K:"Tg<^
en+sZ!!E<Q\'cn[!3H8$!VQNn!Ta==!!!&m!!!&h!!EIWp7_Ta!!NBR`V4'Iq>^U"02W)7!;c`t?Vh()
!!GULlqIQW!!@36\-qm."9`f!NWJtV"T]sPgKajV!!<<Q7g[lL!`__rq#COYb0`TYq#CM,fqJh;!:g-i
!VHEm!R1TE!VQNn!VQKp!<</m!!<6]dG4dAq#CO2T(7R:q>^X$;UaD?g&M5ul?a3@!!NC.m)Um^q>^X0
_!bS2o`,*q1:Y1<q#CO0N7N+QrW)ls"9_<-_ALu,"16?j&c)J2!E.:L.foJH":qK[;Zb8F\,cO0p&P'm
q#CKu!!*,`!:p3j!VQNn!VcZp!V-3m$]4Fcq#CNuEq#e<q>^[*ET5ba#hf7[6,DphPnNon"9Wl=SeCi!
"$Z4`+S>^:$@13*q#CNuA^lbSq>^[)A]MVi#hf7]3i^S[&GcA0")6>E&H2\-!!>10TcAsjr;cftp&P'm
q>^["!!*'"!nmYQ!VZTo!VZTo!V??o.cS)Zq#CCL"7+/e!W)j##(#dq:C,VR"TgBdorJ]#!!<q2o3D(k
"9Y%\?39g#"!u!b(\n%6/C1[T!W)j$#&Mf-70`hH!!NESU">Y@q>^U1Ok3J+!!ECYe5HFh!5JR7!VcZo
!Vl]t!<<-$g]70N!W`9%p]1<ppAk3ooDeuRoOA""!!<SGnS@t$"9i?&lo*Ao"<GAWRgo8q"TSNag#*M=
!!=b9[2/H9"+Aa%!r;m!$*D`bq>^X$=O>DKeGo^jX58[Aq>^UT^W$i\!!4LmTE#](!0$sY!VZQq!!*,p
!<3)K!<*#o!<3)o!<*#n!!=5.^Er^V"9`W;Zk<08"p%TZg-G]=eGo^s`USHgqZ$a)JbGQ>q>^U+POh6;
!!=+dW?M*<"9W)eT+Cf!"9D'5_)guajo>N+Y17M$qZ$a)EnQ9Tq>^U*K%<)p!7:fH!VZTo!VcZo!R^uI
!WE)t!!!*!!Vl`p!VcWt!K-St"Sr*#1!SuAq>^XKdbIe'dJsD"_rY&&qZ$^B`plt'!!!$%9B32Wq#CNu
HJ*-;q>^UJ[E^H%!!FXZ_FamX!!FUMb>86:!!=:GeOfT;"9Cj0Rf`3^QN7$dpAk3oq>gNqrrLFGrrMlp
rrMfn!!2ip"!$@Z.Ja#I#^uGj!rDs#'ufW_$2";]!!**(q#CNu7GHQEqZ$a";#IX6q>^U5YOsIB!!=+[
`[(B\":&i!B`e/3";@reAI.>sp](<q"Si$#!Bn99,PqHD!Cu"<')DS1'V!]%\,ZL0q>f:NrW2`n!!2lq
rW1[P!!2cnrW2fprrMoqrrMio").G&!Vucu-dL<TqZ$a#Qi<umq#CI@[!^s8")Hg\!Vud!"EF%X"oA9%
!l*qtq#CJ7o9B.QrW!%*g5Z41!!=IS^(1#?"9O>9Q4!Ef!["%PjT#Bi`B"%r!!EF8f<kbY!!<;%bt@d3
!b0`5lN#*.!!1[OrrMoqrW2fpr;lfrr;Zfui;`iYq>^U!!!*,r!<3)o!<3)r!!<\4q`jlV")[dR"T/6&
!D;D-,5M9C"$=?iM#m>Nn,NT#lJu:[q>^X2WrI)BqZ$^_oUlin!!=Y*j;@ao!t1LO3;EOV@+o2qqu?j#
6--k`q>^[$26,5Q!Tj@b=3eof$Mj`*&=)0b"T&0$2qO'$q>^UB_T<SD!!!&M!8.>R!<<2t!!!&n!;ur[
!;url!!!)s!<3)q!!3-#!Vucu2q?=[q>^U+e'0NB!!=1AnPf5`"?=KeKam,D"U8DhiF<)g!!>.Ef/<F*
!t)*j4Sf$[!iblrqZ$^Q]X\1E!;um"$bE_pqZ$^8Qdn_(!!G']c?0QW!!NR-_8fU]q>^UNcFkn.!!<Op
au0"q!s4b@:ZDGT!<3)p!<3)r!!30$!VZTn!W<#^!!NB'!<E0$q#CBqp]1<pp]1<pqZ$^"B_-EC!!?3q
M$X"Z"9VluRK`Nf">8*eFUma<p](Eu9%Ds#q>^X"Du#G%qu?j#;t5J@q>^Uqr1+&j!!<:-f4k$\"%q<n
#Q+Q)"&RO("Sr*$.CdZ:%H@Ek!^XK?8cA_g!!E@4gjTV.!!E<peT1cf!!>gLM[#gSmJm4fpAk3oq#LEq
pAb0ohZ3ZWpAk3oq#CBqpAk0nr;Zp1RIqd#!!<;>j%B1K!tDj%1AUtR(X2Z-$/kje"&\(H.Ja#H"jbaX
qZ$^F`7P:j!!<Vua<UW`!tC%;*r5j?!is@-!!)rt!t1pF/G]>L'su_;#iPad"%UD[,l.KC"Ll#tqZ$^B
XM4r8!!<SXYTMU"ZiC(,pAb0op](9ppAb9r!<</l!9*tY!VZQo!Vl`p!W2p",KRe4q>^UOrPB3E!!>mg
P7RNj":g[jV$d,#!XUS)mf3D/4:qJl"onW+Fn<Zoq>^V+pOEJG!!<LbqagM_!ik6Pr;ZpAYcJ90!!=_.
Wt>.."%(^n%Jp,.%>3At$2ac)#V-tb!!4#q&,ZD1"D?;j)>X=7<n_Nn"oJ?&#CG8kq#CJ^a$H$lqZ-Tq
!W`9%q#LEqq#LEqq#LBpq#CBqmf3Ci!!2ut!s/H'!VcZp!Vufr!VcWp!W)j!4n"12qZ$a"K`?B!qu?j(
^YhW`qu?j%=67::qu?j5F6]+nnGi[mDsNf9qu?j0TD+'JqZ$^@`75e'!!?*]Z2se%$<m.D!s8N'2UcmT
qZ$^!FPq$5!!EM)`]sS&!!*-q!m7PZqu?j3A^6&3nGi[m@aBfOqu?j/N7rF^qZ$^<Xh5JI!!>d:S,rHd
"Amc^!WqNb!!2<adf9@Knc8XinGi[m!!*'#q>gNrq#LEqmJm:h!<Dusr;l`prW2iq!W`9&q#CBqqu?h5
p/_:l!!<_Fq_7mI"#ot[')MY2)nY5rqu?j0HgKENmf3J<Ykt=Aqu?j>f%WOmqu?^%!ds]EqZ$^>c1)VH
!"'n>R1Bf.!+"8P!W)j!%B%u3qZ$^Qg78fP!!=(6bW#G"":]4p^H(`_"='DkP9'Q$"<"nh3s#6Z!sWVq
:\t+o)n"32r;cfs"<Q*K%1W48!!/Ac!W`9&rW)ot!!2forrMrr!W`9%q#LEqm/R1g!!2rsrW2co!!2lq
rrMoqrW2rt!h\=1q>^URg>2u0!!AM\DZT_8"(_4]$2ji-!FkWH,Q[?6"T]4>qNVZj!!?$lPn3`l!^tn\
qZ$^!VZ0Ef!!s+X^`Xa"!0"iQq>^UL^Vg9P!!@l-@KH?+"'OH&#lO`)!E[hR[ib_?!!NB6S)&]-qu?gg
gOft4!!5:$Wqubu!KuA0q>^X,Z`5#dkPtS`o)Jakr;Zfuo)S^h!!2-\!!2QhrrMio!<E9!!!<6&!!2or
rrN#t"TeZ)!!!)h!!**#rW2iq!!*'#q#LEqqZ$Wu!VZTm!<`B&dD.%(!!6QqO8AnZ(YS"!qZ$^*e^HGS
!!Ft?eiEiu!!Eb@nmhh#!!<k>jtll7!u/3>-N!iH!,2@m!W)j'#b9j,0)u!^WZ_-<!`dTrqZ$^4^Wdu"
!!<P@\hO$^"=h^11]cqC":V$U=T\O%!th'H/c,MM&u"))qZ$_'i-k_(!!NUb`[WG<OT5@^pAb0orW)ls
rW2iqrrMrrrrM?arrMus!W`9%q#LBpq>gNrq#CBqrW!'0%.^5.qZ$^&MYTO7!!>gY[fZF,"(:nc$iL&.
(!#TK#5A0"!<WAs!!E<]d+]oG!!<=.mYgrB!s+)OC\n)6/c!0jqZ$p*Fn\9l$ObOK&c2P1#(#&aqZ$^a
c_1F;!!?3TIgZ,S";A#b<X/@"!rr?(!VZQs!AV(",5hKD"&[HnqZ$^!FPU=$!!=Y)W=/S'"9`Ak4?Ugf
!W`B(oDmGBrrMrrrW2fprrMoqrW2rtrW*$"!VcWr!X&Su!!<6%!<N#s!!2or!<</s!<*#q!!r],!<<*U
1\ut5qZ$^4Vsb)m!!<7NpMB^,!scm17f<;i!Hn@7&GcA4"XHoWD.QBa!r2g!#B9.+"8r3%-c=jOqZ$^m
o!/;o!!<PheKt.o$NL/-<VC$:/M5b'#5\B&&sL`Pqu?g"Dq\Rq!!<G0bs)(+"9E/mNXkmc#R)AC?"7,.
*Wl-;"9rAbNW]4["!ane%/U#,7+Rq1qu?g)b.Jnp!!E<qfihSR!;?Hn!TX4d"Wp3;?s#c:!m1KC!Vucr
!Vuct!<<0!!;uot!Vufr!Vl^$"tO,0KR-lO"8;cq!Vufq!Vufr!W)lr!VcX!!<<++?M/C9!!4F\d/*eF
%B91OqZ$^Yo>V7<!!ORnpFQ@Fqu@'=FfDg]]t:\RFW:,V!uf/R3;igZ#*/LXqZ$^9jP1UL!!9gm62CQd
5jF)Y;cD:Zq>^R>W42X(!t:LO,PqHC1Y/c=r;Zp@\(W5+!"0HTRAHpaWMH"u(]aC4!uJ)o1Aq1T"b,6!
qZ$^7ahehj!!9%<3r/gY36l\jci=CcAsAp`V5'WJAf0t:bQ.VCq>gNrq>^Krq#Ca>NQg/9j5J_<N?Irq
!!2rsrrMrrrW2lr!WW6%p]19o",;Qs>l"F%1tSZ&!!=F\i<B)Y!d=Bir;Zs$BCD>kqu?d"0!"c^!hCqE
q>^V8r0[Zc!!63eV>C5p!laCaqZ$\Qm9]Vh"Z+c,V07"_d8B`?!\V3NqZ$^>WQ,/=!!6ihEW#k?!F+!0
!W2p!!\'W6XTFM4!Vucu@GZbAr;Zmmc]\/*!s5XN1]%.RGL9@c!!=gdP*555jT#>`.$aS*!fAE-d/a.H
p]1<pq>gNrq#LEqrW)ls!!2rs!WtC,puVXk3!/mUrrMusrrMrrrrMoq!!2fo"T\Y'WT-SH!!5RUJGT<J
2Uf/4!!<G+rB1#Y!t_1"0)P\N!]I(W^\Y\GSgsR:"!6mY+8l0A-J[VgqZ$\an65\h!`o&@q>^aL`kT9R
Q,c2e!!5:1EVf_;0Y3tT!!<Flh_k?4!tUFF.Js/I!\p/;XT=J0q>^L7!n+V!r;ZpD_T)u[!!7l(;#:4o
9\O:Y!!=LMW2S/F!Wk$?p87qK-0P?o!<3)o!<3)r!<3)s!<*#s!<*#r!!36gc1^9#^,,QbrrMus!!2ip
!!2lq!!2rsrW!!#!!!,=_qdEO!!<7"qIBC&!_VU4qZ$^<`pO?8!!=anblR_B!Zd97otLNh$i0i)[-(3_
!!<PGoI]q?!bq@SqZ$^RrJC[R!!a[Ye'kG$_DV2j!s)!K=8i4!!!5L1HM[[E)6_Esr;ZpHZ*aW1!!4'h
XS&[rJdV>S!h[\*r;Zp*Y1>#u!!6HZD#427/DkaTqZ$^>Uq4.p!;c`r!W2p!)LJ@SVZD5RdK':Jmf<=f
qZ-Wsq>^Qt!<W0!"='r-k2uF#!Nck.!<3)t!!<6&!!2or!!2lqrrMrrr;d#TgXn+T!!<:0qbd4j!a,&.
qZ$^Uf#e$l!!5OONr/kY"B)c%^B)#Fqu?j"!,(tIr;Zp#TD)7\!!5^gO8AnZ+8_9.qZ$j=YN=l__S7Mr
!!<:%gdh5A!`%<PqZ$^O]s7\;!!5:-IJa'H"%oH_XT>Ioq>^S#fOt-_!s+A78GrMk!!#:>Ies*I)r-&N
qZ$^6S'&n'!!36mT_,,_V+95>q#LBpmf3=gq#LEqquH]squ?d%@bp\=!TRVa!!!&s!<3)r!!30$!Vl]q
!Vl`p!<_TNe0Y"m"98O@pdb2]!b(t,qZ$[hiL]uJ!s)X#@Jg*+&;'Jf!LErd!!>"ROTtaa!da]_qZ$^S
rgX#e!!<u/SdtVt#8F-*n'94j+o;6A!b'hJqZ$[uh+dkKrW!!ca,Blr!s)6P<r;pu%s@HF!JgmU!!=e.
J-PrP!c6\'qZ$^Mi/.R5!!<ndN",Xa!tpjIe(k!(!W)j!!!!LKntuMA"OdAM!VcWp!Vl]q!Vl`q!W<!"
!WW8u!!*e(o]?8<k-YBh!<*#s!!!&q!<3)s!!<6%!<N#srW*,no[+cX!!<CNo/upN!s3<=6Mg`a<To29
!!<@?q*t8^!?7m+^B(JZqZ$^4pn%uo!!<46qgePD"!@Q?#5eH'$LF]*qZ$j5UA4N8f=2gt!!<@?f/<I+
!s2if3r8mY9?_SX!!<@2gct]:!>q*mXT=t4qZ$^2gl)X>!!6B\EVf_<*8ltarW!*%!"%#:')MY2&!,K"
e,TLdORf:MQlOQT!!*-%!!2lq!!2Ng!!3#u!s/H'!W2ou+NF!7!RW7j!<3)s!<3)q!<3)s!<3)q!<*!$
qtn_ZqZ$^%J+,Dq!!E9)F8n5s!!6HoG5VCC#'Tc%qu?a?[IV'5Z8)4V!snOs&cD\2=o=6U!!=#:WX8S'
!s\"i(&It9&>B($h;,OWqZ$^$E7?T>!!<@8i%k00!`IH\rW!'$#&)aIqu?a<V"1VgTe-'@!sdD@&,cJ0
:YpKr!!<qnPmI9f!sQr7'Dhb3&!#Q)e,TLhT)>M\VZE8;dfBCKpAb0oqZ$^"!!!&r!!!&t!!30$!W)it
-ee.R!S0@1!<)ru!W)ls!W)is!Ug$e!<`,ld2i)a!sO#A48]'\")n3&qZ$\'m<8F.!sNlC3rAsY+LgpV
!O=KX!!<W%V@`\+!a>MZqu?j")uliAqu?g+m&(No!!a+1qto.&\/P5E!sEGk2>dFV"(L1IqZ$[qd:rOZ
!sE>m2#I=S*N&D0!MM+B!!<S[P7RTl!`7a"qZ$^8i04HD!!<PSP7dcorW!$2O58XA!!+(4ntuMX/COV!
!Vl]s!!!&p!!!&r!!!&r!!!&s!!+J&o&]u(4So*\!<<-$quH`tq#CBqq>gNrq#LBp"7u-4+8Z$?"Ea9#
qu?g"CB$a$!!E9%=mLS9!!<@?qF:A_!?A-1^B(M^qZ$^9pmqom!!6X,K_k`O,6+JBqu?g/n=pTm!!a.4
p\37i\K(JH!s<2f3;`aY!FF\IqZ$[ncZ&g_!sDue55bH_!#h<sXT>"8qZ$^6gPZI<!!66WFSc%?*oN1a
qu?g.e;t4<!!<dpg=k$V!?%0oVZNca*n(,g!VcWp!VcWp!Vucr!W2p!!WW8u!!+:go&]u$.Ja&E!W2rk
!!**%qZ-Wsq#LBp"6Sar-i3lG"E*p$qZ$\.rD<@k!`%gCr;Zp$=S?8&!!*^go"P3p$Msf*4o1$>r;ZnD
qK2T7"#BkH!W<!$!#,!s&,Q>3(9?fgbfm^EqZ$^$@G*d?!!6<\8,E8f7EL8^!!<9tfiS(O!>'VKXT=@e
qZ$^Vh0K5&!!6ojB);Q1/`;Nfqu?g2f8L19!!O%'d*Mamec5^^GOhX4L^DN1rW2iq!Wi?&qZ$Zt!<Mur
rrMus!!2rs!>_I$joN('q>gNro)Sajq>gNrq#LBp"4GWN1A_%R"(V.'qZ$\!nS\4(!^,/Jr;Zp"604=.
!!3=,\F[H8>P\=%H1GbPr;ZncpfRCn!`JlOqZ$^@qN_Hb!!aLNgt]HN^Ff<_!s;W[8,E8f:"<\L!!5$m
V>L;p3m*'P!!3=$Vu3[lXT28q!!@#f?NL**!eoB(qZ$[hh0Jkt"!$-M#l=T()5"a]e,TOR:8.9W!)NFk
f`:sOq#CBqq#CBqq#LEqqZ-Wsqu?d&CYn[F!,_N3!!2rsrrMrr!WW6%q>gKqq>^^#!!'[Eh`pu<!s)3l
B_qc28)o^.!!=RliWoD^""D7=!W2p!,+$%:^B'o;qZ$^!a5]Pc!!<G<oelUH!d4-SqZ$^`qh,"K!!N?&
,f%UH"/_s73;W[X!CkdJqZ$[^a+*sd"!Y+m#5nN(,d4c[qu?d?Log9O!KRcg!!<8+a#j5"!sYUR0Db_N
B\$\j!!>7:F927="!FSLZhFG"!W)lX!!43pVY-hfM@S&7rW2iq!W`9%p](9pq>^KrrW)lsrrMus!\(P=
p#Z:h'`%e0!W)is!UTje!Vl`p!<\j^k>;!T!^Z(+qZ$[We[52R!slF9-iF#I%%R5Mqu?j#6aXVCpqHj7
/c#GL/,.4"r;ZpAg?]4E!!8YY=8Mt!Ab0j:!!b.%ZEf=DbX_L0!]nVNqZ$[Q]V#'$!sbRY,Q.TE$]<dk
qu?d!4eq_Q!MCn=!!E9KgTqIi!!=4VcjKXM!f>B#qZ$\#emeIU""C[KSC7H>!BZkGVZE87l2]rH!!2lq
rW2iqrrMoq!!2rsrrMus!Wl6Op>uD+2Yd@Q!W)lr!W)ls!Vl]q!W<#r!!WH(!.&t[A,60,1tST$!!=F\
is>M^!f["fr;Zs$@d^,squ?g":oqD-^B;3H70NJf"9XGXK)toN"&8$f!W2p"#L;HfqZ$\WlWX,b#<C_/
QY^Ke=8W%$!!"XcP5>4]*i[0bqZ$\FgfaRU"9DQNP6Cd`!s(u_XST%$XHbsOqZ$a#GMdKCr;ZpfcCb49
!!<G5b:WSk!dr<jq>^UQa+]61!;6Bm!VcWs!CiBPqPOFmO?<X6!!!&Z!!!&p!<3)r!!!&q!!!&s!!NB'
!!*-$r;Zp$@F+$2joa\a;[*!trW2lrrW2iq!!2orrrMlprW*.!;>5D=qZ$^F_TW&Y!!<S(qC_XF"&8Kp
#Q4W)*m!t:qZ$^!2Li"0^B1Ka1]R[T!!=n%lQlE/!sOGR?Ma^)-0itiqu?g"^>V?R!!l3dG^)_Kg2-og
!!=FGZiU()!st+G.Jj)I7+n+8r;Zp=Ygtc1!!<6VF.iH5".O6_"8W!".Cd\Hr;Zg#!dE?sqZ$^AcFXP`
!!<8"a#Nnq"%(LPC@_E*!T3q[!AAA\r20X_Cb>hJ!:Kmf!VcZo!W)ls!Vl`q!W)iu!<</t!!<6fRFV5t
"4*5s"o//t!W2rt!Vl`q!Vl]q!Vl]u!<E0#,6K1dP7%0e!u%L#'`.k3IJ7UU!!<eih_G'0"9E07XVCX4
!Wa0prP&EH5S*Yj":g=_GldjD"!P8A')MY1<V**b!!<f"clW&a#m+W5;c=b[gk#k0!!<gqee7r^rW!";
g0jdX!tWAi/,]GN!F+KM')MY1!>g+]XTGL`%f$)-%=-WB!W<!#*i.*nqZ$[jes#t2!tN_f)uBU<!a+8N
9&9R>!!30:GQ"E@Uc8h-!<3)q!<3)q!!!&r!<*#q!<3)r!!30CU]'<Vi_C-^!!30$!W)lr!Vl`q!Vucr
!VZR!!<<*%"73-,qZ$^#KDJ.9!!>gZ^'"64",?Mr"8r3&#fQ7M"oA9#&:sep!PTQL!!30oklJj7r;Zp#
;XKtN!!<=dqd0.""$HLg"T&0*#);V+2Za'.R25Z"!s3T"5l1N`5gZG2qZ$_Afkgii!!EP/emJXX!!*UQ
rN-+%)>O78!CP,9$iL&-!D1[qqZ$Tu!eK-*qZ$^UhOarJ!!ELLe1i](!!*RLrMK[n(t8Q\!<3)q!!!&p
!<3)r!<3)r!<3)q!!*e'rT4.B+mo@1!Vucr!VcWr!<E9!!<*#t!!9pY/,TAM!!$?lNr&eY'%?.sqZ$^9
mCjkD!!FM)gI2/@!!*jkr4`4^q>^[".G!TL!W<!#&"rAPqZ$^?_XA6:!!73?K),HR$ae8.-NF.FZR5MK
!`[NpqZ$d2]$D`(!;um"(=K-(qu?j@a2'n>qu?a3Hi0uG-i*fH!@>D$4TYK]!tC7=2#@7T*37O%qZ$\/
i,e_p":Cd1,9t_=qZ$X1GPn?=--?2f!Vl`p!Vufq!Vufr!Vufr!Vucs)Pm;n!&OTSqu?g"!!*,t!<3)q
!<*#q!<3)r!!r]-!!**#!0$,.q>^UTgsl]-!!A8UE<5q:",lYb#5nN*!F+U0637#b!?I@$^ApOr!!NEb
bO'?Yqu?dim\Kmsqu?g":Z\JN!!<J,rC?\a#o)=!(Dd&OI*=YJ!!=mj]Ee<6"+Am6!W)j!HdlC,r;[!%
:rp(+!W<!!)MJ$j!'9uW"TgKcdU`d`!!>O8OqITl!s(m6P5>4Z"p11L5Pb?_'$$=R(!cj\)M%a`!'&.%
!!2cn!!2orrrMoq!s&E&!W)ls!W)it,I%+.!)E:h!W`9%qZ-Wsq#LEqq>gNrp](9pqu?h%ph'^+!!<_C
q`=]VrW!$XpU(k8!!=e#cm/Gg"Uo;4g1(Hg!!+C9r4`53qu?m,=3p\m'Dqh5&BNd'!rN$#%?L0OqZ$^L
eE%;=!"(d]L'\.d!)MBS!rDs"%Ahl;qZ$^Og7T5Y!!=UZ[ibMJ"Ueb`^fUmA!!+7&r2frnqu?m+9t/nt
&c;V3&$X&@!rN$#%"?hmqZ$^G]?1Z\!!G+3FpJB"!!4:!Vu<Ln9?I57!VcZp!Vl`q!Vufr!VcWs!<E0$
rVusM]_pmlBD_`1!<E*"rrDutrW2fprrMoqrrMlpr;d'%!&EW+#l=T(!I+NuqZ$^$Zfb0^!!ELJoV2Kc
!!s!CoBqk_!!"RIr4`5Jr;[!0L[+JH%/^)."-`PK%Jp,,.GDQ;')MY1@d]ET!"+;F?3(',!%l<N#Q"K'
!GUJ:qZ$^$T$9e&!!EL<erTt2!!rs7f$T*e!!"F5r2fs.r;[!/GL"cG$iBu-!eT3_%/U#,,f$AjqZ$\!
d=D&n"TWSj;ZQpl!!!&T!!+I0r20O$b5hMBq>^X!!!**#qu?d"!<N#s!s&B%!Vl]s!<<0"!!+str8n!2
quH]sq#L?oq>gNrmf3=gqZ$^=\^qGi!!=bK`Xr"I"$cRH&,Q>,*!<PGBE\24#<L<'@fl]fYPc-8KDbcP
0^mFZqZ$a$=n:,hq>^V=q.U!0!!<Uqq_@pI!s6j"2uN^Y)Pb"Wq>^UEh6.@d!!>48KFReY"<!cg>Qjp(
"uNm@=9AOV!2'1k!-eAA""Vg155P<_!`.C\+Sl'?A_^Poqu?g+L>=BV!!<;4]J7Y2!A9f<VZ:f4!7V#K
!VcZo!Vufr!VcWr!<<2t!<3*!!!,=5r8n!Nr;Zm"!!2iprrMlp!W`9&quH]sp]1<pqu?g+M"j42!!<A@
j%B1K!tMZt5l(H`5hkR&#5\B))dXfk!C46o^B'u.rW!$.:F#u=!!NKldcjI,qZ$^?hoIAG!!=gtb6IkE
"TSNTqQge4!!<OPgc5-1!sG[F62LWa%@tR"q>^XX_TkaXqZ$g;;]u/B3iMtY!KdE^!!<Qt+9DB?"U$ls
c9q^1!!=4[YUB;J"":R_#5S<%.GUL*p&NbG!Wb9Tr20RR!Up'h!SmbU!Vl]r!Wi#q!!2ip!s&E&!W)is
!WE'#!D_SNjoN7!rVup!q#CR"!!**#!Vufr!Vucu!<E0$p](9pqu?g"=6Z%H!!?-oN=5Xa"9MNbXp+\&
"Tqindn9lD!;c`t"&cl2^B(YJo`,+R_s:q:qZ$a&U%3@3qu?j$AG($Fq>^VIq0W5A!!<6rc%Plm"%h6p
$N'l,!_U\*"T&0&!_q(R6O!5b!Wu)sr2g$p#lsZ!">R"(>6=[%"9ab9BEnA7"9M`YAc_`."**(4!R:ZH
"%]<eVZE=pmf;bU!!20]rW2iqrrMlp!s&E&!VcWr"CpQkjoO*DoDnmlp]1<pp](?r!!2Ti""27Y&,H8.
$..$OqZ$^2UA%mg!!EF2n(:&'!!*::qnE0G)tj771">]9$2OW(;"i!LqZ$^,^Y1I>!!<bWnMU7F"TSNI
Z-a$W!!<M9\1.:T!t^LH;#1.p"B3da4SSmW"^V#-!N[.3!!Fjbe7]-a!!>aEYo!9;!t2*D/G]>K%Cak@
li?#F!<l[(VZEY3b5_SE!!2fo!!2ip!!2lq!s/H'!VZQp#CQF2!TYBs!<*#n!<3)q!<3)p!<3)r!!<@k
r*fF%"9E<9E!,t;"%D2<.Ja#J"D$ok=9\O$!Xa:hqnE+dp](I$<:oa2$Mj`),Kfpbq>^Ujr/qKb!!>p[
_?B`9!sFA8<r)e!!FFVm!rDs"4ic%tq>^[$=jbeq"Sr*!$#f[B!%msG!!EEsf@FmIq>^U>ZJJ:O!!>RE
JID;S"%1A6"RlBk!T*kX$#BC8!%d74jo>Ga!<Mur!W`9%q#LBppAk3op](='PksMB4SAdT!VZTo!VcZp
!Vl]t!!*'$q>^Uio=PM.!!=UndiJ;c"9a5OYo3B<"pnelqN<B5qu?a,Onufm:\k%q!@<Qgic>M(!!Emr
oTKCS!!<kYi(3\E!st1d>PS7&6.Vn@!!)os"!b4b)Z'L;"EE7f(A\"8#ZndsJL:Tu!!*L\qQ0`fq>^^#
+aDASAIA86":p%6JcklM!t_l[5l(H_#_Lf-iW/9E!=OAQVZ90-!<3)p!<3)r!!<9&!<MoprW3$!qu?a.
Y578\?haX#!<E0$q#CHs!!2lqrrMlprrMlp!tNE:8,<2g#^Q#r!rDs#&ZkMO%f-//"\#ci]dip[!>DL0
^B/<R!;lg##I3g09*G(k"9W6![hJW="9NZASdtSs"#/!O&,?2-%C",Bq>^X'CY*_2qZ$a0Qdp!`q>^[%
4eC9'-2[`D&XrQu!+bp+"U:OJUdG:^!!N?(>0W`RqZ$a#B&/@Sq>^UJ[D!*o!!*XrqPO=%h#QjCrW2`n
rrMlp!!2for;lcq!>j#WjoC,2!<*!"!!;oqrW2fprW2fprrMrrrW!%+qiqNb!!=[mmlC4E"<YkP>m'p'
"9BHYU+#p>!@#2Q^B'>sqZ$a'M00sBq#CLaj4-<h!!=q,mPanA!sNN7F8#Y:;Vcs3q>^RBZ-r\.q>^X<
[*DPOq>^X!(gr@Kqu?a>WqrguJ-5ZK"9s-b*Wc':"$FW;2YmCU/&'Fcq>^U#?eK#C!<)ru!VcWq*i/Y1
!IP!k!<3)o!!!&p!<3)p!!!&p!!=\0k2uU(!NH;"!!<6&!!2ip!W`9%p]19op](9pp&G0rgX\C\!!@'4
_$^#="$,<01[kAE7JX\!T+gr!q#COJoBBEZqZ$^*Qi)F1!!=%VhB;Om!s6?P1\h"Q?e_Req>^UR`RZX1
!!#4YXT=Lqmf3J;f?I+mr;[!$!""D:Eqo\;'s>Ipb5_N)q547O&F0;r!UKg`!;c`r!VQNn!VZQo!Ug!g
;u,PV^DH;<!s&B%!r;or!VcZp!VHEp@eG<Yq>^X,](0nIqZ$d'?f^EA#4_`oCAGUFW%%6:"U.3DnTY98
!!EC(ji7f*!!?R$KF7DQ"'4&q#PnE'$`)?b#Q"K)"B<Le56gZY!+>W)!LP2'!!NKd^=?s&qZ$a$9?OIH
q#CLqflRPD!!-?&qPO@X,ffuc!VcWs!<E0%q#CKt!!!&j!!%NEjoNU[q#L-h!s&E&!Vl`q!VZTo!VHEp
*5pM_q#CONgseOhqZ$d-C$OMY$hOE"!KQuj!O+o]!!NR&bj0K]r;cfs"!tkD7/6fb(Xghpo`,(3XhQ=\
!!Fdf]/Tig!!N^8cGEBboDemmJbcDKT02ZE"U7H'cY3a_!!=CGa#s.t!>W-G]JJXL!!29`!<ITDVZE5I
aT2;@p&G-p!!<#t"T\T(!!!&l!!*,$q;q_-:\"Jh!<<-$!!2lqrrMiorrM`l"9iH,QN?p_"9DitZkr]A
r;[!,<pAUe$hXK##dX9@!kM\=oDf$sCu"5e#l4N(#,^p=$Mj`*!J^?-$M=B%"C'<.!Vud!!E7F=(&@n6
#>NLaBF=S9qu?a&U%telW)Wlj!!NI3_9?*hq>^X%PLXOWq>^X!G1q<MnGiOig].?[S,&r_U/Csl`rQ,?
pAb0opAb9r!<</n!!*GXq;qb:E<5S0!WW3%q#LEqpAk0no)Jk6](eA_!!E^jr0@B[!!NBhh"m`Qp&G(@
pV-`S$2"9%&=iUV<sJL$"9OGXYS[9=qu?gWlJO,_!!=19gGSd,":K\8KE:oL"T^[$glDg9!!">>XT<8E
o`,.+MquEJ#5S<&!dNRk(&7h30[@Z`q#KFT!!2Ti!$h69!GMh\!<3)q!<3'!!VcWu!W`<%!<Mlo!&=61
!Kdc_!<*!#!!!&p!<3)o!<3)j!!E=,m*HLC!!FXXr-SkJ!!30X\c_`\:Cd."!*K37!PY?-^B'E8pAbC'
8]gbM5lpf^":/i:dPCUu!thU0EUj)4!Dq.Q'DVV2,,*k1$2OW+!A:2&^IA\-!!#goXTGW+Pl7]bJf+4^
"p[H"gTij@q>^X'?e;h>q#CL-QeZ-B!!!&Q!!#alVZEZUrMK[F)#40Z!!<6%!<MoprrMfnrW*$"!VcWp
CAm8qjMh)[!NdL;!<*#n!!3-#!VZTo!Up'l$_dBI$Mj`+!BSNsCC9k;"X8]Zl"UJ"!!*.SrP&E>?G?ER
!N%LD!!GjRiJo/Y!!NR.hV:I!q>^['Aa6]4!:g*m$BEq_$2OW*!Aq::?4$E-"Whj,c!CVN!!*.FrN--p
<NQ2%!LG80!!GR/a*f'*!!NR$`5=Y;q>^X&>0`cKmf<(^!!26_!<R?@VZNAdVZ*IoOXS6MrW2fp!s&B&
!WE)p!<3)o!!*1orT415ETR2^!Q[4n!<*#o!!<6%!<Mrq!W`9%mJmA9gYPO'q>^["5iL[0#Pe?&#Xk(f
#Q4Z%!!*S*rP&Dr1:7%q!kCZ!p](CUO\H2X!!H$Ii_9IL!!=gthD=U#"<kV"5lpf^"T^X(a&N?>!!ENh
LJnHS!!*OorN--S/Yi<I!N8*\!VcWs14Vb!p](Fb]Z3D@q#CLF[DXZW!!!&`!!*LhrMK^H/=ld<!hq^V
nGq/@rrMlp!s/H'!VHEo!<<2t!!*\OrT40b4P9Yq!oHfTpAb0ooDejlq#LBorrMNf"9D$d\/kAF"9CgN
ku[W[!W`W5q#CFHYl2<<?Qbm;^B%aHp](?t#m0l%"@VM=?3U-)"9PLpC'F;2q>^X!5M;bLq#CNu3m5cB
p](?r#m^8+!@XT=XTDNDNW#s[=9\I"!Wr]0p](FZc-B5jq#CO!PM'7Gmf3=gp]19n!!2<a!@O?7VZKd:
M#F4P<<^GD!s&B&!VcWr!WW8p!!3-#!r2fs2:VTe!coa%rT4-'#58)t!VHEm!VQKq!<E0$mJm@qN;&/4
q#CR#:#5AB$h+,t!E?T.^AttL/J<X5^B'3$mJmCs<V>Nf"o/-$"aBg?)=7D,#^k?O"Si$$"%:&X:($Ij
!WbulriH:(.1gY#XT<hYq#L*g"UIcRbZb5G!!EF=h3&Pq!!30mT`1hkVC)pprMK[A$g7TK!!!*"!VQNl
!Up'j!G1*djoa[&(7Y9b!N$Co!<3)m!<3)t!;cci!!FRTo4A1%!!WR)eG+_?!V-3l#^a;b^BCSD"Cf%C
^B(PYmf3M.H0F6u"o/-$"^:ZE2X:>H+J74g"9A8u"p7K/gN=M;nc/^rDlir?"IfZ"=fVJ'!M:7u!!O-Q
bf<fgq#CO#:YN00e,].A!XEM<rhfma#R"2(rhfdc(rQCS!V?Bk!V$-m$C'W6josnm$O(_5roO72+m]1/
!VHHm!U9Xg!^PB(=onF!"pI?1o;XJFo)Je5Q2SH#IK0@6YPu9;^..u"p&G7?U@#li"Si$$!_Cr4:BKh^
"Tg]tcqjc=!!WQeX4EOd!V69l*/FKp"EFJB4.cGR!N\NT!!OF*d&]J8q#CR"5eYZ:!p0I_!TX4])hS$d
"E"2>3LTlE!N&$5!:'Ud!<<2q!<3)h!!+CPrT46M!!#dBroO7C<:9ee!WE'!!qlTo!UBab!!NL&qUe1:
q#CU")P-TR=9A*p!BR=]^BM>C!!".4rP&>_nc/js<n[2J.KT;E">.Xe=Tmsh"U%?N^H;Pm!!WH?MqPd=
!qZHn24XZJ"ft#j!$.*uXT3J6!!WR#^Y+u#!VcWt.'M<!"Ng`D!!+mBrhfps5QCd(MZ'FQE5_eZ!WW3$
p&P'mnGiSZci3&1j];E^-b]NA!TojA!!*-$rW2Zl!s&E&!p9OdB_KP(!VcX!%Y!X?TcaF2!!3:,]`,YM
Y9X)J"bj\i^B(PGo`,!n*<_T!n;n@Y!!F1Pp3Hc%!!HQ[Yq6"O!!WmNbi"L$!quZr"&Z)tXTkC@!!!1I
XT#=&T*b/j"p#Wof[PB`pAb40V?5Fe!QP0A"&G`lVZrP2!!!1EVZ*IoRL.@Ao)Sdko)Sdko`,$sCuYHV
#1G(&!!]+XroO72%J'Su!VHHm!TX4_!IX7H!%mpF"U.K.o=6.@!!*X\rP&Al'E.t4=hO^J!&sQN"V.-o
^J=t+!!FXVo8aRH!!E=>d&&5c!!NKkUXu7`pAb4(F8`3AIhM_\!E#lqXT1-L!!NgieYu">pAb=?T\"W)
jT#8]irB)iDuHR6H2nQV!!,ijrMKWL_uKf>!<*#l!<3)m!!*b$rT4-[(]FC8CZ><T!(6V`qZ-Qqo`4pk
irB5oK^Zc=!VZQr)K1*GpAb49WW'X6^1R]M!!+OZrP&AW!VQKq$"@irq>gKp"T^EfqNi/]!!NjSe#P;+
pAb:3@W37[!!+(-riH7'>mL?/!@=]CXT<5=p&G1#<b!-D!!NBTU"tD>q#JY>!?77%VZN`!#Q=](,bk78
!GDMU!;ccq!TsF`--Q;M!p+e9rVusShu2[<Nro"T!!2Wjr;kmX"VZagd6ds4!;lfu"UbA*!!,U'rkAN?
703Af!=,@t^B(2Go`5!rpAb?t1;E[R(?#5s&p`<D3s#'U!X&i2p](?q5camd!hhdYrVus(PPqTaQ4iij
rs&2t"T^0Rh1l]j!!!&o!!,9[rhfgf49>E]!=+V`VZNcY'#O_J!V69k!quZq<oa2A!nU?OrVus*_u8]u
`u+ILrrMcmr;kgV"U'MSg.2>3!!%`O^B'cJqu?_*rP&B?6L"OU!AW$uN<0([i;a#`FPX_t!p]gdGl=`F
N$/#u!*K3%!M_dB!!NBR\_MQ6mJtf<!-J1;!J_cp!!$$tVZE>Ll2Uebf`2!QrrM?a!20;Q!P0cY!!%0?
joO+1l2Uhd!<*#T!!NFEio=S[o`4df!>W*C^B2,s#Q+Q&+1V<b!k`RYli72"=leds%c%*g!bKEn=q0j!
!>D@0XTPYD#6=]&!?A$:XTGM9"mc3m%8Y*iE=Kec!>;()VZN`3#Q+Q&)km8/!i0B2quFY8!!2Bc!?'\l
joXV/$2ac(-/SX`!of+ClMq%f!<<-$g].Na=4$H#.fo)=!*oK;!Okf#!!*.`rP&B"+mo=7!@<Zlh.$re
!;cca!!W[&\C?*W!Ug!g;uNg!VFLF_!<RoPXT=8"mJmFl+a_VS<t3scjo>BYrMK[h6i-ia!e1*G!JDK.
!<*#n!;?HnDuJf!gg0dW!<]M'joMn=m/R4h!<</Q!!WWd^&#Z>"n;Qn$)@I6!N[.7!!,m0rkANA702iW
"Za<i`&e1V!!WW^W8+I?"RuHm#aG:i!Ljl$!!,WlriH<u4okW`nGi_KVq8"-#/U?@#`nq^!L=Js!!,Nc
rhfgg49=jMe,TON!!2He!=QmFjoNdKq>^P(jo4BDfM_h9!!!&m!94%^#E8N2..I9<3kG:)!.=SB!?eE@
^B&Ebn,NRlan_53iW/TN"9s80^*N4K!ApbRXT3A:!!++/rN-*7$h+-!!OCL6%+,(E!!+jLrMKX4q#CF8
Q2RT]Ad\#-!!1FHrW2Kg!CbrFjoC_C!!+IlrT4->%e'Js!Rh#N"]BFUnc/^qGeX-k!.XfI!Fqo'^B(AZ
mf3Dj=prdZ!sD/,&b5o'"`:@>XT3G<;#sjbrN-*i+8,^2!!5kk$GZWC"_jk4VZ:Z2:'"CVrMK[]*p!CB
!!3CejSe3@RJCV!GK'OC!R<.D!8%8P-D0Y>!*$i9kl:`/OR0(L9X4Zp!!+7$m&'hTWrN/Q^\R$ajoAto
!!37&\*Uj3Sd#/pY5eV+9r@9Z!KREP!5JR9"&#<RVZDYYh#Ph&!X*/km,e>_#L!2-!!*jllb<J76b<?i
!!*d]l`C2h4KSSb'R6PBVZEYUXT/A@V=3RFjoOR?XT/A_[JmoB^2Ok]%fni!rP&B%$24G0!!+pPriH7'
AeaqK!B6_NXT==cjoEL'!A^8GVZN`)'D;k924OQB!JUm1!87DR7G7\&!p#+Tp(@Btf)=_3\I6=Uli7(h
ID5]q!in6\p&G*uN;^Kl]0EV%r;Zm$ENK/A!h1qGp&G*uJ,QJMWB%-^!X!;:rhfg_0EM+Pq>^O$HMs`B
UGo@V!X+kOroO:-6NQl\!=>b(joaR9!!'8(!@YAT^B2-$'(c/)42(X.!ks9rmf:3)!@=Q@XTGSI&G,r'
2QQhZ!j$SSh>mEQf`2$tT)PVhVK*7?!!+pQrhfgpEt$(hl2Ui>g&C+8jdd1Z!!,UMroO:DSe/=1qu?`u
MuCBlZqg_p!!*4hrP&B74L"ke!Ik!L!i&6drW)Zm!<\2WXT=nLYlFe*H2XWBSOESO!!*1TrMKX]!&Uq\
!<K+sjoX1B!V??m"h+Bl!RF=,!5SX90u!V$!La\m!!,9qrkANKF:I1/dJs;!XSo7%N"Y[]!B@(XXTGS<
%+#"7!!+UIrMK[O&b5o&2P^8L!iBQ;^B!m+!B]EAjoN%0nc/\`iVqs@jGXVU!!*O]rkAQM^/G('!!*Uj
rP&E71BFi_!=X2NXTGRs!V??o!!!LZrN--j/ci<Z!=NuIVZN_e!V-3k%=J,P!gP><qZ+2-!=te#joXXT
!V-3k&utom!mWq0l2]$.!WbQirP&B.%e0N#"&$*%^B2,s"PEe2!!30^T)GblP7@$^!WtieriH7'E!+/]
mJm:h319`C!KITY!!36gTDk_iVJH@D!!E9%!D_)AjoNC4nGiUn>20&=!p,[N[/^7@J%kos!PUtu!;6Bn
)iss4!P'hj!!3^QXT#=&X?Q(Q!>pFeXT>@L[/^7>Dl3N3!N&!J!!*pbrMK[j..RAV!!3q(jSn9BjAPFH
!?eKBjoO?ui;hF/!WbTorP&B')=J4?'P"ZO^B'l2d/`>0!WbBXrN-*[([_n:>,V>$!KIE#!;HNq!BH_L
VZDShmh#U6<h]Ji!Jq&j!!33sf_sq4]Ds&B(BPFthYlR;]aD4K!>:Fj^Att:])K8A]>"3X!EB63!!*X^
r2ft"mAL&cXSf1$9`t:n]`8'EI/KlBV<suXUo+'f!D<O\!6tQF(9@Aq!9<J)!TE/<joK)tg&U"1!EQhj
^B'oPaT1f1!D]ZQXT=J+\,ZP&Uu8-OMBKD/!GLH_k3qF5^+?ep!?\Q(^B;6_C^R`R!?@`hXTGJ2$1n5<
!!+(.hkpON?4#WlqZ,IQ!@H=RjoXLn%*S_@!!*:^r4`6Dkdgc-rP&E82?CGj!<mrMXT5?aVuWmsXTG"I
!PAC5"a^*E!2K=`nY-#[rMK^`0*/]c!=,S$joFB(huMg9joWjp!PJI7"AcK)^B(T1kqrN$E4c(`!Jh<]
!65'@"%T3dXT>(\kqE/oAuYa2!IG@>!8%8Q"%Aj\VZE8Okq3#k@\`n"!I#%(!9jIb"^g$_joO"6ks,;:
LZ/3o!M^@I!;c`t!@O64^B2)P!U'Lb+-XG<^B2#P!P\U9!@*I"XTPV$!<D?a!ZZoqriH7%;ZXW5!WaKu
rMK^n:BBnaq>^R:J>W=D!i/Zo^An<90=LiA!on(ukPtZ2Z/tuI"6"/"!5JR9%!0&Z^B'6!k5YPd9<nH1
!OFWO!7:cJ$YZR=XT<kVk5YPc7%jL\!MV7(!9*t[$=ot2VZD&Kk5YPc6(@hN!M(jf!:p0l%Z96DjoM@f
k5YPe>1NT6!SBWO!!5?q^](tKYq+o9!XOLorP&B,'>OSK32leX!MCh5!:^$j#C*?KXT=Rs^]4BnUA^tj
RjR4s!!`OHVZ!CnN=`l*!DDALjoO!hjT#>hT]Q.7!Q#ZJ!6P9B+/o.Q!k;bIj8]3-XSom8]5J,A!8@JS
*16],!iK3-j8]3*S,KGjWFQCg!:0[d)jC5u!hi[$j8]3(QMm]_UL=ML!;ulu--H2K!oA/0j8]35ci)u-
iIqcZ!!*jqrP&EJN#hfrk5YNS\Ga/DY"T#;!!*dbrN-.&Ii@VQp](=]VZ!UuSOE_#!!*d]rMK^oH5bcC
!C3=VVZE/O!!U:@!?8*<joXVC,N8\(=5Ei;!mt3VnGq)>!X`kYrP&E=2Z_n<!X*DTrP&B-.Gt3g!!3I;
Wr9%$TJ?Q-!!3:6XSo7%P9nNTpAb7$@ANk"!h1kEiW'#_@&En#!KAAD!!3U`ir/!@eNs>s!!3=Xjo+<B
__T43!Wl'$r4`8p8+K+;70-VqrP&EJQNtP2!Wkfar2g!Q5iFm.5#RsMXTGS[#0-]F!^iLUVZD92i&h$9
R/NoaVM#0M!6tQG"'jIUjoMYdi)9YndJ`2/jg>BY!;ccX!!+gLd(]U1%FY=N!!+X8d&d=h%*/DL/!'Y,
e>E=b$ci;K42pRKjlQT2&'4eP*L,9mp:g[@A.6T\!?-^=XTGM,$iU.N!!+!ic_gi?=:4Eqh>dR$Zd7b8
iHYpg!:Tsi(66,S^B1T9#L!/L'S3@2XTG+d#0[&K'RZeLVqe0OR7@J*!!4+?jl5FijoX"?#gE>N&;7dr
^B)'VfWkOf^\tnKXZQX0!!3XSXSo7%XJFLB!2oas!hD4MpAihG!Y0:KrMK[nT%KP5U&:eiQS\a*!9jIb
';+CbjoOPrf[g,[r8n(-8-.6@qZ$[-Dn>n^!kiaffEq[+TYCB>!j!dNci=+VA>oI/"062I$/#Ud+d&l)
XTFt<!RLfJ$t5n/VZN]-%IXVg#m)6.VZ!CoQ6QFW!!3adi;Md>j,Oc/%/UG7/A^HHjoWj`!mpuL$=U@@
^B2-%&(^d_"$NOZ^B18e!n%&M$!=#%XTGSJ%bC[^"#uVEXTFh@!q63M!!3I+T)GPgVK33u!!36\Oo2*Y
OXgLj!;$6m%!:2$joXV8'%[*b"A6`4joWUd"4I5Q#A(6V^BD<d^5*ZW!!3F$Yl)6;SMgQ!!!3@0UA_1q
XEt`U!9!nZ#=kEaXTFM;!n72O#$@GpVZN`>(?>Jd!!3BnRf'&bM(\q[!!3FPf_sq6jeEmI!!*F5!7^r/
!kgl%eGoXUD7TSZ!gFr2e,TOT=MFaK"2:<Y!VufP!!3@6W;Nb!L*6TI!!3@#XSo7'XH"b2klC,O!X<#+
r20UI*s'jk!X;ArrMKapMCASY!!E9%#_V%4joVh=!Rq)N#\rK"joa\X3!%V2!XiYOr4`<,0`h1Pf)PjQ
B"RuU!h^h?fDks[?)[\'!g5,9lN$,K!WcQ*r2g$_+T^3q!X`,*r20UU.fn?(q#CHs=eknm!fS6&fDks_
I,Fka!l@&#dJs=MHf=nb!5S[e!ndPT&o"cO^B18q!RLfJ#AggG^B18n"nM`k!:Bgg&7;72XTFhK!RLfJ
#%FD+XTFhG"l'(\!!!R8T)>JfOZ!6e!!3@2T)>JfOYR*o!!3pbgAL(7a@ZO4!7UuM#_Lb-joWUm#29+Z
'6q%b^B1&d!UBaH!!3aI[J[c@W([HO!!3dMVYmOtOYHmj!;-<n&7D=3XTFkY#M]:\&S[p9VZMf1!R:ZJ
%pbd)VuERqP<oN0!!3suh>HC:_*J.J!!3mcgAL(7b$,2G!9X=_9YC;<!hh=LbQ%\TDSH(a!ksC'jT,&U
!Ca$dXTFY;!R(NF%V2[>XTGSL'&3Hf6_sXX!0%"0!R(NF%:H(3VZN`<'&3Hf>iP\D!l@&#nc7DE!YU4J
rT41BTbuPb#Qf:c^V@LY2?D_9lMpthF1hLe!N.C$!!iXCXKAV+Pq`<c!;lfu"DFh7XT=b7gAhK\Br7f+
VN3A2aoDJGA>K4&!Kn`,!8db^"-M[,k2jTK!QkBD"cD==joNRZli?JS"qlBr^7$n[a8cAG@'@;A1thp7
!"a1LXGeh6a8cAG=.ZLZ0A-=0&8n5>LFrW&!7:cM"&t\cOY,5d"r<Tajgm\Xk5aKA"U&npji9R<!!NBF
Knq,XeH#.?!t&"f3nOE9!??B3,lu!c!=;F#JMc!Z"T]QbG9[..!!<O!Hnt6mk5YYd-)%(g!QG*A$tZJ.
i;iTP!Wa/S_Z0`D(^&@i!Wa&Nr;ak<!XBJCf)PjQ()-$7fDksX'a*%f!Wa>\gApI<!X]qNf)PjQ)&C?p
q>^R&(^&@i!Wa&N_Z0`C('FC5h>dTX()+Rc!XBGBklC/P!Wa>\_Z0`F*<b[.J,~>

%%EndBinary
grestore
np
grestore
gsave
36.9199 111.08 mo
1.76016 111.08 li
1.76016 69.8 li
36.9199 69.8 li
36.9199 111.08 li
clp
1.39 111.51 mo
37.31 111.51 li
37.31 69.39 li
1.39 69.39 li
cp
/1 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 0 165 ]ct
[35.92 0 0 42.12 1.39 53.49 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 110 
/H 128 
/M[110 0 0 -128 0 128 ]
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 110 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 110 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 110 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 110 string /rs cvx /pop cvx] cvx
]
/O 3
>>
%%BeginBinary: 1
img
mf3FrTm$XS!!<:+_(FLD"98^fC'23N!s2<!.*Vad!!!&Z!87DQ!SdYW$))PGdfAb8!s2ZB/_pC/#``X%
_>sQ8!s2<!.#@rd!!!&3!!!&]!;Z[!!\1tZM[7&t"Tqlkgcu&%!!NEMWS2\(r;a_8"TqNE_)VY<!3?2"
!SROh!!NB[]D.^7aT1u6"V5P8i)L!A!!NBUV;$_E]`80E@a)hb!!_H`!!/eoo)Jdm!<*#0!!30$!TO.]
.(SsNKGD*!"UeZ-fMD_3!!FOAeoVSr!6P9F$<,Nj7g-R,[/g4-ciE>2!s&E&!p'Cb#/9qi$,-E;!!E@"
p"D:b!!EJ'gis+8!!E?nfYB0:!.k4I!<3)/!<3)]!!Et:pm2]i!!3-.#1!8N"V1b2!!EC8mE6X8!!En#
gP$:7!!*E2o)RSH!X&r8p](F!=jjSq[fF5ErrMfnrrLLIr;Zg!p&G'njo>MsOT)=*p](Et15ep1ci=/*
RSs@a!!*U[!q<iFkl:htJ)Q_8p](Et/:0hfci=/$Le7gF!!EaMe>=5W!/LXT!W<#n!!!&E!!30%!qlWo
!U0Re#]8tP-hmZF"&dJ6C]jS8eGo_8h;NVap](F4SGeuklMq%m@*u;*p](I"8[m/U!p]jK!!G3ta(knS
!!F!mhhr&M!6bHC!VHHm!R1WE!W<#p!!<6%!<MKd"9CaDj<XL#"Tr#iqg&^t!!NO#h=m!<p](F4d.)/\
r;c]ppAb<s35io]p](I!;97R0%*nnW"@U/]IgPlM";JArAH_,qQiR-eo`,'p!<<0!!7:fG!VZTn!UB^f
'tWg5p](I$>3>*T!UBaF!!G:9oo'OY!!FJ(fKK?(!!<n1d7a67"U%ZFc;=Vr!:p0n1;_[k&GQ5.*QPoR
!M]YO!<3)l!<3)B!;url!<3*!!:Tsk"c2i1&,?2."'Xa:;oo"B/&(G+%ep#+?0e^/mf3InGh@BQq#CO!
:rp@CaT)GkW6obtp](Coc^PR(!2BPn!VQNn!Up*B!!<6&!!2cnrrMQg"9DBj_'f$Y"Thlhfi&.6!9jId
0=^J%"Si$#&X;m2!V$-m!D(eA,P_<C!`7%S8dEZBq>^XJU=4,bq#CO.K@X`;RfMUOrrMfn!s&E&!lk<?
!VZTo!VQNi!!F=foMYhe!!GmNn5fe6!!NE\b4K`Uq>^X!1!f;FnGi\1\(=4RquH]r"@:#V9a&K:"Tg<^
en+sZ!!E<Q\'cn[!3H8$!VQNn!Ta==!!!&m!!!&h!!EIWp7_Ta!!NBR`V4'Iq>^U"02W)7!;c`t?Vh()
!!GULlqIQW!!@36\-qm."9`f!NWJtV"T]sPgKajV!!<<Q7g[lL!`__rq#COYb0`TYq#CM,fqJh;!:g-i
!VHEm!R1TE!VQNn!VQKp!<</m!!<6]dG4dAq#CO2T(7R:q>^X$;UaD?g&M5ul?a3@!!NC.m)Um^q>^X0
_!bS2o`,*q1:Y1<q#CO0N7N+QrW)ls"9_<-_ALu,"16?j&c)J2!E.:L.foJH":qK[;Zb8F\,cO0p&P'm
q#CKu!!*,`!:p3j!VQNn!VcZp!V-3m$]4Fcq#CNuEq#e<q>^[*ET5ba#hf7[6,DphPnNon"9Wl=SeCi!
"$Z4`+S>^:$@13*q#CNuA^lbSq>^[)A]MVi#hf7]3i^S[&GcA0")6>E&H2\-!!>10TcAsjr;cftp&P'm
q>^["!!*'"!nmYQ!VZTo!VZTo!V??o.cS)Zq#CCL"7+/e!W)j##(#dq:C,VR"TgBdorJ]#!!<q2o3D(k
"9Y%\?39g#"!u!b(\n%6/C1[T!W)j$#&Mf-70`hH!!NESU">Y@q>^U1Ok3J+!!ECYe5HFh!5JR7!VcZo
!Vl]t!<<-$g]70N!W`9%p]1<ppAk3ooDeuRoOA""!!<SGnS@t$"9i?&lo*Ao"<GAWRgo8q"TSNag#*M=
!!=b9[2/H9"+Aa%!r;m!$*D`bq>^X$=O>DKeGo^jX58[Aq>^UT^W$i\!!4LmTE#](!0$sY!VZQq!!*,p
!<3)K!<*#o!<3)o!<*#n!!=5.^Er^V"9`W;Zk<08"p%TZg-G]=eGo^s`USHgqZ$a)JbGQ>q>^U+POh6;
!!=+dW?M*<"9W)eT+Cf!"9D'5_)guajo>N+Y17M$qZ$a)EnQ9Tq>^U*K%<)p!7:fH!VZTo!VcZo!R^uI
!WE)t!!!*!!Vl`p!VcWt!K-St"Sr*#1!SuAq>^XKdbIe'dJsD"_rY&&qZ$^B`plt'!!!$%9B32Wq#CNu
HJ*-;q>^UJ[E^H%!!FXZ_FamX!!FUMb>86:!!=:GeOfT;"9Cj0Rf`3^QN7$dpAk3oq>gNqrrLFGrrMlp
rrMfn!!2ip"!$@Z.Ja#I#^uGj!rDs#'ufW_$2";]!!**(q#CNu7GHQEqZ$a";#IX6q>^U5YOsIB!!=+[
`[(B\":&i!B`e/3";@reAI.>sp](<q"Si$#!Bn99,PqHD!Cu"<')DS1'V!]%\,ZL0q>f:NrW2`n!!2lq
rW1[P!!2cnrW2fprrMoqrrMio").G&!Vucu-dL<TqZ$a#Qi<umq#CI@[!^s8")Hg\!Vud!"EF%X"oA9%
!l*qtq#CJ7o9B.QrW!%*g5Z41!!=IS^(1#?"9O>9Q4!Ef!["%PjT#Bi`B"%r!!EF8f<kbY!!<;%bt@d3
!b0`5lN#*.!!1[OrrMoqrW2fpr;lfrr;Zfui;`iYq>^U!!!*,r!<3)o!<3)r!!<\4q`jlV")[dR"T/6&
!D;D-,5M9C"$=?iM#m>Nn,NT#lJu:[q>^X2WrI)BqZ$^_oUlin!!=Y*j;@ao!t1LO3;EOV@+o2qqu?j#
6--k`q>^[$26,5Q!Tj@b=3eof$Mj`*&=)0b"T&0$2qO'$q>^UB_T<SD!!!&M!8.>R!<<2t!!!&n!;ur[
!;url!!!)s!<3)q!!3-#!Vucu2q?=[q>^U+e'0NB!!=1AnPf5`"?=KeKam,D"U8DhiF<)g!!>.Ef/<F*
!t)*j4Sf$[!iblrqZ$^Q]X\1E!;um"$bE_pqZ$^8Qdn_(!!G']c?0QW!!NR-_8fU]q>^UNcFkn.!!<Op
au0"q!s4b@:ZDGT!<3)p!<3)r!!30$!VZTn!W<#^!!NB'!<E0$q#CBqp]1<pp]1<pqZ$^"B_-EC!!?3q
M$X"Z"9VluRK`Nf">8*eFUma<p](Eu9%Ds#q>^X"Du#G%qu?j#;t5J@q>^Uqr1+&j!!<:-f4k$\"%q<n
#Q+Q)"&RO("Sr*$.CdZ:%H@Ek!^XK?8cA_g!!E@4gjTV.!!E<peT1cf!!>gLM[#gSmJm4fpAk3oq#LEq
pAb0ohZ3ZWpAk3oq#CBqpAk0nr;Zp1RIqd#!!<;>j%B1K!tDj%1AUtR(X2Z-$/kje"&\(H.Ja#H"jbaX
qZ$^F`7P:j!!<Vua<UW`!tC%;*r5j?!is@-!!)rt!t1pF/G]>L'su_;#iPad"%UD[,l.KC"Ll#tqZ$^B
XM4r8!!<SXYTMU"ZiC(,pAb0op](9ppAb9r!<</l!9*tY!VZQo!Vl`p!W2p",KRe4q>^UOrPB3E!!>mg
P7RNj":g[jV$d,#!XUS)mf3D/4:qJl"onW+Fn<Zoq>^V+pOEJG!!<LbqagM_!ik6Pr;ZpAYcJ90!!=_.
Wt>.."%(^n%Jp,.%>3At$2ac)#V-tb!!4#q&,ZD1"D?;j)>X=7<n_Nn"oJ?&#CG8kq#CJ^a$H$lqZ-Tq
!W`9%q#LEqq#LEqq#LBpq#CBqmf3Ci!!2ut!s/H'!VcZp!Vufr!VcWp!W)j!4n"12qZ$a"K`?B!qu?j(
^YhW`qu?j%=67::qu?j5F6]+nnGi[mDsNf9qu?j0TD+'JqZ$^@`75e'!!?*]Z2se%$<m.D!s8N'2UcmT
qZ$^!FPq$5!!EM)`]sS&!!*-q!m7PZqu?j3A^6&3nGi[m@aBfOqu?j/N7rF^qZ$^<Xh5JI!!>d:S,rHd
"Amc^!WqNb!!2<adf9@Knc8XinGi[m!!*'#q>gNrq#LEqmJm:h!<Dusr;l`prW2iq!W`9&q#CBqqu?h5
p/_:l!!<_Fq_7mI"#ot[')MY2)nY5rqu?j0HgKENmf3J<Ykt=Aqu?j>f%WOmqu?^%!ds]EqZ$^>c1)VH
!"'n>R1Bf.!+"8P!W)j!%B%u3qZ$^Qg78fP!!=(6bW#G"":]4p^H(`_"='DkP9'Q$"<"nh3s#6Z!sWVq
:\t+o)n"32r;cfs"<Q*K%1W48!!/Ac!W`9&rW)ot!!2forrMrr!W`9%q#LEqm/R1g!!2rsrW2co!!2lq
rrMoqrW2rt!h\=1q>^URg>2u0!!AM\DZT_8"(_4]$2ji-!FkWH,Q[?6"T]4>qNVZj!!?$lPn3`l!^tn\
qZ$^!VZ0Ef!!s+X^`Xa"!0"iQq>^UL^Vg9P!!@l-@KH?+"'OH&#lO`)!E[hR[ib_?!!NB6S)&]-qu?gg
gOft4!!5:$Wqubu!KuA0q>^X,Z`5#dkPtS`o)Jakr;Zfuo)S^h!!2-\!!2QhrrMio!<E9!!!<6&!!2or
rrN#t"TeZ)!!!)h!!**#rW2iq!!*'#q#LEqqZ$Wu!VZTm!<`B&dD.%(!!6QqO8AnZ(YS"!qZ$^*e^HGS
!!Ft?eiEiu!!Eb@nmhh#!!<k>jtll7!u/3>-N!iH!,2@m!W)j'#b9j,0)u!^WZ_-<!`dTrqZ$^4^Wdu"
!!<P@\hO$^"=h^11]cqC":V$U=T\O%!th'H/c,MM&u"))qZ$_'i-k_(!!NUb`[WG<OT5@^pAb0orW)ls
rW2iqrrMrrrrM?arrMus!W`9%q#LBpq>gNrq#CBqrW!'0%.^5.qZ$^&MYTO7!!>gY[fZF,"(:nc$iL&.
(!#TK#5A0"!<WAs!!E<]d+]oG!!<=.mYgrB!s+)OC\n)6/c!0jqZ$p*Fn\9l$ObOK&c2P1#(#&aqZ$^a
c_1F;!!?3TIgZ,S";A#b<X/@"!rr?(!VZQs!AV(",5hKD"&[HnqZ$^!FPU=$!!=Y)W=/S'"9`Ak4?Ugf
!W`B(oDmGBrrMrrrW2fprrMoqrW2rtrW*$"!VcWr!X&Su!!<6%!<N#s!!2or!<</s!<*#q!!r],!<<*U
1\ut5qZ$^4Vsb)m!!<7NpMB^,!scm17f<;i!Hn@7&GcA4"XHoWD.QBa!r2g!#B9.+"8r3%-c=jOqZ$^m
o!/;o!!<PheKt.o$NL/-<VC$:/M5b'#5\B&&sL`Pqu?g"Dq\Rq!!<G0bs)(+"9E/mNXkmc#R)AC?"7,.
*Wl-;"9rAbNW]4["!ane%/U#,7+Rq1qu?g)b.Jnp!!E<qfihSR!;?Hn!TX4d"Wp3;?s#c:!m1KC!Vucr
!Vuct!<<0!!;uot!Vufr!Vl^$"tO,0KR-lO"8;cq!Vufq!Vufr!W)lr!VcX!!<<++?M/C9!!4F\d/*eF
%B91OqZ$^Yo>V7<!!ORnpFQ@Fqu@'=FfDg]]t:\RFW:,V!uf/R3;igZ#*/LXqZ$^9jP1UL!!9gm62CQd
5jF)Y;cD:Zq>^R>W42X(!t:LO,PqHC1Y/c=r;Zp@\(W5+!"0HTRAHpaWMH"u(]aC4!uJ)o1Aq1T"b,6!
qZ$^7ahehj!!9%<3r/gY36l\jci=CcAsAp`V5'WJAf0t:bQ.VCq>gNrq>^Krq#Ca>NQg/9j5J_<N?Irq
!!2rsrrMrrrW2lr!WW6%p]19o",;Qs>l"F%1tSZ&!!=F\i<B)Y!d=Bir;Zs$BCD>kqu?d"0!"c^!hCqE
q>^V8r0[Zc!!63eV>C5p!laCaqZ$\Qm9]Vh"Z+c,V07"_d8B`?!\V3NqZ$^>WQ,/=!!6ihEW#k?!F+!0
!W2p!!\'W6XTFM4!Vucu@GZbAr;Zmmc]\/*!s5XN1]%.RGL9@c!!=gdP*555jT#>`.$aS*!fAE-d/a.H
p]1<pq>gNrq#LEqrW)ls!!2rs!WtC,puVXk3!/mUrrMusrrMrrrrMoq!!2fo"T\Y'WT-SH!!5RUJGT<J
2Uf/4!!<G+rB1#Y!t_1"0)P\N!]I(W^\Y\GSgsR:"!6mY+8l0A-J[VgqZ$\an65\h!`o&@q>^aL`kT9R
Q,c2e!!5:1EVf_;0Y3tT!!<Flh_k?4!tUFF.Js/I!\p/;XT=J0q>^L7!n+V!r;ZpD_T)u[!!7l(;#:4o
9\O:Y!!=LMW2S/F!Wk$?p87qK-0P?o!<3)o!<3)r!<3)s!<*#s!<*#r!!36gc1^9#^,,QbrrMus!!2ip
!!2lq!!2rsrW!!#!!!,=_qdEO!!<7"qIBC&!_VU4qZ$^<`pO?8!!=anblR_B!Zd97otLNh$i0i)[-(3_
!!<PGoI]q?!bq@SqZ$^RrJC[R!!a[Ye'kG$_DV2j!s)!K=8i4!!!5L1HM[[E)6_Esr;ZpHZ*aW1!!4'h
XS&[rJdV>S!h[\*r;Zp*Y1>#u!!6HZD#427/DkaTqZ$^>Uq4.p!;c`r!W2p!)LJ@SVZD5RdK':Jmf<=f
qZ-Wsq>^Qt!<W0!"='r-k2uF#!Nck.!<3)t!!<6&!!2or!!2lqrrMrrr;d#TgXn+T!!<:0qbd4j!a,&.
qZ$^Uf#e$l!!5OONr/kY"B)c%^B)#Fqu?j"!,(tIr;Zp#TD)7\!!5^gO8AnZ+8_9.qZ$j=YN=l__S7Mr
!!<:%gdh5A!`%<PqZ$^O]s7\;!!5:-IJa'H"%oH_XT>Ioq>^S#fOt-_!s+A78GrMk!!#:>Ies*I)r-&N
qZ$^6S'&n'!!36mT_,,_V+95>q#LBpmf3=gq#LEqquH]squ?d%@bp\=!TRVa!!!&s!<3)r!!30$!Vl]q
!Vl`p!<_TNe0Y"m"98O@pdb2]!b(t,qZ$[hiL]uJ!s)X#@Jg*+&;'Jf!LErd!!>"ROTtaa!da]_qZ$^S
rgX#e!!<u/SdtVt#8F-*n'94j+o;6A!b'hJqZ$[uh+dkKrW!!ca,Blr!s)6P<r;pu%s@HF!JgmU!!=e.
J-PrP!c6\'qZ$^Mi/.R5!!<ndN",Xa!tpjIe(k!(!W)j!!!!LKntuMA"OdAM!VcWp!Vl]q!Vl`q!W<!"
!WW8u!!*e(o]?8<k-YBh!<*#s!!!&q!<3)s!!<6%!<N#srW*,no[+cX!!<CNo/upN!s3<=6Mg`a<To29
!!<@?q*t8^!?7m+^B(JZqZ$^4pn%uo!!<46qgePD"!@Q?#5eH'$LF]*qZ$j5UA4N8f=2gt!!<@?f/<I+
!s2if3r8mY9?_SX!!<@2gct]:!>q*mXT=t4qZ$^2gl)X>!!6B\EVf_<*8ltarW!*%!"%#:')MY2&!,K"
e,TLdORf:MQlOQT!!*-%!!2lq!!2Ng!!3#u!s/H'!W2ou+NF!7!RW7j!<3)s!<3)q!<3)s!<3)q!<*!$
qtn_ZqZ$^%J+,Dq!!E9)F8n5s!!6HoG5VCC#'Tc%qu?a?[IV'5Z8)4V!snOs&cD\2=o=6U!!=#:WX8S'
!s\"i(&It9&>B($h;,OWqZ$^$E7?T>!!<@8i%k00!`IH\rW!'$#&)aIqu?a<V"1VgTe-'@!sdD@&,cJ0
:YpKr!!<qnPmI9f!sQr7'Dhb3&!#Q)e,TLhT)>M\VZE8;dfBCKpAb0oqZ$^"!!!&r!!!&t!!30$!W)it
-ee.R!S0@1!<)ru!W)ls!W)is!Ug$e!<`,ld2i)a!sO#A48]'\")n3&qZ$\'m<8F.!sNlC3rAsY+LgpV
!O=KX!!<W%V@`\+!a>MZqu?j")uliAqu?g+m&(No!!a+1qto.&\/P5E!sEGk2>dFV"(L1IqZ$[qd:rOZ
!sE>m2#I=S*N&D0!MM+B!!<S[P7RTl!`7a"qZ$^8i04HD!!<PSP7dcorW!$2O58XA!!+(4ntuMX/COV!
!Vl]s!!!&p!!!&r!!!&r!!!&s!!+J&o&]u(4So*\!<<-$quH`tq#CBqq>gNrq#LBp"7u-4+8Z$?"Ea9#
qu?g"CB$a$!!E9%=mLS9!!<@?qF:A_!?A-1^B(M^qZ$^9pmqom!!6X,K_k`O,6+JBqu?g/n=pTm!!a.4
p\37i\K(JH!s<2f3;`aY!FF\IqZ$[ncZ&g_!sDue55bH_!#h<sXT>"8qZ$^6gPZI<!!66WFSc%?*oN1a
qu?g.e;t4<!!<dpg=k$V!?%0oVZNca*n(,g!VcWp!VcWp!Vucr!W2p!!WW8u!!+:go&]u$.Ja&E!W2rk
!!**%qZ-Wsq#LBp"6Sar-i3lG"E*p$qZ$\.rD<@k!`%gCr;Zp$=S?8&!!*^go"P3p$Msf*4o1$>r;ZnD
qK2T7"#BkH!W<!$!#,!s&,Q>3(9?fgbfm^EqZ$^$@G*d?!!6<\8,E8f7EL8^!!<9tfiS(O!>'VKXT=@e
qZ$^Vh0K5&!!6ojB);Q1/`;Nfqu?g2f8L19!!O%'d*Mamec5^^GOhX4L^DN1rW2iq!Wi?&qZ$Zt!<Mur
rrMus!!2rs!>_I$joN('q>gNro)Sajq>gNrq#LBp"4GWN1A_%R"(V.'qZ$\!nS\4(!^,/Jr;Zp"604=.
!!3=,\F[H8>P\=%H1GbPr;ZncpfRCn!`JlOqZ$^@qN_Hb!!aLNgt]HN^Ff<_!s;W[8,E8f:"<\L!!5$m
V>L;p3m*'P!!3=$Vu3[lXT28q!!@#f?NL**!eoB(qZ$[hh0Jkt"!$-M#l=T()5"a]e,TOR:8.9W!)NFk
f`:sOq#CBqq#CBqq#LEqqZ-Wsqu?d&CYn[F!,_N3!!2rsrrMrr!WW6%q>gKqq>^^#!!'[Eh`pu<!s)3l
B_qc28)o^.!!=RliWoD^""D7=!W2p!,+$%:^B'o;qZ$^!a5]Pc!!<G<oelUH!d4-SqZ$^`qh,"K!!N?&
,f%UH"/_s73;W[X!CkdJqZ$[^a+*sd"!Y+m#5nN(,d4c[qu?d?Log9O!KRcg!!<8+a#j5"!sYUR0Db_N
B\$\j!!>7:F927="!FSLZhFG"!W)lX!!43pVY-hfM@S&7rW2iq!W`9%p](9pq>^KrrW)lsrrMus!\(P=
p#Z:h'`%e0!W)is!UTje!Vl`p!<\j^k>;!T!^Z(+qZ$[We[52R!slF9-iF#I%%R5Mqu?j#6aXVCpqHj7
/c#GL/,.4"r;ZpAg?]4E!!8YY=8Mt!Ab0j:!!b.%ZEf=DbX_L0!]nVNqZ$[Q]V#'$!sbRY,Q.TE$]<dk
qu?d!4eq_Q!MCn=!!E9KgTqIi!!=4VcjKXM!f>B#qZ$\#emeIU""C[KSC7H>!BZkGVZE87l2]rH!!2lq
rW2iqrrMoq!!2rsrrMus!Wl6Op>uD+2Yd@Q!W)lr!W)ls!Vl]q!W<#r!!WH(!.&t[A,60,1tST$!!=F\
is>M^!f["fr;Zs$@d^,squ?g":oqD-^B;3H70NJf"9XGXK)toN"&8$f!W2p"#L;HfqZ$\WlWX,b#<C_/
QY^Ke=8W%$!!"XcP5>4]*i[0bqZ$\FgfaRU"9DQNP6Cd`!s(u_XST%$XHbsOqZ$a#GMdKCr;ZpfcCb49
!!<G5b:WSk!dr<jq>^UQa+]61!;6Bm!VcWs!CiBPqPOFmO?<X6!!!&Z!!!&p!<3)r!!!&q!!!&s!!NB'
!!*-$r;Zp$@F+$2joa\a;[*!trW2lrrW2iq!!2orrrMlprW*.!;>5D=qZ$^F_TW&Y!!<S(qC_XF"&8Kp
#Q4W)*m!t:qZ$^!2Li"0^B1Ka1]R[T!!=n%lQlE/!sOGR?Ma^)-0itiqu?g"^>V?R!!l3dG^)_Kg2-og
!!=FGZiU()!st+G.Jj)I7+n+8r;Zp=Ygtc1!!<6VF.iH5".O6_"8W!".Cd\Hr;Zg#!dE?sqZ$^AcFXP`
!!<8"a#Nnq"%(LPC@_E*!T3q[!AAA\r20X_Cb>hJ!:Kmf!VcZo!W)ls!Vl`q!W)iu!<</t!!<6fRFV5t
"4*5s"o//t!W2rt!Vl`q!Vl]q!Vl]u!<E0#,6K1dP7%0e!u%L#'`.k3IJ7UU!!<eih_G'0"9E07XVCX4
!Wa0prP&EH5S*Yj":g=_GldjD"!P8A')MY1<V**b!!<f"clW&a#m+W5;c=b[gk#k0!!<gqee7r^rW!";
g0jdX!tWAi/,]GN!F+KM')MY1!>g+]XTGL`%f$)-%=-WB!W<!#*i.*nqZ$[jes#t2!tN_f)uBU<!a+8N
9&9R>!!30:GQ"E@Uc8h-!<3)q!<3)q!!!&r!<*#q!<3)r!!30CU]'<Vi_C-^!!30$!W)lr!Vl`q!Vucr
!VZR!!<<*%"73-,qZ$^#KDJ.9!!>gZ^'"64",?Mr"8r3&#fQ7M"oA9#&:sep!PTQL!!30oklJj7r;Zp#
;XKtN!!<=dqd0.""$HLg"T&0*#);V+2Za'.R25Z"!s3T"5l1N`5gZG2qZ$_Afkgii!!EP/emJXX!!*UQ
rN-+%)>O78!CP,9$iL&-!D1[qqZ$Tu!eK-*qZ$^UhOarJ!!ELLe1i](!!*RLrMK[n(t8Q\!<3)q!!!&p
!<3)r!<3)r!<3)q!!*e'rT4.B+mo@1!Vucr!VcWr!<E9!!<*#t!!9pY/,TAM!!$?lNr&eY'%?.sqZ$^9
mCjkD!!FM)gI2/@!!*jkr4`4^q>^[".G!TL!W<!#&"rAPqZ$^?_XA6:!!73?K),HR$ae8.-NF.FZR5MK
!`[NpqZ$d2]$D`(!;um"(=K-(qu?j@a2'n>qu?a3Hi0uG-i*fH!@>D$4TYK]!tC7=2#@7T*37O%qZ$\/
i,e_p":Cd1,9t_=qZ$X1GPn?=--?2f!Vl`p!Vufq!Vufr!Vufr!Vucs)Pm;n!&OTSqu?g"!!*,t!<3)q
!<*#q!<3)r!!r]-!!**#!0$,.q>^UTgsl]-!!A8UE<5q:",lYb#5nN*!F+U0637#b!?I@$^ApOr!!NEb
bO'?Yqu?dim\Kmsqu?g":Z\JN!!<J,rC?\a#o)=!(Dd&OI*=YJ!!=mj]Ee<6"+Am6!W)j!HdlC,r;[!%
:rp(+!W<!!)MJ$j!'9uW"TgKcdU`d`!!>O8OqITl!s(m6P5>4Z"p11L5Pb?_'$$=R(!cj\)M%a`!'&.%
!!2cn!!2orrrMoq!s&E&!W)ls!W)it,I%+.!)E:h!W`9%qZ-Wsq#LEqq>gNrp](9pqu?h%ph'^+!!<_C
q`=]VrW!$XpU(k8!!=e#cm/Gg"Uo;4g1(Hg!!+C9r4`53qu?m,=3p\m'Dqh5&BNd'!rN$#%?L0OqZ$^L
eE%;=!"(d]L'\.d!)MBS!rDs"%Ahl;qZ$^Og7T5Y!!=UZ[ibMJ"Ueb`^fUmA!!+7&r2frnqu?m+9t/nt
&c;V3&$X&@!rN$#%"?hmqZ$^G]?1Z\!!G+3FpJB"!!4:!Vu<Ln9?I57!VcZp!Vl`q!Vufr!VcWs!<E0$
rVusM]_pmlBD_`1!<E*"rrDutrW2fprrMoqrrMlpr;d'%!&EW+#l=T(!I+NuqZ$^$Zfb0^!!ELJoV2Kc
!!s!CoBqk_!!"RIr4`5Jr;[!0L[+JH%/^)."-`PK%Jp,,.GDQ;')MY1@d]ET!"+;F?3(',!%l<N#Q"K'
!GUJ:qZ$^$T$9e&!!EL<erTt2!!rs7f$T*e!!"F5r2fs.r;[!/GL"cG$iBu-!eT3_%/U#,,f$AjqZ$\!
d=D&n"TWSj;ZQpl!!!&T!!+I0r20O$b5hMBq>^X!!!**#qu?d"!<N#s!s&B%!Vl]s!<<0"!!+str8n!2
quH]sq#L?oq>gNrmf3=gqZ$^=\^qGi!!=bK`Xr"I"$cRH&,Q>,*!<PGBE\24#<L<'@fl]fYPc-8KDbcP
0^mFZqZ$a$=n:,hq>^V=q.U!0!!<Uqq_@pI!s6j"2uN^Y)Pb"Wq>^UEh6.@d!!>48KFReY"<!cg>Qjp(
"uNm@=9AOV!2'1k!-eAA""Vg155P<_!`.C\+Sl'?A_^Poqu?g+L>=BV!!<;4]J7Y2!A9f<VZ:f4!7V#K
!VcZo!Vufr!VcWr!<<2t!<3*!!!,=5r8n!Nr;Zm"!!2iprrMlp!W`9&quH]sp]1<pqu?g+M"j42!!<A@
j%B1K!tMZt5l(H`5hkR&#5\B))dXfk!C46o^B'u.rW!$.:F#u=!!NKldcjI,qZ$^?hoIAG!!=gtb6IkE
"TSNTqQge4!!<OPgc5-1!sG[F62LWa%@tR"q>^XX_TkaXqZ$g;;]u/B3iMtY!KdE^!!<Qt+9DB?"U$ls
c9q^1!!=4[YUB;J"":R_#5S<%.GUL*p&NbG!Wb9Tr20RR!Up'h!SmbU!Vl]r!Wi#q!!2ip!s&E&!W)is
!WE'#!D_SNjoN7!rVup!q#CR"!!**#!Vufr!Vucu!<E0$p](9pqu?g"=6Z%H!!?-oN=5Xa"9MNbXp+\&
"Tqindn9lD!;c`t"&cl2^B(YJo`,+R_s:q:qZ$a&U%3@3qu?j$AG($Fq>^VIq0W5A!!<6rc%Plm"%h6p
$N'l,!_U\*"T&0&!_q(R6O!5b!Wu)sr2g$p#lsZ!">R"(>6=[%"9ab9BEnA7"9M`YAc_`."**(4!R:ZH
"%]<eVZE=pmf;bU!!20]rW2iqrrMlp!s&E&!VcWr"CpQkjoO*DoDnmlp]1<pp](?r!!2Ti""27Y&,H8.
$..$OqZ$^2UA%mg!!EF2n(:&'!!*::qnE0G)tj771">]9$2OW(;"i!LqZ$^,^Y1I>!!<bWnMU7F"TSNI
Z-a$W!!<M9\1.:T!t^LH;#1.p"B3da4SSmW"^V#-!N[.3!!Fjbe7]-a!!>aEYo!9;!t2*D/G]>K%Cak@
li?#F!<l[(VZEY3b5_SE!!2fo!!2ip!!2lq!s/H'!VZQp#CQF2!TYBs!<*#n!<3)q!<3)p!<3)r!!<@k
r*fF%"9E<9E!,t;"%D2<.Ja#J"D$ok=9\O$!Xa:hqnE+dp](I$<:oa2$Mj`),Kfpbq>^Ujr/qKb!!>p[
_?B`9!sFA8<r)e!!FFVm!rDs"4ic%tq>^[$=jbeq"Sr*!$#f[B!%msG!!EEsf@FmIq>^U>ZJJ:O!!>RE
JID;S"%1A6"RlBk!T*kX$#BC8!%d74jo>Ga!<Mur!W`9%q#LBppAk3op](='PksMB4SAdT!VZTo!VcZp
!Vl]t!!*'$q>^Uio=PM.!!=UndiJ;c"9a5OYo3B<"pnelqN<B5qu?a,Onufm:\k%q!@<Qgic>M(!!Emr
oTKCS!!<kYi(3\E!st1d>PS7&6.Vn@!!)os"!b4b)Z'L;"EE7f(A\"8#ZndsJL:Tu!!*L\qQ0`fq>^^#
+aDASAIA86":p%6JcklM!t_l[5l(H_#_Lf-iW/9E!=OAQVZ90-!<3)p!<3)r!!<9&!<MoprW3$!qu?a.
Y578\?haX#!<E0$q#CHs!!2lqrrMlprrMlp!tNE:8,<2g#^Q#r!rDs#&ZkMO%f-//"\#ci]dip[!>DL0
^B/<R!;lg##I3g09*G(k"9W6![hJW="9NZASdtSs"#/!O&,?2-%C",Bq>^X'CY*_2qZ$a0Qdp!`q>^[%
4eC9'-2[`D&XrQu!+bp+"U:OJUdG:^!!N?(>0W`RqZ$a#B&/@Sq>^UJ[D!*o!!*XrqPO=%h#QjCrW2`n
rrMlp!!2for;lcq!>j#WjoC,2!<*!"!!;oqrW2fprW2fprrMrrrW!%+qiqNb!!=[mmlC4E"<YkP>m'p'
"9BHYU+#p>!@#2Q^B'>sqZ$a'M00sBq#CLaj4-<h!!=q,mPanA!sNN7F8#Y:;Vcs3q>^RBZ-r\.q>^X<
[*DPOq>^X!(gr@Kqu?a>WqrguJ-5ZK"9s-b*Wc':"$FW;2YmCU/&'Fcq>^U#?eK#C!<)ru!VcWq*i/Y1
!IP!k!<3)o!!!&p!<3)p!!!&p!!=\0k2uU(!NH;"!!<6&!!2ip!W`9%p]19op](9pp&G0rgX\C\!!@'4
_$^#="$,<01[kAE7JX\!T+gr!q#COJoBBEZqZ$^*Qi)F1!!=%VhB;Om!s6?P1\h"Q?e_Req>^UR`RZX1
!!#4YXT=Lqmf3J;f?I+mr;[!$!""D:Eqo\;'s>Ipb5_N)q547O&F0;r!UKg`!;c`r!VQNn!VZQo!Ug!g
;u,PV^DH;<!s&B%!r;or!VcZp!VHEp@eG<Yq>^X,](0nIqZ$d'?f^EA#4_`oCAGUFW%%6:"U.3DnTY98
!!EC(ji7f*!!?R$KF7DQ"'4&q#PnE'$`)?b#Q"K)"B<Le56gZY!+>W)!LP2'!!NKd^=?s&qZ$a$9?OIH
q#CLqflRPD!!-?&qPO@X,ffuc!VcWs!<E0%q#CKt!!!&j!!%NEjoNU[q#L-h!s&E&!Vl`q!VZTo!VHEp
*5pM_q#CONgseOhqZ$d-C$OMY$hOE"!KQuj!O+o]!!NR&bj0K]r;cfs"!tkD7/6fb(Xghpo`,(3XhQ=\
!!Fdf]/Tig!!N^8cGEBboDemmJbcDKT02ZE"U7H'cY3a_!!=CGa#s.t!>W-G]JJXL!!29`!<ITDVZE5I
aT2;@p&G-p!!<#t"T\T(!!!&l!!*,$q;q_-:\"Jh!<<-$!!2lqrrMiorrM`l"9iH,QN?p_"9DitZkr]A
r;[!,<pAUe$hXK##dX9@!kM\=oDf$sCu"5e#l4N(#,^p=$Mj`*!J^?-$M=B%"C'<.!Vud!!E7F=(&@n6
#>NLaBF=S9qu?a&U%telW)Wlj!!NI3_9?*hq>^X%PLXOWq>^X!G1q<MnGiOig].?[S,&r_U/Csl`rQ,?
pAb0opAb9r!<</n!!*GXq;qb:E<5S0!WW3%q#LEqpAk0no)Jk6](eA_!!E^jr0@B[!!NBhh"m`Qp&G(@
pV-`S$2"9%&=iUV<sJL$"9OGXYS[9=qu?gWlJO,_!!=19gGSd,":K\8KE:oL"T^[$glDg9!!">>XT<8E
o`,.+MquEJ#5S<&!dNRk(&7h30[@Z`q#KFT!!2Ti!$h69!GMh\!<3)q!<3'!!VcWu!W`<%!<Mlo!&=61
!Kdc_!<*!#!!!&p!<3)o!<3)j!!E=,m*HLC!!FXXr-SkJ!!30X\c_`\:Cd."!*K37!PY?-^B'E8pAbC'
8]gbM5lpf^":/i:dPCUu!thU0EUj)4!Dq.Q'DVV2,,*k1$2OW+!A:2&^IA\-!!#goXTGW+Pl7]bJf+4^
"p[H"gTij@q>^X'?e;h>q#CL-QeZ-B!!!&Q!!#alVZEZUrMK[F)#40Z!!<6%!<MoprrMfnrW*$"!VcWp
CAm8qjMh)[!NdL;!<*#n!!3-#!VZTo!Up'l$_dBI$Mj`+!BSNsCC9k;"X8]Zl"UJ"!!*.SrP&E>?G?ER
!N%LD!!GjRiJo/Y!!NR.hV:I!q>^['Aa6]4!:g*m$BEq_$2OW*!Aq::?4$E-"Whj,c!CVN!!*.FrN--p
<NQ2%!LG80!!GR/a*f'*!!NR$`5=Y;q>^X&>0`cKmf<(^!!26_!<R?@VZNAdVZ*IoOXS6MrW2fp!s&B&
!WE)p!<3)o!!*1orT415ETR2^!Q[4n!<*#o!!<6%!<Mrq!W`9%mJmA9gYPO'q>^["5iL[0#Pe?&#Xk(f
#Q4Z%!!*S*rP&Dr1:7%q!kCZ!p](CUO\H2X!!H$Ii_9IL!!=gthD=U#"<kV"5lpf^"T^X(a&N?>!!ENh
LJnHS!!*OorN--S/Yi<I!N8*\!VcWs14Vb!p](Fb]Z3D@q#CLF[DXZW!!!&`!!*LhrMK^H/=ld<!hq^V
nGq/@rrMlp!s/H'!VHEo!<<2t!!*\OrT40b4P9Yq!oHfTpAb0ooDejlq#LBorrMNf"9D$d\/kAF"9CgN
ku[W[!W`W5q#CFHYl2<<?Qbm;^B%aHp](?t#m0l%"@VM=?3U-)"9PLpC'F;2q>^X!5M;bLq#CNu3m5cB
p](?r#m^8+!@XT=XTDNDNW#s[=9\I"!Wr]0p](FZc-B5jq#CO!PM'7Gmf3=gp]19n!!2<a!@O?7VZKd:
M#F4P<<^GD!s&B&!VcWr!WW8p!!3-#!r2fs2:VTe!coa%rT4-'#58)t!VHEm!VQKq!<E0$mJm@qN;&/4
q#CR#:#5AB$h+,t!E?T.^AttL/J<X5^B'3$mJmCs<V>Nf"o/-$"aBg?)=7D,#^k?O"Si$$"%:&X:($Ij
!WbulriH:(.1gY#XT<hYq#L*g"UIcRbZb5G!!EF=h3&Pq!!30mT`1hkVC)pprMK[A$g7TK!!!*"!VQNl
!Up'j!G1*djoa[&(7Y9b!N$Co!<3)m!<3)t!;cci!!FRTo4A1%!!WR)eG+_?!V-3l#^a;b^BCSD"Cf%C
^B(PYmf3M.H0F6u"o/-$"^:ZE2X:>H+J74g"9A8u"p7K/gN=M;nc/^rDlir?"IfZ"=fVJ'!M:7u!!O-Q
bf<fgq#CO#:YN00e,].A!XEM<rhfma#R"2(rhfdc(rQCS!V?Bk!V$-m$C'W6josnm$O(_5roO72+m]1/
!VHHm!U9Xg!^PB(=onF!"pI?1o;XJFo)Je5Q2SH#IK0@6YPu9;^..u"p&G7?U@#li"Si$$!_Cr4:BKh^
"Tg]tcqjc=!!WQeX4EOd!V69l*/FKp"EFJB4.cGR!N\NT!!OF*d&]J8q#CR"5eYZ:!p0I_!TX4])hS$d
"E"2>3LTlE!N&$5!:'Ud!<<2q!<3)h!!+CPrT46M!!#dBroO7C<:9ee!WE'!!qlTo!UBab!!NL&qUe1:
q#CU")P-TR=9A*p!BR=]^BM>C!!".4rP&>_nc/js<n[2J.KT;E">.Xe=Tmsh"U%?N^H;Pm!!WH?MqPd=
!qZHn24XZJ"ft#j!$.*uXT3J6!!WR#^Y+u#!VcWt.'M<!"Ng`D!!+mBrhfps5QCd(MZ'FQE5_eZ!WW3$
p&P'mnGiSZci3&1j];E^-b]NA!TojA!!*-$rW2Zl!s&E&!p9OdB_KP(!VcX!%Y!X?TcaF2!!3:,]`,YM
Y9X)J"bj\i^B(PGo`,!n*<_T!n;n@Y!!F1Pp3Hc%!!HQ[Yq6"O!!WmNbi"L$!quZr"&Z)tXTkC@!!!1I
XT#=&T*b/j"p#Wof[PB`pAb40V?5Fe!QP0A"&G`lVZrP2!!!1EVZ*IoRL.@Ao)Sdko)Sdko`,$sCuYHV
#1G(&!!]+XroO72%J'Su!VHHm!TX4_!IX7H!%mpF"U.K.o=6.@!!*X\rP&Al'E.t4=hO^J!&sQN"V.-o
^J=t+!!FXVo8aRH!!E=>d&&5c!!NKkUXu7`pAb4(F8`3AIhM_\!E#lqXT1-L!!NgieYu">pAb=?T\"W)
jT#8]irB)iDuHR6H2nQV!!,ijrMKWL_uKf>!<*#l!<3)m!!*b$rT4-[(]FC8CZ><T!(6V`qZ-Qqo`4pk
irB5oK^Zc=!VZQr)K1*GpAb49WW'X6^1R]M!!+OZrP&AW!VQKq$"@irq>gKp"T^EfqNi/]!!NjSe#P;+
pAb:3@W37[!!+(-riH7'>mL?/!@=]CXT<5=p&G1#<b!-D!!NBTU"tD>q#JY>!?77%VZN`!#Q=](,bk78
!GDMU!;ccq!TsF`--Q;M!p+e9rVusShu2[<Nro"T!!2Wjr;kmX"VZagd6ds4!;lfu"UbA*!!,U'rkAN?
703Af!=,@t^B(2Go`5!rpAb?t1;E[R(?#5s&p`<D3s#'U!X&i2p](?q5camd!hhdYrVus(PPqTaQ4iij
rs&2t"T^0Rh1l]j!!!&o!!,9[rhfgf49>E]!=+V`VZNcY'#O_J!V69k!quZq<oa2A!nU?OrVus*_u8]u
`u+ILrrMcmr;kgV"U'MSg.2>3!!%`O^B'cJqu?_*rP&B?6L"OU!AW$uN<0([i;a#`FPX_t!p]gdGl=`F
N$/#u!*K3%!M_dB!!NBR\_MQ6mJtf<!-J1;!J_cp!!$$tVZE>Ll2Uebf`2!QrrM?a!20;Q!P0cY!!%0?
joO+1l2Uhd!<*#T!!NFEio=S[o`4df!>W*C^B2,s#Q+Q&+1V<b!k`RYli72"=leds%c%*g!bKEn=q0j!
!>D@0XTPYD#6=]&!?A$:XTGM9"mc3m%8Y*iE=Kec!>;()VZN`3#Q+Q&)km8/!i0B2quFY8!!2Bc!?'\l
joXV/$2ac(-/SX`!of+ClMq%f!<<-$g].Na=4$H#.fo)=!*oK;!Okf#!!*.`rP&B"+mo=7!@<Zlh.$re
!;cca!!W[&\C?*W!Ug!g;uNg!VFLF_!<RoPXT=8"mJmFl+a_VS<t3scjo>BYrMK[h6i-ia!e1*G!JDK.
!<*#n!;?HnDuJf!gg0dW!<]M'joMn=m/R4h!<</Q!!WWd^&#Z>"n;Qn$)@I6!N[.7!!,m0rkANA702iW
"Za<i`&e1V!!WW^W8+I?"RuHm#aG:i!Ljl$!!,WlriH<u4okW`nGi_KVq8"-#/U?@#`nq^!L=Js!!,Nc
rhfgg49=jMe,TON!!2He!=QmFjoNdKq>^P(jo4BDfM_h9!!!&m!94%^#E8N2..I9<3kG:)!.=SB!?eE@
^B&Ebn,NRlan_53iW/TN"9s80^*N4K!ApbRXT3A:!!++/rN-*7$h+-!!OCL6%+,(E!!+jLrMKX4q#CF8
Q2RT]Ad\#-!!1FHrW2Kg!CbrFjoC_C!!+IlrT4->%e'Js!Rh#N"]BFUnc/^qGeX-k!.XfI!Fqo'^B(AZ
mf3Dj=prdZ!sD/,&b5o'"`:@>XT3G<;#sjbrN-*i+8,^2!!5kk$GZWC"_jk4VZ:Z2:'"CVrMK[]*p!CB
!!3CejSe3@RJCV!GK'OC!R<.D!8%8P-D0Y>!*$i9kl:`/OR0(L9X4Zp!!+7$m&'hTWrN/Q^\R$ajoAto
!!37&\*Uj3Sd#/pY5eV+9r@9Z!KREP!5JR9"&#<RVZDYYh#Ph&!X*/km,e>_#L!2-!!*jllb<J76b<?i
!!*d]l`C2h4KSSb'R6PBVZEYUXT/A@V=3RFjoOR?XT/A_[JmoB^2Ok]%fni!rP&B%$24G0!!+pPriH7'
AeaqK!B6_NXT==cjoEL'!A^8GVZN`)'D;k924OQB!JUm1!87DR7G7\&!p#+Tp(@Btf)=_3\I6=Uli7(h
ID5]q!in6\p&G*uN;^Kl]0EV%r;Zm$ENK/A!h1qGp&G*uJ,QJMWB%-^!X!;:rhfg_0EM+Pq>^O$HMs`B
UGo@V!X+kOroO:-6NQl\!=>b(joaR9!!'8(!@YAT^B2-$'(c/)42(X.!ks9rmf:3)!@=Q@XTGSI&G,r'
2QQhZ!j$SSh>mEQf`2$tT)PVhVK*7?!!+pQrhfgpEt$(hl2Ui>g&C+8jdd1Z!!,UMroO:DSe/=1qu?`u
MuCBlZqg_p!!*4hrP&B74L"ke!Ik!L!i&6drW)Zm!<\2WXT=nLYlFe*H2XWBSOESO!!*1TrMKX]!&Uq\
!<K+sjoX1B!V??m"h+Bl!RF=,!5SX90u!V$!La\m!!,9qrkANKF:I1/dJs;!XSo7%N"Y[]!B@(XXTGS<
%+#"7!!+UIrMK[O&b5o&2P^8L!iBQ;^B!m+!B]EAjoN%0nc/\`iVqs@jGXVU!!*O]rkAQM^/G('!!*Uj
rP&E71BFi_!=X2NXTGRs!V??o!!!LZrN--j/ci<Z!=NuIVZN_e!V-3k%=J,P!gP><qZ+2-!=te#joXXT
!V-3k&utom!mWq0l2]$.!WbQirP&B.%e0N#"&$*%^B2,s"PEe2!!30^T)GblP7@$^!WtieriH7'E!+/]
mJm:h319`C!KITY!!36gTDk_iVJH@D!!E9%!D_)AjoNC4nGiUn>20&=!p,[N[/^7@J%kos!PUtu!;6Bn
)iss4!P'hj!!3^QXT#=&X?Q(Q!>pFeXT>@L[/^7>Dl3N3!N&!J!!*pbrMK[j..RAV!!3q(jSn9BjAPFH
!?eKBjoO?ui;hF/!WbTorP&B')=J4?'P"ZO^B'l2d/`>0!WbBXrN-*[([_n:>,V>$!KIE#!;HNq!BH_L
VZDShmh#U6<h]Ji!Jq&j!!33sf_sq4]Ds&B(BPFthYlR;]aD4K!>:Fj^Att:])K8A]>"3X!EB63!!*X^
r2ft"mAL&cXSf1$9`t:n]`8'EI/KlBV<suXUo+'f!D<O\!6tQF(9@Aq!9<J)!TE/<joK)tg&U"1!EQhj
^B'oPaT1f1!D]ZQXT=J+\,ZP&Uu8-OMBKD/!GLH_k3qF5^+?ep!?\Q(^B;6_C^R`R!?@`hXTGJ2$1n5<
!!+(.hkpON?4#WlqZ,IQ!@H=RjoXLn%*S_@!!*:^r4`6Dkdgc-rP&E82?CGj!<mrMXT5?aVuWmsXTG"I
!PAC5"a^*E!2K=`nY-#[rMK^`0*/]c!=,S$joFB(huMg9joWjp!PJI7"AcK)^B(T1kqrN$E4c(`!Jh<]
!65'@"%T3dXT>(\kqE/oAuYa2!IG@>!8%8Q"%Aj\VZE8Okq3#k@\`n"!I#%(!9jIb"^g$_joO"6ks,;:
LZ/3o!M^@I!;c`t!@O64^B2)P!U'Lb+-XG<^B2#P!P\U9!@*I"XTPV$!<D?a!ZZoqriH7%;ZXW5!WaKu
rMK^n:BBnaq>^R:J>W=D!i/Zo^An<90=LiA!on(ukPtZ2Z/tuI"6"/"!5JR9%!0&Z^B'6!k5YPd9<nH1
!OFWO!7:cJ$YZR=XT<kVk5YPc7%jL\!MV7(!9*t[$=ot2VZD&Kk5YPc6(@hN!M(jf!:p0l%Z96DjoM@f
k5YPe>1NT6!SBWO!!5?q^](tKYq+o9!XOLorP&B,'>OSK32leX!MCh5!:^$j#C*?KXT=Rs^]4BnUA^tj
RjR4s!!`OHVZ!CnN=`l*!DDALjoO!hjT#>hT]Q.7!Q#ZJ!6P9B+/o.Q!k;bIj8]3-XSom8]5J,A!8@JS
*16],!iK3-j8]3*S,KGjWFQCg!:0[d)jC5u!hi[$j8]3(QMm]_UL=ML!;ulu--H2K!oA/0j8]35ci)u-
iIqcZ!!*jqrP&EJN#hfrk5YNS\Ga/DY"T#;!!*dbrN-.&Ii@VQp](=]VZ!UuSOE_#!!*d]rMK^oH5bcC
!C3=VVZE/O!!U:@!?8*<joXVC,N8\(=5Ei;!mt3VnGq)>!X`kYrP&E=2Z_n<!X*DTrP&B-.Gt3g!!3I;
Wr9%$TJ?Q-!!3:6XSo7%P9nNTpAb7$@ANk"!h1kEiW'#_@&En#!KAAD!!3U`ir/!@eNs>s!!3=Xjo+<B
__T43!Wl'$r4`8p8+K+;70-VqrP&EJQNtP2!Wkfar2g!Q5iFm.5#RsMXTGS[#0-]F!^iLUVZD92i&h$9
R/NoaVM#0M!6tQG"'jIUjoMYdi)9YndJ`2/jg>BY!;ccX!!+gLd(]U1%FY=N!!+X8d&d=h%*/DL/!'Y,
e>E=b$ci;K42pRKjlQT2&'4eP*L,9mp:g[@A.6T\!?-^=XTGM,$iU.N!!+!ic_gi?=:4Eqh>dR$Zd7b8
iHYpg!:Tsi(66,S^B1T9#L!/L'S3@2XTG+d#0[&K'RZeLVqe0OR7@J*!!4+?jl5FijoX"?#gE>N&;7dr
^B)'VfWkOf^\tnKXZQX0!!3XSXSo7%XJFLB!2oas!hD4MpAihG!Y0:KrMK[nT%KP5U&:eiQS\a*!9jIb
';+CbjoOPrf[g,[r8n(-8-.6@qZ$[-Dn>n^!kiaffEq[+TYCB>!j!dNci=+VA>oI/"062I$/#Ud+d&l)
XTFt<!RLfJ$t5n/VZN]-%IXVg#m)6.VZ!CoQ6QFW!!3adi;Md>j,Oc/%/UG7/A^HHjoWj`!mpuL$=U@@
^B2-%&(^d_"$NOZ^B18e!n%&M$!=#%XTGSJ%bC[^"#uVEXTFh@!q63M!!3I+T)GPgVK33u!!36\Oo2*Y
OXgLj!;$6m%!:2$joXV8'%[*b"A6`4joWUd"4I5Q#A(6V^BD<d^5*ZW!!3F$Yl)6;SMgQ!!!3@0UA_1q
XEt`U!9!nZ#=kEaXTFM;!n72O#$@GpVZN`>(?>Jd!!3BnRf'&bM(\q[!!3FPf_sq6jeEmI!!*F5!7^r/
!kgl%eGoXUD7TSZ!gFr2e,TOT=MFaK"2:<Y!VufP!!3@6W;Nb!L*6TI!!3@#XSo7'XH"b2klC,O!X<#+
r20UI*s'jk!X;ArrMKapMCASY!!E9%#_V%4joVh=!Rq)N#\rK"joa\X3!%V2!XiYOr4`<,0`h1Pf)PjQ
B"RuU!h^h?fDks[?)[\'!g5,9lN$,K!WcQ*r2g$_+T^3q!X`,*r20UU.fn?(q#CHs=eknm!fS6&fDks_
I,Fka!l@&#dJs=MHf=nb!5S[e!ndPT&o"cO^B18q!RLfJ#AggG^B18n"nM`k!:Bgg&7;72XTFhK!RLfJ
#%FD+XTFhG"l'(\!!!R8T)>JfOZ!6e!!3@2T)>JfOYR*o!!3pbgAL(7a@ZO4!7UuM#_Lb-joWUm#29+Z
'6q%b^B1&d!UBaH!!3aI[J[c@W([HO!!3dMVYmOtOYHmj!;-<n&7D=3XTFkY#M]:\&S[p9VZMf1!R:ZJ
%pbd)VuERqP<oN0!!3suh>HC:_*J.J!!3mcgAL(7b$,2G!9X=_9YC;<!hh=LbQ%\TDSH(a!ksC'jT,&U
!Ca$dXTFY;!R(NF%V2[>XTGSL'&3Hf6_sXX!0%"0!R(NF%:H(3VZN`<'&3Hf>iP\D!l@&#nc7DE!YU4J
rT41BTbuPb#Qf:c^V@LY2?D_9lMpthF1hLe!N.C$!!iXCXKAV+Pq`<c!;lfu"DFh7XT=b7gAhK\Br7f+
VN3A2aoDJGA>K4&!Kn`,!8db^"-M[,k2jTK!QkBD"cD==joNRZli?JS"qlBr^7$n[a8cAG@'@;A1thp7
!"a1LXGeh6a8cAG=.ZLZ0A-=0&8n5>LFrW&!7:cM"&t\cOY,5d"r<Tajgm\Xk5aKA"U&npji9R<!!NBF
Knq,XeH#.?!t&"f3nOE9!??B3,lu!c!=;F#JMc!Z"T]QbG9[..!!<O!Hnt6mk5YYd-)%(g!QG*A$tZJ.
i;iTP!Wa/S_Z0`D(^&@i!Wa&Nr;ak<!XBJCf)PjQ()-$7fDksX'a*%f!Wa>\gApI<!X]qNf)PjQ)&C?p
q>^R&(^&@i!Wa&N_Z0`C('FC5h>dTX()+Rc!XBGBklC/P!Wa>\_Z0`F*<b[.J,~>

%%EndBinary
grestore
np
grestore
gsave
241.88 133.52 mo
161.36 133.52 li
161.36 53 li
241.88 53 li
241.88 133.52 li
clp
160.69 134.21 mo
242.61 134.21 li
242.61 52.29 li
160.69 52.29 li
cp
/1 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 0 165 ]ct
[81.92 0 0 81.92 160.69 30.79 ]ct
snap_to_device
<<
/T 1
/W 130 
/H 130 
/M[130 0 0 -130 0 130 ]
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS [cf /ASCII85Decode fl dup/DCTDecode fl]
/O 3
>>
%%BeginBinary: 1
img
s4IA>!"M;*Ddm8XA,lT0!!*&R!(-_r$4@:N#n@CQ%1j$[&JcW.().Gu/0H)S,W%,42DZs@1-.^"7QN\-
4u+la@S'<q=C#6=3(7FrAQinK>?tD3^]5&S!.k3&"@F@59b@A.&HGHJ!<9t;*rl9A"T\W)!<E3$z!!!!
"!WrQ/"pYD?$4HmP!4<@<!W`B*!X&T/"U"r.!!.KK!WrE*&Hrdj0gQ!W;.0\RE>10ZOeE%*6F"?A;UOt
Z1LbBV#mqFa(`=5<-7:2j.Ps"@2`NfY6UX@47n?3D;cHat='/U/@q9._B4u!oF*)PJGBeCZK7nr5LPUe
EP*;,qQC!u,R\HRQV5C/hWN*81['d?O\@K2f_o0O6a2lBFdaQ^rf%8R-g>V&OjQ5OekiqC&o(2MHp@n@
XqZ#7L%Ko-!9`S;r9)nrV!:sqU@mn_n;3"4[Pb_u9iHk@Mf31VF]+mMN&a:G<!9.dF9fh78Q@(*?\e<h
7JPA2aXd4>_NOfbYCX&fU`gcNj!"W7K%BMk\38ir'CK!pS-Ia4pn+,N%#B!,5nh$Ro4K6[*[3,<@Frh]
_bgPKA!CcgFbhVma!j$)SH<jkpV'3WPG+goDnuEZuSsNNU.7eClSZ#:Tr2D-g)_f>;Rocuo=`5D)KS;Q
\3Pai?!diNZ2MdG-*p'[j,6%Z0WgoB`dIj)@oRq_a<SZDTHLBhU'#Tkga`$[MH_1Q./l!\$r7h5OM5ut
H/Gk72Y]g3>rrC`PmH0+CK`.N=Fre3p!:86,N#Wa.ffgIfAiR;OS*9[orUX&Si==Cf\3KH;TDVE)WGcP
M-_(,5O8^W+9f<gPF!pq^+8f,U7Guuj5g6[oRt'rcE\@gX-WqSig\`NLFA(VCH)EY"5Plpf*>8#E!3FY
>INSNRF4=8Yrr<=JX.Qs&!0H:A!9.\l!/*F6rrAX?q$p4"-Er\#8*P-QpZqhZZDiV6E\mF(r.Y.Nf<1D
[%dH/fj8:icKj+K"SQD+QfDI,r?6@>ho#\`ETCJu0G^gt4Q7`]trrA%"e@;Z3GWSq)kPdf7rr@kKr$/1
1N:%E[FXB*KrrCD]NGf:1lZRdHfDbhWUH0"iK66#Fli-sjY1^HPG9VbS7>&\Yhu$28hA<pSLPLoI2u`j
k8LK;GIEO!&M>mPoN_L)jh6fJ8rr<u#W3'^ZVG]^i\)?<ArrDh_:[C+=:B;]=q7l]njQ5mTbAPbI2jck
O;O_b&jOOcdKU.hV6:B,%!8EbdYkJmq=L?tpae/S4!&+?P'3Y1_RiRtcZ$`;(mT2VKX]!_lfW>Q'=RqB
&\QkbFYH;DmfWIL!R9I('FiBjP8L-kPDj1slNgt4o[:N?1.q7C3[$r-gl_"#e5PU\TJ)TUbZ$G;npS.+
+`#^u5"1;'52W<Y@&0iZ`S2Y2[\o#X/nfUD$))uN`;+4%'m9J^o#6<nsg*i\peN/_J.'D%7p>YAo=I>6
J_Kt7HY+"fEYt1:S0/0S:S\P$Ob]kM[q^eTFQh(`.35G0h_F\kaKD2V)Q2^i%7fKGoeqjf5B_EcYY.`l
dpC]5sd6'K2S=U[Tc`iRF!;te7%eZlq=KVP^7cBb8999W>N)nc,L[B#_?3oHraDc1Gr9G`Idp1YmJm26
3QnB4KS\'=>/$_l^;_1TX\klu`,t+:%E4(o0!!p$".]]tUjCeF$rrA$Q@rH:`>d_4k@Yk?4$Y4=2eC<?
(VoHna/\SoHhu#o5!ke8jIAT!BR)r>SP]/cNcfJ=W$V71TXXsC<GN3a3[j.J#;MZo6Q6s#HnmsEIN*C<
Wdkt)'&2D1POe;J`rrD"W1qRO/)o]-e?-<pZ,%G[YbE<Tp8JSlq9mcuMa%XK;kFB<G=:#,aVi*0nnef*
fa:?-T;+O[em:"<^U9l;uXJ1LnRLn4=a`6)*W;ck*2#dP/11/aJhKAhu)O>e8`'B;.XB[/6B\*JQS5^,
8)JmeC0$;iH!8Ah"!"+.:\M-QkA%#a7mUn:tafR]kl9]`MgG$5Dd>&UtH</"U^6&Tco=h\N,]%otCPDS
444`oQ[,AtcNh:sgE'M@Pq`>XtY9g[T'MIP[q;Rp*6,t6P8=gLC5sMpche[Q;!75Bt^77\3Kr=nK?h($
':<<(@[QjK<<(WhKb+O0;g^lLEdf0<$4D@h@V5,@8frt0NL&TL!+_UQdVubCtM/>HYolp:W9K`=TBkdS
Ip^p+Um5$ut'!VB9^m4p"$EO1,#aU\S!'F'UnK7c2'1_sE>"AM\rrC(arrD%n@=;fZ(KT_ug'W&XD2A2
l?Of<X'cQ>fK;9(iU+c:>Rj\?.7%+&TFFT!<%H]ic\,6V3B'Z#)+2G9ernZ&/EN*&Me*S?I0!D-H'1XC
I@BmE'i#L9WiE[iFqiUmYI)Z*c`7.j0):R$ibV1K-Ek@JjT?1j%lF*puE\,S'g`g-.@r=?f5HQec90>j
bDBRS/S2ToI2LBL;\h1#*'Q"o>9#t@Sm5b.Xa6?-`/XPp<q`]1s6Q&n[f;KOb)p[X-\,JMQJ,B]NInIq
ImC(-(@F+BuQ'^!5]k,<_k`)Q95PF_8A3p?UKYipQT1733TRhJX).P:C)hm=0VU1%HkI(<6NJpD'7BjV
EqL0/^h1!9)rr?W'`4HAG?orjnC87h75s;qkFEV+qKd4tD<LS:_VJjf6q>UGtNW(f/WS0dX!Ed`K"tBm
T1-,!()kBnig00!`pAY-P.^[R=2:MN8fk+Wm[qnLKlVj0fk+06>CaHs$^p046q=O&Ur)G)6RUs1GNSJ_
1XiX'A8-&3OqUMeE5`Znarr@VBn>s<P_(G<#DENT/V/A32'9!o_!:-9"\o6ulJ"b>n!:C/T+6?Z"RT5B
0@j9Psjpfrqc&^GKeD<2B4-rM9ZfNm]YuC*pP0\(Q2n&G?qnKj-&&i<K=^Urf>r&-*AiBOgSoB+3/c7L
]kd1(c0,4Ci@Sn"CD@[HI\1CQN\hHH\5$ME?GfL#n/j(F#W?,SsJKtjGN[lnkdGr^JpngJk%R:nJj:G,
G?!m<nWZ3PAf^@&fFIE,.L#W",bI]`sGT_khDLAb1k3&m4m9Xd$'N^](Rb&WM'N]).BuRKmZ5"tg_Dkf
o("c6ZgWp63MW%3N+pU?Zf-T>W(kurfmeMXAcrY.)Oi[_(T4pO-Zt&o5Hf=WF8[7"c>I9l?(S@gUB8)&
UnAILjj=$B[,:Fg[pT;1;>sW8,#.[;H,,IhiG9=u>$X;F*_W".]Nr6L/jfP/-q$Q4G*?%YP4AP*oiuq&
8F-6J&f<3967qh=$CVpNH)fd>OOnmR@p8,-(-Hia)O8/C3rr@nUkr[.8,dtLINfp)B_l+e;VMLo[1Anq
/or9M3VPc?G$G6jD#=2PF9/(%lg!m!bWijc04QeRR_TWEPD!G!0j]?.9*cmdUHs'i3Pe>?@HFN\$./K4
I^+d+2dm=]4"th,C&[=V*IeIde9(%CnRM:7G7QCD<F8l6$=!4VTCZEUGR?@qi:nr)^T^5Q38%>HhR]oN
%g,bfl^@FLR<G=Q\G_L7XqCI6,:%agsX`k'H6K+b<N.*WTl<8VJQ8eN0p\B<YTSN8u+J/R'81+FN<R9o
-hSX3m+^IiNER4JPj/9"]9l!u)>K[pQOqWFJ.<<G1$f;VKO0E?=rnXHI[=^u$nnHCWC?kTJXYPmMps3.
"rnZ"Rj&<5'rHB73-#XBF)X2qOm?4;Hf0>*KrrBlGX$]t;S"I1DF8l57Qi(R8;R&A<D3+Y'+6-7p:k-h
iA,cOI.V]]U*:^%&hcl@'M>$rL'P%,.g3<Mu9hY3K'E8'Z5>D.X^fd^SCYE)Zj<nC#rr=,BO6t1Brdo:
nJ(ML9!#g\>eSmH;Ab[e*^2<?W.;f(bI'lYWQD=pp>G(e+.E:B&Nb=+hmu!NCM]?(aqTLD)'-(;iI:WV
e^>%Xsq=2r6!:UnVn>'nk`3?"-ep;FGF^kQk[stl/bb+Zuf]2tF<gbSDUs0L39hN@'li*!Ydld#:U?mI
5SQFm9']2!j438%<B,piTk-)b)fYZU+i/iKqhD*'"[*S,f3*SKLjF$$MgXdR3gR;m]kP[9Y?hnqDe#.*
`!2WV8F-D-ak9&pq1[4_e1>;0!XMhQ-%mkG2q,:&!WfS#X.GAuUCn,k$jO/-A0BThEh6g*,E.[%&1KFG
TYd@cD1a?A9,dAMP_XUbFnm4Jiqd5W.8b2K)*V3&f]sdCAFeAO&Qi@&BWAT$Y-]".#<\24o(`p`HlW-\
NPOd148Uf,APAmY@jd9u4?MP=Ffk*$3j\35=]8I-t^%*Y.Lp-Ijb:&(tZS2S7VVP?bj,^n!1$Q`^2;#*
jFRc_`PN38MoR9#.jnqt&S=3Hk[>j6k0!1GliOB4aGl$$0\eU&uI`bG.hEUp<A_bB3V&,HB3YcIcBI"R
DIG3#uUC3bi$:s>jCiVg<E5(72`i0*(=G=*cAe3!$l%A5'>2i5I*+aNnJht/+m[Vc!'6F,+3-h8RiQ%4
i"b'DAFm*RW<]Sc#](7O_ETIg"V?u:ZA6eGH7Hr!bXl,>,[W$_]F5A[eZC\qahUBb_645W413<L,]EV)
QQb!TC&)#o1`rg<Gd+:)69,4_[D*\.olnSgOo8`UfY;`25/';YMl\D3l/%+ju]%pT6)e0pt4S7hfY.2n
s@"k$9j*e]!5]cd'+lJJ3[$SinIk^RDN!en+C-G5\Aqt'c\e9MdC@:^?<mg8XiKq3('UIhVf;!S-D4AG
)q7:s;51B+W"<P:bYMmYM]tSaI2sirI@m61)fk>R'f.RH<0na@!)"EaR.g*["FV^h9=umn&jHj/i*BJX
,eY]7H9d*_Tm>GpI>>`[koefQZ\pT#gZa\*drrB&6*&`ntG9dJ5/8-dQ!!((\^D`GVVLIXGW*\BFa/An
1;*rkHhRS`g,eq8aPQYB;anGD0.2(HJN2;_*oC>Ri1-+BPQ."Jp,*m'^bVJ$YN/Vl<X:GD:i+:rpJ!^0
8Y?3<L`>=C!li7YD.C]e+b-,aY([5/<B8T4_1jI(=q?k,po2;scCt$If8U)'GJX9i2fK0R/`]@.Ykn^S
E&!J(%TTW,qr$j,%*BB2LD(XN.)P?7hCTI@5OMXM(aM\#XAZ/7:q8fjlO8A5C!;o8Hg,Mr?oBj9CUmqU
taW10b\U)tONe0>K'7_j_#!q0o<7^b$f/M.4I>n=sIV'.A#d*giSsYoD_/F9/rr@nU7pjb5Z_`DF=cXp
_F8Ah)=k6[WrKUnXi%P'DXeKO0lk[ar%/,O-_N\am,Gh1\ko0R%Kh(=kJDmT38,]l7rZ[p\^[GrU5OGM
$nMMMK0%M=s^<MUcPmWF5en==BCk#((?O,h,61Rer5K!L$`7)K[&(:IXkDB,'rr@nU.B@7=8,PsFLr]6
3r$gZ+f=U7t@"6cg5Jj:'3n6_37QuVm_OT1RKfG&VmudSa)U!E_g(F>b")n/cS`a7/P70hX"Fn:c!nV?
+`II985G]e*5<+1SqdkYjHm>M$rD3DRTDVDPFl?O=[rVs.]QDqerrC!d#-"_;k0`Q$quT[n-AL)oBN:V
1X#'p<`(3,d>.G]6"M7XMTTfnqT\Ie/ig;PqD^"4#b!M6uq*T/BTZ'1JR[?na(Vo9jCk!pLhWieo!)U`
%,Q@at1o7@mqj,PjrLHa5^Mh]&]t5%EkpQSX#F1g*G-5.ON]YoGrl#Z638@nIV[)n^:^J=(m4$N5!1!Q
aO)^e>G5hOLl!)(B,"<os9.kI!QHB.,a*l3$rOk2d7\-@8+gI?u3ZaP%WFm6Y:)5Zk0jg2cOcO75kdLA
Fhf8YrJMR6*nPnmJCPcp.!.9U9F+R!/%pY0t1lYR\qYNs9f<]tsF]bcX>fiI:O[*.OSN?Y*OVS$TLUVP
Z<Q<PQleGMn[:#)1EEid3)Fa^D9tV4_i-lcMFMI<u7!d!smUSPbCBMMdS_`st&P[1\'G6KuOA7TaJ]RK
.D2Z^Pnc"Sf\),BE`hL/S9fC?o&=,d=[g$OWDtgrG5?Vq"O@_@]%4#IlP&Za7\ZJGpju>/D/[:4X!8F*
[Mdj$ced\=sEuBnZD4=?T39.QGe.r([:U\[$nG`L%gOMcM(U%S%qV)H#kKC,r,NZ?A%KXE/X[@6iQ*NV
-R,E".1n"8*C;o^$Q7Xrg/hnJ"5Z#F\"D=6gKC)m`;V*/9boN7)GZM1hT:KG9Y3/WlZ@hOV&IKL-`u`N
TR6HnuoMJ&&KmAr(FAYJMSd2b`[^+$fSG@hH7Sc<U?,j+S^rgcbnlr(aHN(=rGQc#0Qd*P-0_P8LmB.3
OJc(7-T=]UX5:Z*n,^.UPI'?VckGH&2H2"L8n@IF7L*?,+ie9(86Ai^(orXhp?6tW.k0%Zp_A+Ou+dU0
Ir'7Enf2pGfkE9NNI9]>+E@(Z\Ilc^S*g+XH(o:e?kWg\<1Q[*_Fuk)>O^,6L>h_AF[j%,FbF[7:rOaA
l%4bI=j$./uj&4Ob$`gb)UQuEEIE@gk$tH76.nKeq:tp2(T<1pE,ast5J49R[DM#9.No_RCa`OkM1PPD
MH,8nX5"P*=iA+Z>j*8H:C:rL!#,FF9KFgVBXE3\/efBb2)NTk1V3fE6NoE43\_;uJ<Q7O&jCD>",LSo
>P0e]oPFpF9X/dath\b4h'#r=Q;Lrdg4&gC]oeiisZ)f&L]=*:_U$ct<&cr"4!ie'@2XMEn[tpTJS=o?
G;]eB2o"Jm4F8l5VKg*cB96l!)Z*G00@4o?JT;>l-HhWs^2VQth..YC<Jj1aAZdRce;n/9%;AY1ZpLn.
8^ZRJW0!)l8Y,lp:DAW4$Lpb^5mdDI196KhM5;4Jj'tcXDVnR-JHMM(KC>b4M-.JR]W8,/E?d>T&M5Pk
YB5Ts$P1.F5A3*p[5OFi;K3ibZ+8bijiDBflr[=H^7rRn"JTVo*!&!V5#Q4M'peWWGal;U/rr<*:r$r%
t)T)XfTDN4b`g?Z9MZN`krr@L<psn3\qof!>I8EHZ"bo4K<,&eadMRc<ZP9:Z'j`+\qqtD^>[uoU5OYB
H'^aB0R%sZ]^5r%in@O<8:M9\-JHPg!ZHI)I9cTANKPnQ<#-gDO$F1blTD.8nNAB\6(6I:W`Y$u9'\eX
t)VIc^U.Cb8\5[#aJ-T$(O_u>s,XOuS<07+[`"%*+2+]W/BpLS*"H3F)P[asfV@=<Z7e7>:+<Z8g+G5_
I@n>?L@^a8q3T')mra.6f88N8hAN@u&rTeUIch4;YBG$e5GsA]Gnf:KDo7mQ8iDj7&HYkm=XMs=i1VCp
c#!.)'XL<l:F\1s=g*#oT:->e?K:8shA8F]M[nJ??@HEQnY;tY9ih=rV)?Nli=c'rj*n:;B/baap]`.u
I=8r7-2*3ebiF&pAJlh%NaMIlV$G'4D5:EIp>Wpl=?8u/(jD<YD^8+c]"O0'#;kucqoj-5jj1)4P(-ue
SUg$2$bYq,<k1IJ5KfMB"F=ZB74GEe88(>+n[iaX8DRHB4D5Ka@YppPL)cI^fIm--$6sEAGJ0rtscTEt
(o]EK_mOe)^?aI%C+:Yq7"-;^8=k_k)1`9[qrrBZeON]GL%rkelU_:j[(<eIs5<Er8#L]mMaQAQ$Y-J`
'LsGp^rR73@8S8q]gS[c<5OPsfWS2f=^$8lo>`BNcaa"Q'Ph?(WOcG]bET.ukoJ4O(W4$q8kk38H]2Q,
KYdV!KK'#9JWL>u?!J1)K?$iF&an&`W$qr]2,PAmUB?$7b>3T)/)F$77(KEW8i1,+*]]+esY:He,Xs/`
OY1par--a*-^+na`cd5a!EM_AT$T$O*i-ND@290qf-@8l`#7`",VL&[9ROpoqI*(@MU!+e^!:87lkXpV
#ZJIr%GkS*gan;i+nCW9dEXss%P%MQ/i(u`*lWZOjZ:jRNUNG>o(</.9'paUamE<NCJi#sNb[OC'l8c"
g_^=Vj/bX4@UfGNG]7r@e1,ILm\Fgk_BaR.U'>?fl/QA<k)QkoF5!U+@gLZ+heLa2m@a=g@m@oO`rr<?
#5i?rfVEJ#U0($OLrr>MQr*;5-82'$?/rq>5=]]9!%bW_:kn'::.abBNanNq-qXK\HZ:#snb-Yr-/j=<
5]tLH(n7@UaAqrVDb^YUnnHj:J(J_Cn`AiQ:+Rllh^7"D)TEiH'(qdZa!3^)9!62;9jdKNp>Xtg<NB<d
CbS<KaKF@sAiuaOiHgCIVJ"oERgN82frrBcJ#qr\*J[K=]a3rn,rK=RWCL[p8h+7qXhDcX!<T+*#,EYp
YV8UbS^.E1_-Q!0kkPa,^^9]769UF3d5iWuPi-SJmmG!;+G]\iYG!*(OE_lZ).7]6&(rccBD@_-;J&8>
@BK%V['0Q";@Eq\e`ma8%\mmCg%"GuG=mL40.,&L>\E!QP>Q4\ZVi.VDp5fg^DL_GMd4LN0Bf#a0;D#P
VXk^trq>UF%KNlM^jmHXOg\qr/08am'F/3#ihpY=A.+Gln<ks4:A,[4q$+RcY:U:C844/i^p9db8DR%H
n5POgM!:_oG!45I]oau]2BDa7;,6EV9"<)N>5X4;fcdWKpUW\aKbBH0UIt_nF`Ac\nV;)"Mht-jJ`6s\
[hP_h!2V/'1RihVV]!Ej-_[lY.IuQg7(?,RUQu-^Oc9K=KrN>4#(2OJ2>`]3>jei!^pHN\7rrC["J+5C
s'_\K@\o(>qG3iP1^KP<>g[*0&h7Sn<ls,+3j0.E95AS*S`11IjbM*m$htg>#qaO=4B0;bOO.Xn7E\4C
cAS;"^ds!_RQH;@OhJ+t"-6lsGoYLXS4+A`O:CCLBoTCi&Mf-Qa)3j[;jjKeC'\(+.YP,VXBfn>EH?s5
nXA)/uV7-M.^g;<C=S2'tUcKQh\=^%\BE#FKZ`S'7#uQ6>80'\+rr<t<[oV>b!$=,Vp^DZI\u?lDp:1@
F%<QR%lrM/6>#:?NLD/FM_:lZ>Xgdo'cP#Me2qCepp5iLr)*%2S[lEX!A%ct/_"ORE@gDtYrlVNo>@oE
CHWXTBH.drM*i(7,qL$/e;L]HiI,Ks5c_.5?D!eUQ5s.&E0e^!;+FAV2WeRh%1^PL2Pmie;Kj8+;HWHZ
]EtfRsVLZT[#PpZ7`N)4.E7u;V\haqT[V\:C\F+%F=9agMgEoG.rqBe#NPB[u8p0^Z%3FiYY`][][L#b
aE-\C#4=tJ`G`56US4!\]3NQR#ku$*td*@aV1(fS3.D]9[#C>0Pmh&$/EAU%&5:bHHIlbR=<R.:ZB*#W
--A?\E8:kl3':tKOoMJ&&KmAr(PYjkmSd1\B\!<4]^Nb4rcrX^sIf;]aU!DbT4K&2Z'jQfMg,6@(8W4M
t?_Z.iblEaH0I*e]ik*G9=Qrii7PWe6399qfV>+9>rr@^e&=3D%%icR3orZOI>qMYJ,^:5L.TMUNe(:0
PJ_n!%FaFKfUm<S^kW<jNB[8p;dB6Qe^.W5F-]qn/NIWR!1YTH63u_CN\KmdCc-q,=):nk4#-u7F-rg@
D]BRterrC#;&V54Q.?Z'>4HskA3#usfX_J&u!sLnD=oN'#WQN;Oa.f0X'ruA6)D=.$2%6"X_<?:s>D-B
no;D1V\B=.ZLXLh7oc&D??[qHq*HLa$leX&$P"9+P?m!RRi8?)GR#Ze=f5r*("!2'A5OGb+KlQZj-'+'
=B=*7PR!+06'90Ur/kBj[k+:EJZ&s5ckCCKh+>.E(pgZm=,OE4<B7Kn1ZsQ_BFkF-d&3(M<rrD&Y&%>>
P8Sp6@TDIdorr<d1`GK2hrO*Q>,b:^O-][*%:;;iZOe^TH))rRlKV.L/@+-suMjK!3PWX3Jo0*.;rpd,
^i(G'gn,.=CpptD;oIs&3VMKW>3@%j"hs!m".@7K&1&h6__8TG^$L'(hgE5oDrr<t&Ho\(-82:,E!cRV
.7\r1frL%U\chb`_!;NR5^QeE?mK`]t:];i8OD,s-g-e0mglME"Th%#&pMF@]p:uafQCL&@@K#?g!5EC
N!6%k9!5\o;N_=h7hu$b(po[K7p+4,\hZZ,eXn0i!3<&uf_>Z9jU"Lh5@KZT4hr@Kn<P#0J@,n[kpsYQ
&63m?,U[%1F!6%n9f):'CrrDfArrA$PYukMtKa6$^rY6WtAV7E:+83p>ktM*WKGMJWrr=$gr[snTn7@h
"miissbL&jhTDX/>Nt]&OrZs@Mi+i8lNAu0RJ_Y@8Nnue-;Ep]YTKt@>_F:u-IANHQC,=i759]2=$&o6
"GJ=uorrBEDe,ZG_Frk\orrA*YJ$eZokF:N2];PZ/'iDV%B0Wt$o8LO^e$W/%<@%S7f=j%Y`u^ePOcnH
m9=ZX6Vse-;.LZ7V4l>E[#T?!bbUnZ?C`f(Mo_[=EWV*;mOdu2d=kf*4`cFlRfs<(CrXlNlP(*=W:KjZ
G@3(jj&OMa/:'nr_>-r165B:-.jAgV#k"4s[pfUB<P/-/=fUBBF=[.!!'`3#ME@A;-NA/![a03pn=f>K
"&@.r9^VbSJp,1*0RUe>1Cj/^rYWH\DHN\333UcUCj8K\G/-'P[/d=PiVtejoigj$8eopR9So#]=8GUd
/^]PT=r`.ce8)p'@TD$^5h?`c^:U@8R"(s4)AF%VeBJMi`+umjekV680Ub=<]>=KfRq)_A3_=[XU,@$+
*nGB8LA.bC4!;FU[5>r$iLH+mi-dRV=b+62Sj&>5lJ+bJNl_rTa9oqI,d]t7PoZOJU95ERZ5%rE+f!%8
JW*<M@p97ai19+iP'Fo`qIT`hJrnbMAq"C0$(j$-0nbI=1CW:?u_5,e\El@O7)uR!%+aG=CSCa:Y72=o
AjYb!(72=;8INbu%e)RpM[WcDAg;o0)"I%,%orVTr9=.SNCo8NW\L7CW'jMaoX`*2Lqfi`!nd;#s$c34
cpT84\&Du5-ON6Ds5SS*h'7jA6I\EYIBG1:n9>CleaHaXl@bg%'*0XSWYP;cZ#>8QXrr>6fIuSGi=*af
G$$M7,!'X?]!8jUP!91%X8%XCMOPF%b7gsq8<WE_l%g1TgQe-MVh<B\h[fZ+^B1**JdOGg\jR_Y^r+fM
)f'[I[G25$UXCH2M<\h^n>1V(Y]:7R2[nUV:(u,*kN3VWu]5RI8Ho(d&5c4P]^f\@kUX32n;t4,MA<4g
>Q96?+<5o"#?ua[t)dNW<Xd-tbBWfe9Lt"2JQ8VeO!C&J'Oe+^O[oGkVEOS#"70%u5Wj63jk/e\;L$.]
@*NcDNFT2?%^d"qUdmqDQZ;8pK!<3&&>nf4Afj.Fim,pBE`8gdX\p<s9/#+XrWe`B\Eu</F2I7H99gWK
`JVU69m[mj9`k"S03W7I#J%RN6l[p*NNoTl&o9+F^qEOJGrl!0ukW6c`hd`gB$itlum7Yd!r9KkPd=D5
sONW)3rrE"_4<5Pdepm7;rrB5u)N/fDDu:!'RJijOj_]eO]qorQ!5'QT>hJa]rr<rJR?.#^J)=c6CX<"
\Yr!WQ>]9NLMO42^6Nd<TmQ^+/5JjuS:-6gO@?,W7'pD3023n)X(]8")B[Zn\kVAe*'U:)r!?D'1rr<+
qrr<s5\$%eGJ)EqKNH^%J3[EVWd/O(aNoC8RJYHi=!PMSWlWc[J:5V)JnpfS4It]<"1jjeoH>i]kNk1S
]U6TF.,.dh)@pJHiF4Q>Zin]qT)+c,]a^,1"/!VpT-a'biL"arm1kYf.0q\B6?h(!4aRDYNq9SuQ+RAg
Q7Mb'KOj8I<nOHs+Xio[/8Dd,,E6A=s[6kKq-bo<Jp8A4L[=>Ltqce?B\2cMj>*&P68&me9Qi@$fP*"o
h1$c$RqVN[q<fXO$7f.24\\K4?K3X3*hhCZom&@>WjY-W6'jJpHOg+9(UL4<oEf=e[[@+/"2/AUrdq--
L;ur$7T>]gA%uE.J[P?)=fNbuAjg[mC:8?;<!7b5$+hh`#'X4&ccc`T1b]k.VW:=JlrL]e;XGrWRL@"Z
O[XY4<=eBO"OQ64!o_XiorrC+*7Vs56FXCC2U`^XhmPa)I9'%puXfaNcM/8Ae]/RkqGi\K;:/=1-TWXQ
-6fHPlRXN?W&P)iF:4EuB0nT,m[pEP7Ts+P\Z?I5HW2q*988iHja(VC$D:BKCrr@_,oI^n@7JC#/(p1!
MGYA$e\"B)g!99=HhImKrPM4bs.n4`aCqMJBJ55^ViEZ<q;+24^=YruE'N%:5;+20r72/Tf'N%:5;+20
r72/Tf'N%:5;+20r72/Tf'N%:5;+20r72/Tf'N%:5;+20r72/Tf'N%:5;+20r?iSd~>
%%EndBinary
grestore
np
grestore
.96 lw
0 lc
0 lj
10 ml
[] 0 dsh
true sadj
248.36 77.6 mo
303.44 77.6 li
303.44 61.8801 li
248.36 61.8801 li
cp
1 /0 /CSD get_res sepcs
1 sep
@
.48 lw
240.32 69.8 mo
248.34 69.8 li
@
307.44 69.8199 mo
327.15 69.8199 li
327.15 68.8199 li
307.44 68.8199 li
cp
307.44 69.3199 mo
309.44 67.3199 li
303.44 69.3199 li
309.44 71.3199 li
f
%ADOBeginSubsetFont: PBAAAA+Cambria#2320Math-KSCms-UHC-H-Identity-H-Identity-H Initial
Adobe_CoolType_Utility begin ct_MakeOCF begin ct_saveCIDInit
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2016 Adobe System Incorporated. All rights reserved.
%%DocumentNeededResources: ProcSet (CIDInit)
%%IncludeResource: ProcSet (CIDInit)
%%BeginResource: CIDFont (PBAAAA+Cambria#2320Math-KSCms-UHC-H-Identity-H)
%%Title: (PBAAAA+Cambria#2320Math-KSCms-UHC-H-Identity-H Adobe Identity 0)
%%Version: 0
/CIDInit /ProcSet findresource begin
14 dict begin
/CIDFontName /PBAAAA+Cambria#2320Math-KSCms-UHC-H-Identity-H def
/CIDFontType 0 def
/CIDSystemInfo 3 dict dup begin
/Registry (Adobe) def
/Ordering (Identity) def
/Supplement 0 def
end def
/FontBBox {0 0 0 0} def
/FontInfo 4 dict dup begin
/FSType 4 def
end def
/CIDMapOffset 57 def
/FDBytes 1 def
/GDBytes 1 def
/CIDCount 7327 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/CDevProc {pop pop pop pop pop 0 -1000 7 index 2 div 880} def
/FDArray 1 array
dup 0
%ADOBeginFontDict
4 dict dup begin
/FontType 1 def
/PaintType 0 def
/FontMatrix [1 0 0 1 0 0] def
%ADOBeginPrivateDict
/Private 7 dict dup begin
/BlueValues [0 0] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/SubrMapOffset 0 def
/SDBytes 1 def
/SubrCount 5 def
end def
%ADOEndPrivateDict
end put
%ADOEndFontDict
def
/GlyphDirectory 3 dict def
ct_GlyphDirProcs begin
GlyphDirectory
+
1843 <001C60D8A8C9B659BC95F59DAFE855BC14469436BB58D5A5EB76F8826F
F97BB2909E01E821A3C8EE6F5A0B965FDE5A802DF467A0C5239CD72D790B9F78
9755242F327E360DCF5525050BABFD25BEB358E6A4A284B7A08AE4932D41023B
F1A1AC65FFDCFD05A28980B4CCDC37BAEDCF43F37338650AC19C7E748D405228
EB8E6CD975E91EF8A3F3B3C9E1CF3A4946688443B2A241CA5EFFE04CF6A3265D
B233CFF600E55802C6AE9246CC3EDFC8319CA65193D94AE94385E08362B96CAF
6BD58472AB449F906995005CB310E43B9AFE8918A093D2D47D61305A592BC32A
829D22D8A1A7C3D2919543216A881EF7387B6C0FDFC71643A6F7A07CC4EFFE58
4F91227AA437> |
2869 <001C60D8A8C9B7F88C2B780E4DB2544561CAC9A20C6BB0B13699B706C1
363010DB765FA6C43655301BE09B2CC3CD96E1857F37F0C3A41E09A4894AF051
9685AD3CAD001A338BFE95F6F1AA62102D91F860C1C48E32F88B27AAA80BA221
C6190705435530756B753E8A19A3D6B6F9D6F69BDA4DFF70963E5D7172CEA8BA
E2A62723B33714F423A266021272A7A831450ABD0A86799213944A73BBF77865
49680961C310707B73A46D81D67FB83359220776A5236469A2820155406C9947
84A4020BC578B6FF849EE8BAFE5D3039B602F31D2CBA08D4C984BF04> |
0 <001C60D8A8C9B6472030318CD4127C796377DABFD8006FC8CD7AAF1086964
F20EE651118638C13AC909581621FA1FBAC552E6A16F7B4972529EBE8A80E782
DD8AB05FDEEBDFC49979639D0FF68DCB6E7F422169AA9A2DB1DEF4F4B413623F
5F563C56D612D674F82D41A71448843BD967EEE7B9B5E5851CDE54BA3652F7BD
EAFCDD43D27FDE0DE42D02A7D2B502434D5DE03C37B40825A9A0E097F17F7836
8B6C52A18DA8C4E8168AC56AD15BCF0B69C17FC31C7A04A95D974197259FB36A
E72A5300CDD86C2372DFF50F7695D6D8E6898504FD1B1E5E543A89FFBE60F42D
9B97A8DA995D7DC487489AC6073B6078ACF7C0324D45E66DA26D3EFF3411DA7F
D9C5DE33005> |
!
end
ct_AddStdCIDMap
%%EndResource
ct_restoreCIDInit /PBAAAA+Cambria#2320Math-KSCms-UHC-H-Identity-H-Identity-H /Identity-H 0 [/PBAAAA+Cambria#2320Math-KSCms-UHC-H-Identity-H] ct_ComposeFont pop end end
%ADOEndSubsetFont
/QNHRNT+Cambria#2320Math-KSCms-UHC-H-Identity-H /PBAAAA+Cambria#2320Math-KSCms-UHC-H-Identity-H-Identity-H findfont ct_VMDictPut
QNHRNT+Cambria#2320Math-KSCms-UHC-H-Identity-H [12 0 0 -12 0 0 ]msf
268.78 73.2801 mo
(\0073)sh
QNHRNT+Cambria#2320Math-KSCms-UHC-H-Identity-H [8.76 0 0 -8.76 0 0 ]msf
276.34 75.6801 mo
(\0135)sh
.96 lw
248.36 125.24 mo
303.44 125.24 li
303.44 109.52 li
248.36 109.52 li
cp
@
.48 lw
240.32 117.44 mo
248.34 117.44 li
@
307.44 117.34 mo
327.15 117.34 li
327.15 116.34 li
307.44 116.34 li
cp
307.44 116.84 mo
309.44 114.84 li
303.44 116.84 li
309.44 118.84 li
f
%ADOBeginSubsetFont: PBAAAA+Cambria#2320Math-KSCms-UHC-H-Identity-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2016 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/PBAAAA+Cambria#2320Math-KSCms-UHC-H-Identity-H 1 GetGlyphDirectory
3048 <001C60D8A8C9B67CE7CECA51B7B794E20A34A17EDAA0C23ECA747C32C5
0EF2A223098F5612F66FA59A2DEFEC2E609CBA3136CE9B71D0A19C2A831F380B
333A61135A4E91F4F2A0CAFDE04820D19AC4D2527D41F6EC22122F02713796D4
A8C2F5443399F2057BE8A09DCE1E5AF85040795E2FA83076599242EEDD28C0BF
4BC26D58CE145D05558C117F29DB395966736CDC29E21DB2434D37461405E59D
8EB752E078351933B994383D6305C2B0D1371A6F72C6A80C69E97FB81703C80D
B30812579DBA3F207E8FB30D844BA76F3F2D07AE7FC401FAA7AAB3C5416FA732
FF170D99BF43DABD882D5E735652CEEA9F2D6E6A74BAED2016778D9DDBDE8FBB
58A110CB50DB3595B5ADCD380468FD93FA9AA61F90789CD3B269CEDA5EE17187
613F56DB3FBA0D5492D70068DCBEFC06894EECF497959038ABF5D633480A7A66
D9DB8805E317EAA6B251D741CDFED0408D75247294167DF693F4962AED4D3A49
99ECC23DA540D6065238> |
!
end
end end
%ADOEndSubsetFont
QNHRNT+Cambria#2320Math-KSCms-UHC-H-Identity-H [12 0 0 -12 0 0 ]msf
268.66 120.9 mo
(\0073)sh
QNHRNT+Cambria#2320Math-KSCms-UHC-H-Identity-H [8.76 0 0 -8.76 0 0 ]msf
276.46 123.3 mo
(\013\350)sh
55.5199 44.24 mo
161.46 93.3 li
@
25.2801 102.97 mo
161.39 93.2 li
@
59.6 152.85 mo
161.43 93.2 li
@
2.04 lw
[2.04 2.04 ] 0 dsh
275.3 82.5801 mo
275.3 104.03 li
@
%ADOBeginSubsetFont: HIBBAA+Calibri Initial
ct_T42Dict begin
-0.5 -0.305 1.238 1.023
 256 array 0 1 255 {1 index exch /.notdef put} for  /HIBBAA+Calibri
Type42DictBegin
[<00010000000c000c000c000c4f532f3200000000000000cc000000566376
7420b09bc4d2000001240000051c6670676df6f64d0c000006400000091a
676c796600000000000066540000105068656164f31caa1e00000f5c0000
0036686865610dad0c0b00000f9400000024686d74780000000000000fb8
000006d86c6f6361000000000000169000001e546d6178702137251a0000
34e4000000206e616d651fad71840000350400000d3e707265706baf02fe
000042440000241067646972000000000000000000000000000100000190
000500080000000000000000000000000000000000000000000000000000
00000000000000000000000000080000000000000000000000000000f000
f0ff00000000000000000000000000010000000000000000079e0000fe93
0000000000000000000000000050006a0073008000800086008d009300bf
00db006200830093009900a000a600a900b000c100c900d7000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
00000000000000000000fe79056d000c03b7000600130000fffaffedfea6
ffedfeb8050e000600130000fffaffedfe93050e00130420000600130000
fffaffedff10ffee050e00130420000600130000fffaffeefe93ff10feb8
0612000a050e0006000d02d2fffafff301fdfffa023f0006000dff36fffa
fff302870006000f0000fffafff1079efeaffea700000000000000000000
000000500051005a005b005c005d006000610062006400680069006a006b
006c006d006e00680069006e00600067006e00660068005f006100630064
00660068006a006b006c006d006e006f0070006f00720074007500760076
007000720073007400750076006f00700071007200730075007700770078
0079007a007b007c007d007b007c007d00770079007a007c0078007a007c
007d0078007d007e007f008000810082007e007f00810082007e007f0080
008100820083008400850086008700880089008300840085008600870088
0089008300840085008600870088008900890086008700880089008a008b
008c008d008e008f008a008b008c008d008e008f008a008b008c008d008e
008f008d008a008b008c008d008e008f0090009000910092009300940095
009600980099009b009c0090009100920093009400950096009700980099
009a009e009f00a60090009100950098009f009000910096009700bc00c6
00b500ae00af00b6006800690063006a006f00700071006f007000710072
0066006c006d00700079007c007f00830086008700880089008a00740075
00760077007a007b007c007d007e008200850086008a0088008900830078
007b00820083008600870088008900760079007a007c007d007e00830085
00880089008a0073007400750077007a007d00880089008a008b008c008d
008e00900094008b008c008d00910092009300940095008c008d00910095
008f009000910092009300940095008b008c008d008e008f009000910092
009300940095008b008c008d008e008f0090009100920093009600970098
0099009c0096009700980099009a009b009c00960099009a009c00960097
00980099009a009b009c009700980099009a009b009c009700980099009a
009b009c0096009d00a000a1009d009e009f00a000a100a2009d009f00a0
00a1009f00a2009d009e009f00a000a100a2009d009e00a000a1009d009e
00a000a2009d00a300a400a500a600a700a300a400a600a700a300a400a5
00a600a700a600a300a700a800a900aa00ab00ac00ac00a800a900aa00ab
00ac00a800a900aa00ab00ac00a800aa00ab00ac00ae00ad00ae00af00b0
00b100b200b300b400b500b600b700b800ad00ae00ad00ae00af00b000b1
00b200b300b400b500b600b700b800ad00ae00af00b000b100b200b300b4
00b500b600b700b800b300ae00af00b000b200b500b600b700b800b900ba
00bb00bc00be00c000c100c200c200b900ba00bb00bc00bd00be00bf00c0
00c100c200c400ba00bb00be00bf00c000c200c300c400b900ba00bf00c0
00c200c600c700c900ca00cb00cc00cf00c500c700ce00c500c700c800cf
00d000d200d300d7010d00d000d100e900d000fd00d005e4000e00410000
05ba009c009c005e005e4047645f5e5d5c5b5a59585554535251504f4e4d
4c4b4a494847464544434241403f3e3d3c3b3a39383736352f2e2d2c2826
252423221f181411100f0d0b0a090807060504030201002c4523466020b0
2660b004262348482d2c452346236120b02661b004262348482d2c452346
60b0206120b04660b004262348482d2c4523462361b0206020b02661b020
61b004262348482d2c45234660b0406120b06660b004262348482d2c4523
462361b0406020b02661b04061b004262348482d2c0110203c003c2d2c20
452320b0cd442320b8015a51582320b08d44235920b0ed51582320b04d44
235920b0042651582320b00d44235921212d2c20204518684420b0016020
45b04676688a4560442d2c01b10b0a432343650a2d2c00b10a0b4323430b
2d2c00b0282370b101283e01b0282370b10228453ab10200080d2d2c2045
b00325456164b050515845441b2121592d2c2045b0004360442d2c01b006
43b00743650a2d2c2069b04061b0008b20b12cc08a8cb8100062602b0c64
2364615c58b00361592d2c8a03458a8a87b0112bb0292344b0297ae4182d
2c4565b02c234445b02b23442d2c4b525845441b2121592d2c01b0052510
23208af500b0016023edec2d2c01b005251023208af500b0016123edec2d
2c01b0062510f500edec2d2c20b001600110203c003c2d2c20b001610110
203c003c2d2c00b00743b006430b2d2c21210c6423648bb84000622d2c21
b08051580c6423648bb82000621bb200402f2b59b002602d2c21b0c05158
0c6423648bb81555621bb200802f2b59b002602d2c0c6423648bb8400062
6023212d2c4523456023456023456023766818b08062202d2cb00426b004
26b00425b0042545234520b003266062636820b0032661658a2344442d2c
2045b0005458b040442045b04061441b2121592d2c45b1302f4523456160
b0016069442d2c4b5158b02f2370b01423421b2121592d2c4b515820b003
2545695358441b2121591b2121592d2c45b01443b0006063b0016069442d
2cb02f45442d2c452320458a60442d2c45234560442d2c4b235158b90033
ffe0b134201bb3330034005944442d2cb0164358b00326458a586466b01f
601b64b020606620581b21b04059b001615923586559b02923442310b029
e01b2121212121592d2cb0164358b004254564b020606620581b21b04059
b0016123586559b0292344b00425b00725082058021b0359b0052510b004
252046b0042523423cb0072510b006252046b00425b0016023423c205801
1b0059b0052510b00425b029e0b0072510b00625b029e0b00425b0072508
2058021b0359b00425b003254348b00625b00325b0016043481b21592121
21212121212d2cb0164358b004254564b020606620581b21b04059b00161
23581b6559b0292344b00525b00825082058021b0359b0042510b0052520
46b0042523423cb00425b0072508b0072510b006252046b00425b0016023
423c2058011b0059b0042510b00525b029e0b02920456544b0072510b006
25b029e0b00525b00825082058021b0359b00525b003254348b00425b007
2508b00625b00325b0016043481b2159212121212121212d2c02b0042520
2046b004252342b0052508b003254548212121212d2c02b0032520b00425
08b0022543482121212d2c452320451820b00050205823652359236820b0
40505821b04059235865598a60442d2c4b53234b515a5820458a60441b21
21592d2c4b545820458a60441b2121592d2c4b53234b515a58381b212159
2d2cb000214b5458381b2121592d2cb002435458b0462b1b21212121592d
2cb002435458b0472b1b212121592d2cb002435458b0482b1b2121212159
2d2cb002435458b0492b1b212121592d2c208a08234b538a4b515a582338
1b2121592d2c0020b200400325b0062649618b3812342d2c014623466023
466123201020468a61b8ff80628ab140408a704560683a2d2c208a234964
8a2353583c1b21592d2c4b52587d1b7a592d2cb012004b014b54422d2cb1
020042b123018851b1400188535a58b910000020885458b2020102436042
59b12401885158b920000040885458b2020202436042b12401885458b202
2002436042004b014b5258b2020802436042591bb940000080885458b202
040243604259b94000008063b80100885458b202080243604259b9400001
0063b80200885458b202100243604259b94000020063b80400885458b202
400243604259595959592d2c451868234b51582320452064b04050587c59
688a6059442d2cb00016b00225b0022501b001233e00b002233eb1010206
0cb00a236542b00b234201b001233f00b002233fb10102060cb006236542
b0072342b00116012d2c20b82000628a6023622d2cb0072558001b0159b0
042510b00325b0022520b8ffff545821cd1bed5921b006255cb006255a58
b0092b5920b005254ab0042547b004254760b0062547b0806361b00225b0
005558b00325b00725496359b0082558001b0159b00425b0062549b00925
5cb009255a58b0092b59b0072546b0806361b0032520b0005558631b2159
612320b0005558b080631b21b08059b0592bb006255c586959b004252020
10b00048233ab0062658001b0159b0052658b003252f598a12233221212d
2cb00625b00a2587b00625b009254ab0005358b00625b00a251bb00925b0
072559b00225b00225070cb005256323b00625636020b940000400635358
21b00426b00426b00a1bb94000040063655158b0042665b0042665b00a1b
b00426b00426b000b00325b003250b0d0ab0092eb00725b007250b0d0ab0
0b2eb00525b0052507595920b0005558b00525b0052587b00725b007250b
b0092510b00b25b0092620b8ffff545821cd1bed59b00525b0052507b008
25b00b254923b00625b0062587b00a2510b00b25c15920b00051b8005223
78b00161b00225b00725b0072507b00a25b00d254961b08062b00525b005
250bb00a252338b00625b0062587b00825b008250bb00a2510b00b25c4b0
0625b0062507b00925b00c2549b0032554b8ffa723792121212121212121
212121212d2c23b0005458b9400000001bb900004000598ab0005458b940
0000001bb90000400059b05b2b2d2c08b0005458b9400000001bb9000040
00590db05b2b2d2c8a8a080d8ab0005458b9400000001bb90000400059b0
5b2b2d2cb00426b00426080db00426b00426080db05b2b2d2c204569442d
0000000100000005e147b1b0afba5f0f3cf50019080000000000bbeb7ccc
00000000d219014cfbfafd8b09ec08360000000900020000000000000001
00000600fe0001c40aa0fbfafaa009ec0001000000000000000000000000
000001b6040e0000040e0000040e000001cf000001cf000001cf000001cf
000001cf000001cf000001cf000001cf000001cf000001cf000001cf0000
01cf000001cf000001cf000001cf00000444006104440061044400610444
0061044400610444006104ec00ac04ec00ac04ec00ac04ec00ac04ec00ac
04ec00ac04ec00ac04ec00ac04ec00ac04ec00ac04ec00ac04ec00ac04ec
00ac04ec00ac04ec00ac04ec00ac04ec00ac04ec00ac04ec00ac04ec00ac
04fc00ac04fc00ac04fc00ac04fc00ac04fc00ac04fc00ac04fc00ac04fc
00ac04fc00ac04fc00ac04fc00ac04fc00ac04fc00ac04fc00ac04fc00ac
04fc00ac04fc00ac04fc00ac04fc00ac04fc00ac04fc00ac04fc00ac04fc
00ac04fc00ac04fc00ac04fc00ac04fc00ac04fc00ac04fc00ac04fc00ac
04fc00ac04fc00ac04fc00ac04fc00ac04fc00ac04fc00ac04fc00ac04fc
00ac04fc00ac04fc00ac04fc00ac04fc00ac04fc00ac04fc00ac04fc00ac
05620063045800ac045800ac045800ac045800ac045800ac045800ac0458
00ac045800ac045800ac045800ac045800ac045800ac045800ac045800ac
052200aa052200aa052200aa052200aa052200aa052200aa052200aa0522
00aa052200aa052200aa052200aa052200aa052200aa052200aa052200aa
052200aa052200aa052200aa052200aa052200aa052200aa052200aa0522
00aa052200aa052200aa052200aa052200aa052200aa052200aa052200aa
052200aa052200aa052200aa052200aa052200aa052200aa052200aa0522
00aa052200aa052200aa052200aa052200aa052200aa052200aa052200aa
052200aa052200aa052200aa052200aa052200aa052200aa052200aa0522
00aa052200aa052200aa052200aa052200aa052200aa052200aa052200aa
052200aa052200aa052200aa052200aa052200aa052200aa052200aa0522
00aa052200aa052200aa052200aa052200aa052200aa052200aa052200aa
052200aa052200aa052200aa052200aa052200aa052200aa052200aa0522
00aa052200aa052200aa052200aa052200aa052200aa052200aa052200aa
052200aa052200aa052200aa052200aa052200aa052200aa052200aa0522
00aa052200aa052200aa052200aa052200aa052200aa052200aa052200aa
052200aa052200aa052200aa052200aa052200aa052200aa052200aa0522
00aa052200aa052200aa052200aa052200aa052200aa052200aa052200aa
052200aa052200aa052200aa052200aa052200aa052200aa052200aa0522
00aa052200aa052200aa052200aa052200aa052200aa052200aa052200aa
052200aa052200aa052200aa052200aa052200aa052200aa052200aa0522
00aa052200aa052200aa052200aa052200aa052200aa052200aa052200aa
052200aa052200aa052200aa052200aa03d5005c03d5005c03d5005c03d5
005c03d5005c03d5005c03d5005c03d5005c03d5005c03d5005c03d5005c
03d5005c03d5005c03d5005c03d5005c03d5005c03d5005c03d5005c03d5
005c03d5005c03d5005c03d5005c03d5005c03d5005c03d5005c03d5005c
03d5005c03d5005c03fb005d03fb005d03fb005d03fb005d03fb005d03fb
005d03fb005d03fb005d03fb005d03fb005d03fb005d03fb005d03fb005d
03fb005d03fb005d03fb005d03fb005d03fb005d03fb005d03fb005d03fb
005d03fb005d03fb005d03fb005d03fb005d03fb005d03fb005d03fb005d
03fb005d03fb005d03fb005d03fb005d03fb005d03fb005d03fb005d03fb
005d03fb005d03fb005d03fb005d03fb005d03fb005d03fb005d03fb005d
03fb005d03fb005d03fb005d03fb005d03fb005d03fb005d03fb005d03fb
005d03fb005d03fb005d03fb005d03fb005d03fb005d03fb005d03fb005d
03fb005d03fb005d03fb005d03fb005d03fb005d03fb005d03fb005d03fb
005d03fb005d03fb005d03fb005d03fb005d03fb005d03fb005d03fb005d
03fb005d03fb005d03fb005d03fb005d03fb005d03fb005d03fb005d03fb
005d03fb005d03fb005d03fb005d03fb005d03fb005d03fb005d03fb005d
043400990434009904340099043400990434009904340099043400990434
009904340099043400990434009904340099043400990434009904340099
0434009904340099043400990434009904340099043400990434009902ca
009902ca009902ca009902ca009903210051032100510321005103210051
03210051032100510321005103210051032100510321005102ae002102ae
002102ae002102ae002102ae002102ae002102ae002102ae002102ae0021
02ae002102ae002102ae002102ae002102ae002102ae002102ae002102ae
002102ae002102ae002102ae002102ae002102ae002102ae002102ae0021
02ae002102ae002102ae002104340094000000a100a100a100a100a100a1
00a100a100a100a100a100a100a100a100a100a100a100a1011e011e011e
011e011e011e018b018b018b018b018b018b018b018b018b018b018b018b
018b018b018b018b018b018b018b018b022b022b022b022b022b022b022b
022b022b022b022b022b022b022b022b022b022b022b022b022b022b022b
022b022b022b022b022b022b022b022b022b022b022b022b022b022b022b
022b022b022b022b022b022b022b022b02c6037103710371037103710371
0371037103710371037103710371037103fc03fc03fc03fc03fc03fc03fc
03fc03fc03fc03fc03fc03fc03fc03fc03fc03fc03fc03fc03fc03fc03fc
03fc03fc03fc03fc03fc03fc03fc03fc03fc03fc03fc03fc03fc03fc03fc
03fc03fc03fc03fc03fc03fc03fc03fc03fc03fc03fc03fc03fc03fc03fc
03fc03fc03fc03fc03fc03fc03fc03fc03fc03fc03fc03fc03fc03fc03fc
03fc03fc03fc03fc03fc03fc03fc03fc03fc03fc03fc03fc03fc03fc03fc
03fc03fc03fc03fc03fc03fc03fc03fc03fc03fc03fc03fc03fc03fc03fc
03fc03fc03fc03fc03fc03fc03fc03fc03fc03fc03fc03fc03fc03fc03fc
03fc03fc03fc03fc03fc03fc03fc03fc03fc03fc03fc03fc03fc03fc03fc
03fc03fc03fc03fc03fc03fc03fc03fc03fc03fc03fc03fc03fc03fc03fc
03fc03fc03fc03fc03fc03fc03fc03fc03fc03fc03fc03fc04ab04ab04ab
04ab04ab04ab04ab04ab04ab04ab04ab04ab04ab04ab04ab04ab04ab04ab
04ab04ab04ab04ab04ab04ab04ab04ab04ab04ab054c054c054c054c054c
054c054c054c054c054c054c054c054c054c054c054c054c054c054c054c
054c054c054c054c054c054c054c054c054c054c054c054c054c054c054c
054c054c054c054c054c054c054c054c054c054c054c054c054c054c054c
054c054c054c054c054c054c054c054c054c054c054c054c054c054c054c
054c054c054c054c054c054c054c054c054c054c054c054c054c054c054c
054c054c054c054c054c054c054c054c05dd05dd05dd05dd05dd05dd05dd
05dd05dd05dd05dd05dd05dd05dd05dd05dd05dd05dd05dd05dd05dd05dd
0656065606560656071c071c071c071c071c071c071c071c071c071c0798
079807980798079807980798079807980798079807980798079807980798
079807980798079807980798079807980798079807980828082808280828
082808280828082808280828082808280828082808280828082808280828
082808280828082808280828082808280828082808280828082808280828
082808280828082808280828082808280828082808280828082808280828
082808280828082808280828082808280828082808280828082808280828
082808280828082808280828082808280828082808280828082808280828
082808280828082808280828082808280828082808280828082808280828
082808280828082808280828082808280828082808280828082808280828
082808280828082808280828082808280828082808280828082808280828
082808280828082808280828082808280828082808280828082808280828
082808280828082808280828082808280828082808280828082808280828
082808280828082808280828082808280828082808280828082808280828
082808280828082808280828082808280828082808280828082808280828
082808280828082808280828082808280828082808280828082808280828
082808280828082808280828082808280828082808280828082808280828
082808280828082808280828082808280828082808280828082808280828
082808280828082808280828082808280828082808280828082808280828
082808280828082808280828082808280828082808280828082808280828
082808280828082808280828082808280828082808280828082808280828
082808280828082808280828082808280828082808280828082808280828
082808280828082808280828082808280828082808280828082808280828
082808280828082808280828082808280828082808280828082808280828
082808280828082808280828082808280828082808280828082808280828
082808280828082808280828082808280828082808280828082808280828
082808280828082808280828082808280828082808280828082808280828
082808280828082808280828082808280828082808280828082808280828
082808280828082808280828082808280828082808280828082808280828
082808280828082808280828082808280828082808280828082808280828
082808280828082808280828082808280828082808280828082808280828
082808280828082808280828082808280828082808280828082808280828
082808280828082808280828082808280828082808280828082808280828
082808280828082808280828082808280828082808280828082808280828
082808280828082808280828082808280828082808280828082808280828
082808280828082808280828082808280828082808280828082808280828
082808280828082808280828082808280828082808280828082808280828
082808280828082808280828082808280828082808280828082808280828
082808280828082808280828082808280828082808280828082808280828
082808280828082808280828082808280828082808280828082808280828
082808280828082808280828082808280828082808280828082808280828
082808280828082808280828082808280828082808280828082808280828
082808280828082808280828082808280828082808280828082808280828
082808280828082808280828082808280828082808280828082808280828
082808280828082808280828082808280828082808280828082808280828
082808280828082808280828082808280828082808280828082808280828
082808280828082808280828082808280828082808280828082808280828
082808280828082808280828082808280828082808280828082808280828
082808280828082808280828082808280828082808280828082808280828
082808280828082808280828082808280828082808280828082808280828
082808280828082808280828082808280828082808280828082808280828
082808280828082808280828082808280828082808280828082808280828
082808280828082808280828082808280828082808280828082808280828
082808280828082808280828082808280828082808280828082808280828
082808280828082808280828082808280828082808280828082808280828
082808280828082808280828082808280828082808280828082808280828
082808280828082808280828082808280828082808280828082808280828
082808280828082808280828082808280828082808280828082808280828
082808280828082808280828082808280828082808280828082808280828
082808280828082808280828082808280828082808280828082808280828
082808280828082808280828082808280828082808280828082808280828
082808280828082808280828082808280828082808280828082808280828
082808280828082808280828082808280828082808280828082808280828
082808280828082808280828082808280828082808280828082808280828
082808280828082808280828082808280828082808280828082808280828
082808280828082808280828082808280828082808280828082808280828
082808280828082808280828082808280828082808280828082808280828
082808280828082808280828082808280828082808280828082808280828
082808280828082808280828082808280828082808280828082808280828
082808280828082808280828082808280828082808280828082808280828
082808280828082808280828082808280828082808280828082808280828
082808280828082808280828082808280828082808280828082808280828
082808280828082808280828082808280828082808280828082808280828
082808280828082808280828082808280828082808280828082808280828
082808280828082808280828082808280828082808280828082808280828
082808280828082808280828082808280828082808280828082808280828
082808280828082808280828082808280828082808280828082808280828
082808280828082808280828082808280828082808280828082808280828
082808280828082808280828082808280828082808280828082808280828
082808280828082808280828082808280828082808280828082808280828
082808280828082808280828082808280828082808280828082808280828
082808280828082808280828082808280828082808280828082808280828
082808280828082808280828082808280828082808280828082808280828
082808280828082808280828082808280828082808280828082808280828
082808280828082808280828082808280828082808280828082808280828
082808280828082808280828082808280828082808280828082808280828
082808280828082808280828082808280828082808280828082808280828
082808280828082808280828082808280828082808280828082808280828
082808280828082808280828082808280828082808280828082808280828
082808280828082808280828082808280828082808280828082808280828
082808280828082808280828082808280828082808280828082808280828
082808280828082808280828082808280828082808280828082808280828
082808280828082808280828082808280828082808280828082808280828
082808280828082808280828082808280828082808280828082808280828
082808280828082808280828082808280828082808280828082808280828
082808280828082808280828082808280828082808280828082808280828
082808280828082808280828082808280828082808280828082808280828
082808280828082808280828082808280828082808280828082808280828
082808280828082808280828082808280828082808280828082808280828
082808280828082808280828082808280828082808280828082808280828
082808280828082808280828082808280828082808280828082808280828
082808280828082808280828082808280828082808280828082808280828
082808280828082808280828082808280828082808280828082808280828
082808280828082808280828082808280828082808280828082808280828
082808280828082808280828082808280828082808280828082808280828
082808280828082808280828082808280828082808280828082808280828
082808280828082808280828082808280828082808280828082808280828
082808280828082808280828082808280828082808280828082808280828
082808280828082808280828082808280828082808280828082808280828
082808280828082808280828082808280828082808280828082808280828
082808280828082808280828082808280828082808280828082808280828
082808280828082808280828082808280828082808280828082808280828
082808280828082808280828082808280828082808280828082808280828
082808280828082808280828082808280828082808280828082808280828
082808280828082808280828082808280828082808280828082808280828
082808280828082808280828082808280828082808280828082808280828
082808280828082808280828082808280828082808280828082808280828
082808280828082808280828082808280828082808280828082808280828
082808280828082808280828082808280828082808280828082808280828
082808280828082808280828082808280828082808280828082808280828
082808280828082808280828082808280828082808280828082808280828
082808280828082808280828082808280828082808280828082808280828
082808280828082808280828082808280828082808280828082808280828
082808280828082808280828082808280828082808280828082808280828
082808280828082808280828082808280828082808280828082808280828
082808280828082808280828082808280828082808280828082808280828
082808280828082808280828082808280828082808280828082808280828
082808280828082808280828082808280828082808280828082808280828
082808280828082808280828082808280828082808280828082808280828
082808280828082808280828082808280828082808280828082808280828
082808280828082808280828082808280828082808280828082808280828
082808280828082808280828082808280828082808280828082808280828
082808280828082808280828082808280828082808280828082808280828
082808280828082808280828082808280828082808280828082808280828
082808280828082808280828082808280828082808280828082808280828
082808280828082808280828082808280828082808280828082808280828
082808280828082808280828082808280828082808280828082808280828
082808280828082808280828082808280828082808280828082808280828
082808280828082808280828082808280828082808280828082808280828
082808280828082808280828082808280828082808280828082808280828
082808280828082808280828082808280828082808280828082808280828
082808280828082808280828082808280828082808280828082808280828
082808280828082808280828082808280828082808280828082808280828
082808280828082808280828082808280828082808280828082808280828
082808280828082808280828082808280828082808280828082808280828
082808280828082808280828082808280828082808280828082808280828
082808280828082808280828082808280828082808280828082808280828
082808280828082808280828082808280828082808280828082808280828
082808280828082808280828082808280828082808280828082808280828
082808280828082808280828082808280828082808280828082808280828
082808280828082808280828082808280828082808280828082808280828
082808280828082808280828082808280828082808280828082808280828
082808280828082808280828082808280828082808280828082808280828
082808280828082808280828082808280828082808280828082808280828
082808280828082808280828082808280828082808280828082808280828
082808280828082808280828082808280828082808280828082808280828
082808280828082808280828082808280828082808280828082808280828
082808280828082808280828082808280828082808280828082808280828
082808280828082808280828082808280828082808280828082808280828
082808280828082808280828082808280828082808280828082808280828
082808280828082808280828082808280828082808280828082808280828
082808280828082808280828082808280828082808280828082808280828
082808280828082808280828082808280828082808280828082808280828
082808280828082808280828082808280828082808280828082808280828
082808280828082808280828082808280828082808280828082808280828
082808280828082808280828082808280828082808280828082808280828
082808280828082808280828082808280828082808280828082808280828
082808280828082808280828082808280828082808280828082808280828
082808280828082808280828082808280828082808280828082808280828
082808280828082808280828082808280828082808280828082808280828
082808280828082808280828082808280828082808280828082808280828
082808280828082808280828082808280828082808280828082808280828
082808280828082808280828082808280828082808280828082808280828
082808280828082808280828082808280828082808280828082808280828
082808280828082808280828082808280828082808280828082808280828
082808280828082808280828082808280828082808280828082808280828
082808280828082808280828082808280828082808280828082808280828
082808280828082808280828082808280828082808280828082808280828
082808280828082808280828082808280828082808280828082808280828
082808280828082808280828082808280828082808280828082808280828
082808280828082808280828082808280828082808280828082808280828
082808280828082808280828082808280828082808280828082808280828
082808280828082808280828082808280828082808280828082808280828
082808280828082808280828082808280828082808280828082808280828
082808280828082808280828082808280828082808280828082808280828
082808280828082808280828082808280828082808280828082808280828
082808280828082808280828082808280828082808280828082808280828
082808280828082808280828082808280828082808280828082808280828
082808280828082808280828082808280828082808280828082808280828
082808280828082808280828082808280828082808280828082808280828
082808280828082808280828082808280828082808280828082808280828
082808280828082808280828082808280828082808280828082808280828
082808280828082808280828082808280828082808280828082808280828
082808280828082808280828082808280828082808280828082808280828
082808280828082808280828082808280828082808280828082808280828
082808280828082808280828082808280828082808280828082808280828
082808280828082808280828082808280828082808280828082808280828
082808280828082808280828082808280828082808280828082808280828
082808280828082808280828082808280828082808280828082808280828
082808280828082808280828082808280828082808280828082808280828
082808280828082808280828082808280828082808280828082808280828
082808280828082808280828082808280828082808280828082808280828
082808280828082808280828082808280828082808280828082808280828
082808280828082808280828082808280828082808280828082808280828
082808280828082808280828082808280828082808280828082808280828
082808280828082808280828082808280828082808280828082808280828
082808280828082808280828082808280828082808280828082808280828
082808280828082808280828082808280828082808280828082808280828
082808280828082808280828082808280828082808280828082808280828
082808280828082808280828082808280828082808280828082808280828
082808280828082808280828082808280828082808280828082808280828
082808280828082808280828082808280828082808280828082808280828
082808280828082808280828082808280828082808280828082808280828
082808280828082808280828082808280828082808280828082808280828
082808280828082808280828082808280828082808280828082808280828
082808280828082808280828082808280828082808280828082808280828
082808280828082808280828082808280828082808280828082808280828
082808280828082808280828082808280828082808280828082808280828
082808280828082808280828082808280828082808280828082808280828
082808280828082808280828082808280828082808280828082808280828
082808280828082808280828082808280828082808280828082808280828
082808280828082808280828082808280828082808280828082808280828
082808280828082808280828082808280828082808280828082808280828
082808280828082808280828082808280828082808280828082808280828
082808280828082808280828082808280828082808280828082808280828
082808280828082808280828082808280828082808280828082808280828
082808280828082808280828082808280828082808280828082808280828
082808280828082808280828082808280828082808280828082808280828
082808280828082808280828082808280828082808280828082808280828
082808280828082808280828082808280828082808280828082808280828
082808280828082808280828082808280828082808280828082808280828
082808280828082808280828082808280828082808280828082808280828
08280828082808280828000100000f29009300050045000200020010002f
0065000011902410000100010000002d0222000000030000000000640000
0000000300000001000e00640000000300000002000e0304000000030000
0003002403120000000300000004000e0064000000030000000500180336
0000000300000006000e006400000003000000070076034e000000030000
0008002a000e0000000300000009002003c4000000030000000a02a00064
000000030000000b005603e4000000030000000c002a043a000000030000
000d02980464000000030000000e006c06fc000100000000000000320768
00010000000000010007079a0001000000000002000708ea000100000000
0003001208f100010000000000040007079a0001000000000005000c0903
00010000000000060007079a0001000000000007003b090f000100000000
00080015076f00010000000000090010094a000100000000000a0150079a
000100000000000b002b095a000100000000000c00150985000100000000
000d014c099a000100000000000e00360ae6000300010409000000640000
0003000104090001000e00640003000104090002000e0304000300010409
0003002403120003000104090004000e0064000300010409000500180336
0003000104090006000e006400030001040900070076034e000300010409
0008002a000e0003000104090009002003c4000300010409000a02a00064
000300010409000b005603e4000300010409000c002a043a000300010409
000d02980464000300010409000e006c06fc00a900200032003000310034
0020004d006900630072006f0073006f0066007400200043006f00720070
006f0072006100740069006f006e002e00200041006c006c002000520069
0067006800740073002000520065007300650072007600650064002e0043
0061006c0069006200720069002000690073002000610020006d006f0064
00650072006e002000730061006e00730020007300650072006900660020
00660061006d0069006c0079002000770069007400680020007300750062
0074006c006500200072006f0075006e00640069006e006700730020006f
006e0020007300740065006d007300200061006e006400200063006f0072
006e006500720073002e0020004900740020006600650061007400750072
006500730020007200650061006c0020006900740061006c006900630073
002c00200073006d0061006c006c00200063006100700073002c00200061
006e00640020006d0075006c007400690070006c00650020006e0075006d
006500720061006c00200073006500740073002e00200049007400730020
00700072006f0070006f007200740069006f006e007300200061006c006c
006f00770020006800690067006800200069006d00700061006300740020
0069006e002000740069006700680074006c007900200073006500740020
006c0069006e006500730020006f0066002000620069006700200061006e
006400200073006d0061006c006c0020007400650078007400200061006c
0069006b0065002e002000430061006c0069006200720069002700730020
006d0061006e0079002000630075007200760065007300200061006e0064
00200074006800650020006e006500770020007200610073007400650072
00690073006500720020007400650061006d00200075007000200069006e
0020006200690067006700650072002000730069007a0065007300200074
006f002000720065007600650061006c002000610020007700610072006d
00200061006e006400200073006f00660074002000630068006100720061
0063007400650072002e0052006500670075006c00610072004d00690063
0072006f0073006f00660074003a002000430061006c0069006200720069
00560065007200730069006f006e00200035002e0038003800430061006c
006900620072006900200069007300200061002000740072006100640065
006d00610072006b0020006f006600200074006800650020004d00690063
0072006f0073006f00660074002000670072006f007500700020006f0066
00200063006f006d00700061006e006900650073002e004c007500630028
006100730029002000640065002000470072006f006f0074006800740074
0070003a002f002f007700770077002e006d006900630072006f0073006f
00660074002e0063006f006d002f007400790070006f0067007200610070
00680079002f006300740066006f006e007400730068007400740070003a
002f002f0066006f006e007400660061006200720069006b002e0063006f
006d0059006f00750020006d006100790020007500730065002000740068
0069007300200066006f006e00740020006100730020007000650072006d
006900740074006500640020006200790020007400680065002000450055
004c004100200066006f00720020007400680065002000700072006f0064
00750063007400200069006e002000770068006900630068002000740068
0069007300200066006f006e007400200069007300200069006e0063006c
007500640065006400200074006f00200064006900730070006c00610079
00200061006e00640020007000720069006e007400200063006f006e0074
0065006e0074002e00200059006f00750020006d006100790020006f006e
006c0079002000280069002900200065006d006200650064002000740068
0069007300200066006f006e007400200069006e00200063006f006e0074
0065006e00740020006100730020007000650072006d0069007400740065
0064002000620079002000740068006500200065006d0062006500640064
0069006e00670020007200650073007400720069006300740069006f006e
007300200069006e0063006c007500640065006400200069006e00200074
00680069007300200066006f006e0074003b00200061006e006400200028
006900690029002000740065006d0070006f0072006100720069006c0079
00200064006f0077006e006c006f00610064002000740068006900730020
0066006f006e007400200074006f002000610020007000720069006e0074
006500720020006f00720020006f00740068006500720020006f00750074
007000750074002000640065007600690063006500200074006f00200068
0065006c00700020007000720069006e007400200063006f006e00740065
006e0074002e0068007400740070003a002f002f007700770077002e006d
006900630072006f0073006f00660074002e0063006f006d002f00740079
0070006f006700720061007000680079002f0066006f006e00740073002f
00640065006600610075006c0074002e0061007300700078a92032303134
204d6963726f736f667420436f72706f726174696f6e2e20416c6c205269
676874732052657365727665642e43616c696272692069732061206d6f64
65726e2073616e732073657269662066616d696c79207769746820737562
746c6520726f756e64696e6773206f6e207374656d7320616e6420636f72
6e6572732e204974206665617475726573207265616c206974616c696373
2c20736d616c6c20636170732c20616e64206d756c7469706c65206e756d
6572616c20736574732e204974732070726f706f7274696f6e7320616c6c
6f77206869676820696d7061637420696e2074696768746c792073657420
6c696e6573206f662062696720616e6420736d616c6c207465787420616c
696b652e2043616c696272692773206d616e792063757276657320616e64
20746865206e65772072617374657269736572207465616d20757020696e
206269676765722073697a657320746f2072657665616c2061207761726d
20616e6420736f6674206368617261637465722e526567756c61724d6963
726f736f66743a2043616c6962726956657273696f6e20352e383843616c
6962726920697320612074726164656d61726b206f6620746865204d6963
726f736f66742067726f7570206f6620636f6d70616e6965732e4c756328
6173292064652047726f6f74687474703a2f2f7777772e6d6963726f736f
66742e636f6d2f7479706f6772617068792f6374666f6e7473687474703a
2f2f666f6e7466616272696b2e636f6d596f75206d617920757365207468
697320666f6e74206173207065726d697474656420627920746865204555
4c4120666f72207468652070726f6475637420696e207768696368207468
697320666f6e7420697320696e636c7564656420746f20646973706c6179
20616e64207072696e7420636f6e74656e742e20596f75206d6179206f6e
6c792028692920656d626564207468697320666f6e7420696e20636f6e74
656e74206173207065726d69747465642062792074686520656d62656464
696e67207265737472696374696f6e7320696e636c7564656420696e2074
68697320666f6e743b20616e6420286969292074656d706f726172696c79
20646f776e6c6f6164207468697320666f6e7420746f2061207072696e74
6572206f72206f74686572206f75747075742064657669636520746f2068
656c70207072696e7420636f6e74656e742e687474703a2f2f7777772e6d
6963726f736f66742e636f6d2f7479706f6772617068792f666f6e74732f
64656661756c742e617370780000b2090320b80284b40918014a20b80283
b40918014a20b80282b40918014a20b80281b40918014a20b80280b40918
014a20b8027fb40918014a20b8027eb40918014a20b8027db40918014a20
b8027cb40918014a20b8027bb40918014a20b8027ab40918014a20b80279
b40918014a20b80278b40918014a20b80277b40918014a20b80276b40918
014a20b80275b40918014a20b80274b40918014a20b80273b40918014a20
b80271b40918014a20b80270b40918014a20b8026fb40918014a20b8026e
b40918014a20b8026db40918014a20b8026cb40918014a20b8026bb40918
014a20b8026ab40918014a20b80269b40918014a20b80268b40918014a20
b80267b40918014a20b80266b40918014a20b80265b40918014a20b80264
b40918014a20b80263b40918014a20b80262b40918014a20b80261b40918
014a20b80260b40918014a20b8025fb40918014a20b8025eb40918014a20
b8025db40918014a20b8025cb40918014a20b8025bb40918014a20b8025a
b40918014a20b80259b40918014a20b80258b40918014a20b80257b40918
014a20b80256b40918014a20b80255b40918014a20b80254b40918014a20
b80253b40918014a20b80252b40918014a20b80251b40918014a20b80250
b40918014a20b8024fb40918014a20b8024eb40918014a20b8024db40918
014a20b8024cb40918014a20b8024bb40918014a20b8024ab40918014a20
b80249b40918014a20b80248b40918014a20b80247b40918014a20b80246
b40918014a20b80245b40918014a20b80244b40918014a20b80243b40918
014a20b80242b40918014a20b80241b40918014a20b80240b40918014a20
b8023fb40918014a20b8023eb40918014a20b8023db40918014a20b8023c
b40918014a20b8023bb40918014a20b8023ab40918014a20b80239b40918
014a20b80238b40918014a20b80237b40918014a20b80236b40918014a20
b80235b40918014a20b80234b40918014a20b80233b40918014a20b80232
b40918014a20b80231b40918014a20b80230b40918014a20b8022fb40918
014a20b8022eb40918014a20b8022db40918014a20b8022cb40918014a20
b8022bb40918014a20b8022ab40918014a20b80229b40918014a20b80228
b40918014a20b80227b40918014a20b80226b40918014a20b80225b40918
014a20b80224b40918014a20b80223b40918014a20b80222b40918014a20
b80221b40918014a20b80220b40918014a20b8021fb40918014a20b8021e
b40918014a20b8021db40918014a20b8021cb40918014a20b8021bb40918
014a20b8021ab40918014a20b80219b40918014a20b80218b40918014a20
b80217b40918014a20b80216b40918014a20b80215b40918014a20b80214
b40918014a20b80213b40918014a20b80212b40918014a20b80211b40918
014a20b80210b40918014a20b8020fb40918014a20b8020eb40918014a20
b8020db40918014a20b8020cb40918014a20b8020bb40918014a20b8020a
b40918014a20b80209b40918014a20b80208b40918014a20b80207b40918
014a20b80206b40918014a20b80205b40918014a20b80204b40918014a20
b80203b40918014a20b80202b40918014a20b80201b40918014a20b80200
b40918014a20b801ffb40918014a20b801feb40918014a20b801fdb40918
014a20b801fcb40918014a20b801fbb40918014a20b801fab40918014a20
b801f9b40918014a20b801f8b40918014a20b801f7b40918014a20b801f6
b40918014a20b801f5b40918014a20b801f4b40918014a20b801f3b40918
014a20b801f2b40918014a20b801f1b40918014a20b801f0b40918014a20
b801efb40918014a20b801eeb40918014a20b801edb40918014a20b801ec
b40918014a20b801ebb40918014a20b801eab40918014a20b801e9b40918
014a20b801e8b40918014a20b801e7b40918014a20b801e6b40918014a20
b801e5b40918014a20b801e4b40918014a20b801e3b40918014a20b801e2
b40918014a20b801e1b40918014a20b801e0b40918014a20b801dfb40918
014a20b801deb40918014a20b801ddb40918014a20b801dcb40918014a20
b801dbb40918014a20b801dab40918014a20b801d9b40918014a20b801d8
b40918014a20b801d7b40918014a20b801d6b40918014a20b801d5b40918
014a20b801d4b40918014a20b801d3b40918014a20b801d2b40918014a20
b801d1b40918014a20b801d0b40918014a20b801cfb40918014a20b801ce
b40918014a20b801cdb40918014a20b801ccb40918014a20b801cbb40918
014a20b801cab40918014a20b801c9b40918014a20b801c8b40918014a20
b801c7b40918014a20b801c6b40918014a20b801c5b40918014a20b801c4
b40918014a20b801c3b40918014a20b801c2b40918014a20b801c1b40918
014a20b801c0b40918014a20b801bfb40918014a20b801beb40918014a20
b801bdb40918014a20b801bcb40918014a20b801bbb40918014a20b801ba
b40918014a20b801b9b40918014a20b801b8b40918014a20b801b7b40918
014a20b801b6b40918014a20b801b5b40918014a20b801b4b40918014a20
b801b3b40918014a20b801b2b40918014a20b801b1b40918014a20b801b0
b40918014a20b801afb40918014a20b801aeb40918014a20b801adb40918
014a20b801acb40918014a20b801abb40918014a20b801aab40918014a20
b801a9b40918014a20b801a8b40918014a20b801a7b40918014a20b801a6
b40918014a20b801a5b40918014a20b801a4b40918014a20b801a3b40918
014a20b801a2b40918014a20b801a1b40918014a20b801a0b40918014a20
b8019fb40918014a20b8019eb40918014a20b8019db40918014a20b8019c
b40918014a20b8019bb40918014a20b8019ab40918014a20b80199b40918
014a20b80198b40918014a20b80197b40918014a20b80196b40918014a20
b80195b40918014a20b80194b40918014a20b80193b40918014a20b80192
b40918014a20b80191b40918014a20b80190b40918014a20b8018fb40918
014a20b8018eb40918014a20b8018db40918014a20b8018cb40918014a20
b8018bb40918014a20b8018ab40918014a20b80189b40918014a20b80188
b40918014a20b80187b40918014a20b80186b40918014a20b80185b40918
014a20b80184b40918014a20b80183b40918014a20b80182b40918014a20
b80181b40918014a20b80180b40918014a20b8017fb40918014a20b8017e
b40918014a20b8017db40918014a20b8017cb40918014a20b8017bb40918
014a20b8017ab40918014a20b80179b40918014a20b80178b40918014a20
b80177b40918014a20b80176b40918014a20b80175b40918014a20b80174
b40918014a20b80173b40918014a20b80172b40918014a20b80171b40918
014a20b80170b40918014a20b8016fb40918014a20b8016eb40918014a20
b8016db40918014a20b8016cb40918014a20b8016bb40918014a20b8016a
b40918014a20b80169b40918014a20b80168b40918014a20b80167b40918
014a20b80166b40918014a20b80165b40918014a20b80164b40918014a20
b80163b40918014a20b80162b40918014a20b80161b40918014a20b80160
b40918014a20b8015fb40918014a20b8015eb40918014a20b8015db40918
014a20b8015cb40918014a20b8015bb40918014a20b8015ab40918014a20
b80159b40918014a20b80158b40918014a20b80157b40918014a20b80156
b40918014a20b80155b40918014a20b80154b40918014a20b80153b40918
014a20b80152b40918014a20b80150b40918014a20b8014fb40918014a20
b8014eb40918014a20b8014cb40918014a20b8014bb40918014a20b8014a
b40918014a20b80149b40918014a20b80148b40918014a20b80147b40918
014a20b80146b40918014a20b80145b40918014a20b80144b40918014a20
b80143b30918014ab80284b21e3e1fb80283b21e151fb80282b21e3e1fb8
0281b21e3a1fb80280b21e3e1fb8027fb21e3e1fb8027eb21e0c1fb8027d
b21e3e1fb8027cb21e3e1fb8027bb21e3e1fb8027ab21e3e1fb80279b21d
411fb80278b21d431fb80277b21d431fb80276b21d431fb80275b21d411f
b80274b21d431fb80273b21d431fb80272b21d411fb80271b21d421fb802
70b21d421fb8026fb21d421fb8026eb21d431fb8026db21d431fb8026cb2
1d431fb8026bb21c451fb8026ab21c451fb80269b21c451fb80268b21c45
1fb80267b21c451fb80266b21c441fb80265b21c451fb80264b21c451fb8
0263b21c451fb80262b21c451fb80261b21c451fb80260b21c451fb8025f
b21c451fb8025eb21c441fb8025db21c451fb8025cb21c451fb8025bb21c
451fb8025ab21c451fb80259b21c451fb80258b21c451fb80257b21c451f
b80256b21c451fb80255b21c451fb80254b21c451fb80253b21c451fb802
52b21c451fb80251b21c451fb80250b21c451fb8024fb21c451fb8024eb2
1c451fb8024db21c451fb8024cb21c451fb8024bb21c451fb8024ab21b49
1fb80249b21b491fb80248b21b4a1fb80247b21b4a1fb80246b21b4b1fb8
0245b21b4c1fb80244b21b4c1fb80243b21b4c1fb80242b21b4b1fb80241
b21b491fb80240b21b491fb8023fb21b4a1fb8023eb21b4a1fb8023db21b
4a1fb8023cb21b4b1fb8023bb21b4b1fb8023ab21b4c1fb80239b21b4c1f
b80238b21b4c1fb80237b21b4c1fb80236b21b4c1fb80235b21b491fb802
34b21b491fb80233b21b4a1fb80232b21b4a1fb80231b21b4a1fb80230b2
1b4b1fb8022fb21b4b1fb8022eb21b4c1fb8022db21b4c1fb8022cb21b4c
1fb8022bb21b4c1fb8022ab21b4c1fb80229b21b4c1fb80228b21b4c1fb8
0227b21b491fb80226b21b491fb80225b21b4a1fb80224b21b4a1fb80223
b21b4a1fb80222b21b4b1fb80221b21b4b1fb80220b21b4c1fb8021fb21b
4c1fb8021eb21b4c1fb8021db21b4c1fb8021cb21b4c1fb8021bb21b4c1f
b8021ab21a4e1fb80219b21a4e1fb80218b21a4f1fb80217b21a4f1fb802
16b21a4e1fb80215b21a4e1fb80214b21a4f1fb80213b21a4f1fb80212b2
1a4f1fb80211b21a4e1fb80210b21a4e1fb8020fb21a4f1fb8020eb21a4f
1fb8020db21a4f1fb8020cb21a4e1fb8020bb21a4e1fb8020ab21a4e1fb8
0209b21a4f1fb80208b21a4f1fb80207b21a4f1fb80206b219501fb80205
b219511fb80204b219511fb80203b219501fb80202b219511fb80201b219
511fb80200b219511fb801ffb219511fb801feb219501fb801fdb219511f
b801fcb219511fb801fbb219511fb801fab219501fb801f9b219511fb801
f8b219511fb801f7b219511fb801f6b219511fb801f5b218541fb801f4b2
18531fb801f3b218541fb801f2b218541fb801f1b218541fb801f0b21853
1fb801efb218541fb801eeb218541fb801edb218541fb801ecb218531fb8
01ebb218531fb801eab218541fb801e9b218541fb801e8b218541fb801e7
b218541fb801e6b218531fb801e5b218541fb801e4b218531fb801e3b218
541fb801e2b218541fb801e1b218541fb801e0b218531fb801dfb218531f
b801deb218541fb801ddb218541fb801dcb218541fb801dbb218541fb801
dab218531fb801d9b218541fb801d8b218541fb801d7b217571fb801d6b2
17561fb801d5b217561fb801d4b217571fb801d3b217571fb801d2b21757
1fb801d1b217571fb801d0b217561fb801cfb217561fb801ceb217571fb8
01cdb217571fb801ccb217571fb801cbb217571fb801cab217561fb801c9
b217561fb801c8b217571fb801c7b217571fb801c6b217571fb801c5b217
571fb801c4b217571fb801c3b217561fb801c2b217571fb801c1b217571f
b801c0b217571fb801bfb217561fb801beb217561fb801bdb217571fb801
bcb217571fb801bbb217571fb801bab217571fb801b9b217571fb801b8b2
17561fb801b7b217571fb801b6b217571fb801b5b217571fb801b4b21757
1fb801b3b2163f1fb801b2b2165b1fb801b1b2165b1fb801b0b2165b1fb8
01afb2165b1fb801aeb2165b1fb801adb2165b1fb801acb2165b1fb801ab
b2165b1fb801aab2163e1fb801a9b2163f1fb801a8b2163f1fb801a7b216
5b1fb801a6b2165b1fb801a5b2165b1fb801a4b2165b1fb801a3b2165b1f
b801a2b2165b1fb801a1b2165b1fb801a0b2165b1fb8019fb2163e1fb801
9eb2163f1fb8019db2163f1fb8019cb2165b1fb8019bb2165b1fb8019ab2
165b1fb80199b2165b1fb80198b2163e1fb80197b2165b1fb80196b2165b
1fb80195b2165b1fb80194b2163e1fb80193b2163f1fb80192b2163f1fb8
0191b2165b1fb80190b2165b1fb8018fb2165b1fb8018eb2165b1fb8018d
b2165b1fb8018cb2163f1fb8018bb2165b1fb8018ab2165b1fb80189b216
5b1fb80188b2165b1fb80187b2165b1fb80186b215611fb80185b215621f
b80184b215621fb80183b215661fb80182b215661fb80181b215551fb801
80b215451fb8017fb215361fb8017eb215361fb8017db215611fb8017cb2
15621fb8017bb215621fb8017ab215641fb80179b215661fb80178b21566
1fb80177b215661fb80176b215661fb80175b215661fb80174b215661fb8
0173b215451fb80172b215621fb80171b215621fb80170b215631fb8016f
b215641fb8016eb215661fb8016db215661fb8016cb215661fb8016bb215
661fb8016ab215661fb80169b215621fb80168b215621fb80167b215611f
b80166b215641fb80165b215641fb80164b215661fb80163b215661fb801
62b215661fb80161b215661fb80160b215661fb8015fb215661fb8015eb2
15551fb8015db215451fb8015cb215451fb8015bb215361fb8015ab21561
1fb80159b215621fb80158b215621fb80157b215631fb80156b215641fb8
0155b215661fb80154b215661fb80153b215661fb80152b215661fb80151
b214401fb80150b214551fb8014fb214561fb8014eb214831fb8014db214
2d1fb8014cb214401fb8014bb214401fb8014ab214411fb80149b214401f
b80148b214401fb80147b214411fb80146b2147e1fb80145b214871fb801
44b2147f1fb80143b214801fb80142b212461fb80141b212461fb80140b2
12461fb8013fb212461fb8013eb212441fb8013db212461fb8013cb21159
1fb8013bb211591fb8013ab2115b1fb80139b2115b1fb80138b211471fb8
0137b211581fb80136b2115a1fb80135b2115b1fb80134b2115b1fb80133
b2112c1fb80132b211471fb80131b211551fb80130b211571fb8012fb211
571fb8012eb211581fb8012db211591fb8012cb211591fb8012bb2115a1f
b8012ab2115a1fb80129b2115b1fb80128b2115b1fb80127b2115b1fb801
26b2115b1fb80125b211561fb80124b211561fb80123b211571fb80122b2
11581fb80121b211591fb80120b2115a1fb8011fb2115a1fb8011eb2115b
1fb8011db2115b1fb8011cb2115b1fb8011bb2115b1fb8011ab2115b1fb8
0119b2105d1fb80118b2105e1fb80117b2105f1fb80116b2105f1fb80115
b2105f1fb80114b2105f1fb80113b2105f1fb80112b2105d1fb80111b210
5e1fb80110b2105f1fb8010fb2105f1fb8010eb2105f1fb8010db2105f1f
b8010cb2105d1fb8010bb2105e1fb8010ab2105f1fb80109b2105f1fb801
08b2105f1fb80107b2105f1fb80106b2105d1fb80105b2105e1fb80104b2
105f1fb80103b2105f1fb80102b2105f1fb80101b2105f1fb8010040ff0f
621fff0f621ffe0f631ffd0f641ffc0f621ffb0f621ffa0f621ff90f631f
f80f641ff70f641ff60f641ff50f641ff40f621ff30f621ff20f631ff10f
641ff00f641fef0f641fee0f641fed0f621fec0f621feb0f631fea0f641f
e90f641fe80f641fe70f641fe60e671fe50e681fe40e681fe30e681fe20e
681fe10e671fe00e681fdf0e681fde0e681fdd0e671fdc0e681fdb0e681f
da0e681fd90e681fd80d6b1fd70d311fd60d6b1fd50d6c1fd40d261fd30d
261fd20d6c1fd10d2b1fd00d2b1fcf0d2b1fce0d6b1fcd0d6c1fcc0d6d1f
cb0d6b1fca0d6c1fc90d6d1fc80d6a1fc70d691fc60d681fc50d671fc40d
261fc30d311fc20d311fc10d311f40ffc00d311fbf0d311fbe0d311fbd0c
711fbc0c721fbb0c731fba0c741fb90c741fb80c741fb70c711fb60c711f
b50c721fb40c731fb30c741fb20c741fb10c741fb00c741faf0b791fae0b
7a1fad0b7c1fac0b7d1fab0b7e1faa0b7e1fa90b7e1fa80b7e1fa70b7e1f
a60b7e1fa50b2d1fa40b7e1fa30b7e1fa20b791fa10b7e1fa00b6b1f9f0b
791f9e0b7e1f9d0b7e1f9c0b791f9b0b7a1f9a0b7c1f990b7d1f980b7e1f
970b7e1f960b7e1f950b7e1f940b7e1f930b7e1f920b6b1f910b2d1f900a
4e1f8f0a4f1f8e0a671f8d0aa51f8c0aa71f8503251f8403381f8301381f
8255805581ab80557f557d557eab7d550b7d010b7d1b7d4b7d7b7dab7ddb
7d4012060a7c557a557bab7a557955775578ab7755ba028600660285403c
5576ab755504751475747503f47501ab7501447501307501020075107520
75030c7455725573ab7255007250728072b072043bb072e072020072010a
b8ffc0b3721b1e46b8ffc0407c720d104671556f5570ab6f556e666d556a
03251f6938675568ab67556638645565ab645563386255613860555f385d
555eab5d555c385a555bab5a55593858555703251f5638545555ab545553
38515552ab51554f384e554e03251f4d384b554cab4b554a38485549ab48
55473846554503381f001c101c201c0310b8ffc0404e1c1b1e46001b0142
301b401be01bf01b04001bb01bc01b03120f1a1f1a02290f1901434f1901
6f197f198f19030f18cf18024018292c460f17cf17df17ef170413401729
2e460016101620160315b8ffc0b3164d5446b8ffc0b3163f4446b8ffc0b3
16313546b8ffc0404d162326460f15010f151f1502451f15010011e011f0
110315bf10cf10020f0f010f0fff0f02400f3135460f0e1f0e020f0e1f0e
ff0e03400e3137460f0d1f0d020f0d1f0dff0d0316400d313746b8ffc040
270c5054460f0b1f0b02553f0b4f0b02400b3f4346400b2d304600030120
01010001100120010308b8ffc0b301151f46b80100b316010501b80190b1
54532b2b4bb80800524bb008505bb00188b02553b00188b040515ab00688
b000555a5b58b101018e59b101024354b0144b515a58b101018e59858d8d
00421d4bb01d5358b0a01d594bb0805358b0401d594bb0ff5358b0001db1
160042592b5e7375732b2b745e732b2b5e73742b73742b7374745e730175
5e73742b2b2b2b5e732b5e732b7374755e735e735e73755e732b5e73002b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b5e
73755e732b2b5e735f73737373742b2b2b2b2b2b5e73742b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b012b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2bb1000243
545841ff0284006402830064028200640281006402800064027f0064027e
0064027d0064027c0064027b0064027a0064027900640278006402770064
027600640275006402740064027300640271006402700064026f0064026e
0064026d0064026c0064026b0064026a0064026900640268006402670064
02660064026500640264006402630064026200640261006402600064025f
0064025e0064025d0064025c0064025b0064025a00640259006402580064
025700640256006402550064025400640253006402520064025100640250
0064024f0064024e0064024d0064024c0064024b0064024a006402490064
024800640247006402460064024500640244006402430064024200640241
006402400064023f0064023e0064023d0064023c0064023b0064023a0064
023900640238006402370064023600640235006402340064023300640232
00640231006402300064022f0064022e0064022d0064022c0064022b0064
022a00640229006402280064022700640226006402250064022400640223
0064022200640221006402200064021f0064021e0064021d0064021c0064
021b0064021a006402190064021800640217006402160064021500640214
006402130064021200640211006402100064020f0064020e0064020d0064
020c0064020b0064020a0064020900640208006402070064020600640205
0064020441ff00640203006402020064020100640200006401ff006401fe
006401fd006401fc006401fb006401fa006401f9006401f8006401f70064
01f6006401f5006401f4006401f3006401f2006401f1006401f0006401ef
006401ee006401ed006401ec006401eb006401ea006401e9006401e80064
01e7006401e6006401e5006401e4006401e3006401e2006401e1006401e0
006401df006401de006401dd006401dc006401db006401da006401d90064
01d8006401d7006401d6006401d5006401d4006401d3006401d2006401d1
006401d0006401cf006401ce006401cd006401cc006401cb006401ca0064
01c9006401c8006401c7006401c6006401c5006401c4006401c3006401c2
006401c1006401c0006401bf006401be006401bd006401bc006401bb0064
01ba006401b9006401b8006401b7006401b6006401b5006401b4006401b3
006401b2006401b1006401b0006401af006401ae006401ad006401ac0064
01ab006401aa006401a9006401a8006401a7006401a6006401a5006401a4
006401a3006401a2006401a1006401a00064019f0064019e0064019d0064
019c0064019b0064019a0064019900640198006401970064019600640195
00640194006401930064019200640191006401900064018f0064018e0064
018d0064018c0064018b0064018a00640189006401880064018700640186
00640185006441800184006401830064018200640181006401800064017f
0064017e0064017d0064017c0064017b0064017a00640179006401780064
017700640176006401750064017400640173006401720064017100640170
0064016f0064016e0064016d0064016c0064016b0064016a006401690064
016800640167006401660064016500640164006401630064016200640161
006401600064015f0064015e0064015d0064015c0064015b0064015a0064
015900640158006401570064015600640155006401540064015300640152
006401500064014f0064014e0064014c0064014b0064014a006401490064
0148006401470064014600640145006401440064014300642b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b592b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b185f5e00>
[4177 ] AllocGlyphStorage
]def 
124 60 
PrepFor2015
Type42DictEnd

1 0 3 <> HIBBAA+Calibri AddT42Char 
1 322 18 <00010061fff0040c051e00390062b31c003b2bb8ffe8b310014d2bb8fff0
b30f014d2bb8ffecb30d014d2bb8ffeeb30c014d2bb8ffe8b30b014d2bbe
0233000e0018012f00210026012cb2135304bb012a00350030012eb10956
003ffdd4ed3ffdd4ed012fe12b2b2b2b2b10d6c4313025140e0623222e02
35343e0233321e0615140e0223222e0223220e0215141e0233323e023332
1e02040c02050814405f7b497ecb8f4d5396d17f386a5a461b0805030408
0b080e324f714f568d64373563905b4d7351340f070a0603b71018120e14
29271b54a4f19da1fcaf5c15202a1b0e131a12141c1309272f274586c17c
7bbd7f41262f2606111e>HIBBAA+Calibri AddT42Char 
1 572 24 <000200ac0000048f050e0012001f0077401d3f2101131810014d13100f01
4d13140d014d13120c014d13180b014d13bb02320000001affe8b310014d
1ab8fff0b30f014d1ab8fff0b30d014d1ab8fff6b30c014d1ab8ffe8b30b
014d1abb021100090018010cb20e511bb80126b10554003fed3fed012fe1
2b2b2b2b2bd4e12b2b2b2b2b31305d01140e022321222635113436332132
1e0207342e0223231133323e02048f56a5f0a6feee172929170125a8e89d
51b5346faa86afb17caa7239029aa8fba5521f270482271f57a3e89969b5
844afc113e80c100>HIBBAA+Calibri AddT42Char 
1 790 44 <000100acfffa04500514002f00b8b43f3101230cb8ffe8b310014d0cb8ff
f0b30f014d0cb8fff0b30d014d0cb8fff6b30c014d0cb8ffe8b30b014d0c
b80211401c17240b1810014d0b100f014d0b100d014d0b0a0c014d0b180b
014d0bb802104017004015014d004013014d00401011014c00400c014d00
17b8ffc0b315014d17b8ffc0b613014d172a5224b8012c400fc00c01d00c
010c0c121d5212550555003f3f3f12392f5d71ed3f012f2b2bd42b2b2b2b
e12b2b2b2b2b3210e12b2b2b2b2b3231305d25140e0223222e0235112111
140e0223222e023511343e0233321e0215112111343e0233321e02150450
081421181a201408fdb308142119182214080814221819211408024d0814
201a182114081a080c070505070c08023efdc2080c070505070c0804da08
0c070505070c08fdfa0206080c070505070c0800>HIBBAA+Calibri AddT42Char 
1 1110 89 <00020063ff41058705210027003b008e401d0a2112281810014d28100f01
4d28140d014d28120c014d28180b014d28b80232400a00201c301c801c03
1c32b8ffe8b310014d32b8fff0b30f014d32b8ffecb30d014d32b8ffeeb3
0c014d32b8ffe8b30b014d32b80233b412210a0d2db80129b41753250437
b8012bb10d56003fedd4cd3fed123939012fe12b2b2b2b2bd45dc4e12b2b
2b2b2b123939313005140e0223222e0227060623222e0235343e0233321e
0215140e02071e0501342e0223220e0215141e0233323e020587050a0c06
145974843e31966392d58b444a94de948bd38f4813293e2a496e48281408
feac275b987070985f29265a9772719a5e2872171f1106213f5a3c1e2c56
a6f7a09af9af5f56a5f29d519484702d3c43220f132302e06ebc8b4e538d
ba6872bf8c4d548fbd00>HIBBAA+Calibri AddT42Char 
1 1420 90 <000200acfffa040b050e003600440091401e102e1137080b014d37100f01
4d37100c0d014c371810014d37180b014d37b80233b7294010014d293f11
b8fff0b310014d11b8fff0b30f014d11b8fff0b30d014d11b8fff6b30c01
4d11b8ffe8b30b014d11b80211b21c2e10b80108b67040014040173db801
0bb5215117550555003f3f3fed12392f5ded39012fe12b2b2b2b2b32d42b
e12b2b2b2b2b123939313025140e0223222e0227032e03232311140e0223
222e023511343633213216171e0315140e02071e03171316160134262726
2623231133323e02040b0614241e1a21140b0477152d3e543b7309132119
192114082917011331411a4b734e2723425c3920342d2814740e08fefd44
50193f3391a84463421f1a080c08040409100c013134573f23fdd9080c07
0505070c0804ae271f05030d38566f4341674f3a140e2b3c4e31fee3241d
03854c69170706fe4c213b50>HIBBAA+Calibri AddT42Char 
1 1762 104 <000100aaffed04790514002b0099401d602d01201810014d20100f014d20
100d014d200a0c014d20180b014d20b802104011004015014d004013014d
004011014d0016b8ffe8b310014d16b8fff0b30f014d16b8fff0b30d014d
16b8fff6b30c014d16b8ffe8b30b014d16ba0210000affc0b315014d0ab8
ffc0400913014d0a265210521bb80129b10556003fed3f3f012f2b2be12b
2b2b2b2bd42b2b2be12b2b2b2b2b31305d01140e0223222e023511343e02
33321e021511141e0233323e023511343e0233321e021504794580b8756b
b07e440814201a182213082c5375494b75512b081421191821130901de76
b980423e79b6770323080c070505070c08fcf25a86592d2c588257031708
0c070505070c0800>HIBBAA+Calibri AddT42Char 
1 2040 258 <0002005cffed033f03ca0033004000b040200f421f422f42030b0917340c
0c014d34100d014d34180b014d34100f10014c34b801f7400e0027270f00
010c00100f014d003ab8fff0b30c014d3ab8ffe8b30d014d3ab8ffe8b30b
014d3ab8ffe8b40f10014c3ab8020840141117c500341034023bc0340100
340134342e412ab8011b400fd022012222041dea2e4a3ddc0c4d04002f3f
ed3fed12392f5ded1112392f5d715e5ded012fe12b2b2b2bc42b5e5d392f
10e12b2b2b2b323931305e5d25140606232226263535060623222e023534
3e02333335342e0223220e0223222e0235343e0433321e02150723220e02
15141633323637033f101c1b1a1f0e3b91514773512d3e74a8697c16314e
393d6149310c080c0904071b4256663461885426a48d4464421f5950416f
3d180c0c06060c0c5a3f46254666414c704a25463450351b1d231d081019
0f191d1a231d132c557e54c4172d3f2946534244>HIBBAA+Calibri AddT42Char 
1 2390 286 <0002005dffed039903ca002b003400ae402a2f363f366f360313200d014d
13200f014d1313212c100c014d2c180b014d2c100d014d2c100f10014c2c
b801f9b5442ba42b022bb8fff0b50f014d2b3404b8ffe0b30d014d04b8ff
eeb30c014d04b8ffe0b30b014d04b8ffe8b40f10014c04b8020a4021212c
c78004900402c00401d0040104041c2fdc264a18ea600e700e020e09ea1c
4d003ffdd45ded3fed12392f5d7172ed012fe12b2b2b2b32dd2b5de12b2b
2b2b12392f2b2b31305d0114062321141e0233323e0233321e0215140e06
23222e0235343e0233321e021527362623220e020703992719fdb21e4670
514064492f0c070b06030203070b365671406fa7723a3c71a0636a95602d
a60379773d5c3e2202020227214b78562e151a15070e19120d130f0c0b19
18133e7ab87a74b9814544739b581382942e4c653700>HIBBAA+Calibri AddT42Char 
1 2712 374 <00010099fffa03a003ca00320094400f12100b014d13100b014d3f34012a
13b8fff0b310014d13b8fff0b30f014d13b8fff0b30d014d13b8fff6b30c
014d13b8ffe8b30b014d13b801f8401b1e0b1010014d0b100d014d0b100f
014d0b0a0c014d0b180b014d0bb801f8b700400c014d001e10b80106400a
2d4a2a192449194c054c003f3f3f12393fed012f2f2be12b2b2b2b2b10e1
2b2b2b2b2b3931305d002b2b25140e0223222e023511342e022322060711
140e0223222e023511343e0233321e021515363633321e021503a0081220
1819201208182e49303e7c44081220191820130706121c17161d10074c97
4d5a7b4c2119080b080404080b08020f4d5e44245855fd8b080b08040408
0b080384080b090303090b0877554f3d66896000>HIBBAA+Calibri AddT42Char 
1 3002 396 <00010099fffa02a703ca00330063b4703501260fb8fff6b30c014d0fb8ff
e8b30b014d0fb8fff0b40f10014c0fb8fff0b30d014d0fb801f840120040
13014d004011014d00200d014d001a0ab8012540092b4a260f152049154c
003f3f1239393fed012fc42b2b2be12b2b2b2b3931305d01140e0223222e
0223220e020711140e0223222e023511343e0233321e0215153e0333321e
0602a70206090808171d24151930353a23081220191820130706121c1716
1d100725413a391d0d21241d0c0403010362161e1109090908142e4c37fd
b0080b080404080b080384080b090303090b08833644270f03080a0a090e
1b00>HIBBAA+Calibri AddT42Char 
1 3244 400 <00010051ffed02ce03ca004900ce400c2f4b3f4b4f4b7f4baf4b0541b8ff
f0b30d014d41b8fff6b30c014d41b8fff0b30f014d41b8ffc0b313014d41
b8fff0b310014d41b8fff0b30b014d41b801dc401f243224320c1b100d01
4d1b0a0c014d1b1010014d1b100b014d1b100f014d1bba01f60000ffc040
0a0f014d000c400b014d0cb8ffc0402613014d3f0caf0c020c2edd370aeb
115011601170110337113711163cdb411b05294a16e8054d003fed3f1239
39ed1139392f2f5d10ed10ed012f5d2b2bd42be12b2b2b2b2b1239392f2f
e12b2b2b2b2b2b31305d01140e0223222e0435343e0233321e0233323e02
35342e0635343e0233321e0615140e0223222e0223220e0215141e0602ce
335e824e30574530160a04060b070b2b3f56382a44321b27405055514027
29527b5224483a291507030303070a06092236492f2a4029152840525553
4027010e456c4a260f171914241f131a10071b201b122336252634281f22
2b3e563c3561492c0c1215100c0f1610111910071619161323301c273528
20222a3c5400>HIBBAA+Calibri AddT42Char 
1 3640 410 <00010021ffef026d04ad003a005cb4290011232db8fff0b30f014d2db8ff
f0b30d014d2db8fff6b30c014d2db8ffe8b310014d2db8ffe8b30b014d2d
b801f8400c170d2ded23481d0ded174831b80104b1074d003fed3fedcd3f
ed012f33e12b2b2b2b2b32cdc432313025140e0423222e02351123222635
343e02333335343e0233321e02151533321e02151406232311141633323e
0233321e02026d081020292e174664401d7e0f1205080d087d0713201819
201208e7080c0904120fe7374717241c1408050905045b1d22100e090625
4b734e020e2024131a1107d6070c090404090c07d607111a132420fe0a5d
5f090a09050e1800>HIBBAA+Calibri AddT42Char 
1 3888 437 <00010094ffed039c03bc00320092401f3f34010b27100d014d270a0c014d
27080b014d27100f10014c27100b014d27b801f9b6004011014d001fb8ff
f0b30d014d1fb8fff6b30c014d1fb8fff8b40f10014c1fb8fff8b30b014d
1fb8fff0b40f10014c1fb8fff0b30b014d1fb801f94009132d49270b0519
4924b80105b30e4d054c003f3fed3f1239393f012fe12b2b2b2b2b2bd42b
e12b2b2b2b2b3931305d25140e0223222e023535060623222e023511343e
0233321e021511141e023332363711343e0233321e0215039c07121d1517
1d11064d964d5a7b4c210714201818201308172f48303e7b4507141f1918
20120919080b080404080b0877554e3c6789620222080b090303090b08fd
f44f5f432558550275080b090303090b0800>HIBBAA+Calibri AddT42Char 
1 0 0 <00050000fe7303d2050e000300070039004d004e005bbc000d0152001600
3a01b5b5154444082d07be0143000200200154000800010143400f04020d
b71a1a3f23b735068d031149b8012db43f078d0202003ffddefdce2ffdde
ed12392fed012fdde1dee110f1ce11392f33e1d4e1313001112111011121
1101140e020707140623222e02352726363333323e0235342623220e0223
222e02353436373e0333321e0203140e0223222e0235343e0233321e0201
03d2fc5a034ffd06027e233f5633051e1a0f140d0605021c18122d3c2510
535b253c2e1d0703070603050807283742224b6c4522da07111d15161d12
0808121d16151d1107fddb050efaf2050efb43046cfb9403063b5c3f2403
980a0802040606b81e18192a3b2149560f1310040b13101116080712110c
28445cfd86151c120808121c15151d120808121dfd4d>HIBBAA+Calibri AddT42Char 
HIBBAA+Calibri /CharStrings get begin
/g3 3 def
/g18 18 def
/g24 24 def
/g44 44 def
/g89 89 def
/g90 90 def
/g104 104 def
/g258 258 def
/g286 286 def
/g374 374 def
/g396 396 def
/g400 400 def
/g410 410 def
/g437 437 def
end
HIBBAA+Calibri /Encoding get
dup 32 /g3 put
dup 67 /g18 put
dup 68 /g24 put
dup 72 /g44 put
dup 81 /g89 put
dup 82 /g90 put
dup 85 /g104 put
dup 97 /g258 put
dup 101 /g286 put
dup 110 /g374 put
dup 114 /g396 put
dup 115 /g400 put
dup 116 /g410 put
dup 117 /g437 put
pop
end
%ADOEndSubsetFont
/QNHRNU+Calibri /HIBBAA+Calibri findfont ct_VMDictPut
/QNHRNU+Calibri*1 
[32{/.notdef}rp /g3 34{/.notdef}rp /g18 /g24 3{/.notdef}rp /g44 8{/.notdef}rp 
/g89 /g90 2{/.notdef}rp /g104 11{/.notdef}rp /g258 3{/.notdef}rp /g286 
8{/.notdef}rp /g374 3{/.notdef}rp /g396 /g400 /g410 /g437 138{/.notdef}rp]
QNHRNU+Calibri nf
QNHRNU+Calibri*1 [12 0 0 -12 0 0 ]msf
44.1699 7.95 mo
(RRH)
[6.48037 6.48035 0 ]xsh
216.34 154.33 mo
(Data Center)
[7.42532 5.64005 3.96063 5.74805 2.53107 6.35768 5.98131 6.25916 3.96063 5.98132 0 ]xsh
245.94 54.4198 mo
(User Queue)
[7.70874 4.65479 5.98132 4.2164 2.74704 8.07788 6.2952 6.0173 6.34317 0 ]xsh
grestore
grestore
pgrs
%%PageTrailer
[
[/CSA [/0 /1 ]]
[/CSD [/0 ]]
] del_res
/QNHRNU+Calibri*1 uf
/QNHRNU+Calibri uf
/HIBBAA+Calibri uf
/QNHRNT+Cambria#2320Math-KSCms-UHC-H-Identity-H-Identity-H uf
/QNHRNT+Cambria#2320Math-KSCms-UHC-H-Identity-H /CIDFont ur
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/restore_mysetup gx
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Utils begin
[/EMC pdfmark_5
currentdict Adobe_AGM_Utils eq {end} if
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EOF
